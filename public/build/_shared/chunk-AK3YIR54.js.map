{
  "version": 3,
  "sources": ["../../../app/routes/home/findcampaign.tsx", "../../../app/components/utils/brandcard.tsx"],
  "sourcesContent": ["import {\r\n  faSortDown,\r\n  faRemove,\r\n  faTrash,\r\n  faHeart,\r\n  faSearch,\r\n  faAdd,\r\n  faXmark,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport ReactSwitch from \"react-switch\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { CampaginCard } from \"~/components/utils/campagincard\";\r\nimport { CampaignSearchMode } from \"~/types/projectenums\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { getCampaignType } from \"~/utils\";\r\nimport { BrandCard } from \"~/components/utils/brandcard\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport InfluencerCard from \"~/components/utils/influencercard\";\r\nimport useLocalStorageState from \"use-local-storage-state\";\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n  const cookieHeader = props.request.headers.get(\"Cookie\");\r\n  const cookie = await userPrefs.parse(cookieHeader);\r\n  const platformRes = await axios.post(`${BaseUrl}/api/getplatform`);\r\n  const categoryRes = await axios.post(`${BaseUrl}/api/getcategory`);\r\n  const countryRes = await axios.post(`${BaseUrl}/api/getcountry`);\r\n  return json({\r\n    user: cookie.user,\r\n    platform: platformRes.data.data,\r\n    category: categoryRes.data.data,\r\n    country: countryRes.data.data,\r\n  });\r\n};\r\n\r\nconst FindCampaign = () => {\r\n  const loader = useLoaderData();\r\n  const isbrand = loader.user.role.code != 10;\r\n  const [searchBrand, setSearchBrand] = useState<boolean>(false);\r\n  return (\r\n    <>\r\n      {isbrand ? (\r\n        <>\r\n          {/* brand search options start here */}\r\n          <div>\r\n            <div className=\"flex my-6 md:flex-row flex-col\">\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-black text-left mt-4\">\r\n                  Find Influencer\r\n                </h1>\r\n                <p className=\"text-md font-normal text-black text-left\">\r\n                  Here you can manage all the influecner.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {/* add search option here */}\r\n            <InfluencerSearch\r\n              platform={loader.platform}\r\n              country={loader.country}\r\n              category={loader.category}\r\n            ></InfluencerSearch>\r\n          </div>\r\n          {/* brand search options start here */}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* influencer search options start from here */}\r\n          <div>\r\n            <div className=\"flex my-6 md:flex-row flex-col\">\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-black text-left mt-4\">\r\n                  Find {searchBrand ? \"brand\" : \"campaign\"}\r\n                </h1>\r\n                <p className=\"text-md font-normal text-black text-left\">\r\n                  Here you can search manage all the{\" \"}\r\n                  {searchBrand ? \"brand\" : \"campaign\"} that you are\r\n                  participating in.\r\n                </p>\r\n              </div>\r\n              <div className=\"hidden md:block md:grow\"></div>\r\n              <div className=\"flex justify-center\">\r\n                <div\r\n                  onClick={() => {\r\n                    setSearchBrand(false);\r\n                  }}\r\n                >\r\n                  <CusButton\r\n                    height=\"h-12\"\r\n                    text=\"Campaign\"\r\n                    fontwidth=\"font-bold\"\r\n                    background={searchBrand ? \"bg-gray-300\" : \"bg-cyan-300\"}\r\n                    textColor={searchBrand ? \"text-gray-600\" : \"text-black\"}\r\n                  ></CusButton>\r\n                </div>\r\n                <div className=\"w-8\"></div>\r\n                <div\r\n                  onClick={() => {\r\n                    setSearchBrand(true);\r\n                  }}\r\n                >\r\n                  <CusButton\r\n                    height=\"h-12\"\r\n                    text=\"Brand\"\r\n                    fontwidth=\"font-bold\"\r\n                    background={searchBrand ? \"bg-cyan-300\" : \"bg-gray-300\"}\r\n                    textColor={searchBrand ? \"text-black\" : \"text-gray-600\"}\r\n                  ></CusButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {searchBrand ? (\r\n              <BrandSearch></BrandSearch>\r\n            ) : (\r\n              <CampaignSearch\r\n                platform={loader.platform}\r\n                country={loader.country}\r\n                category={loader.category}\r\n              ></CampaignSearch>\r\n            )}\r\n          </div>\r\n          {/* influencer search otption end here */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FindCampaign;\r\n\r\ntype CampaignSearchProps = {\r\n  country: any;\r\n  platform: any;\r\n  category: any;\r\n};\r\n\r\nconst CampaignSearch = (props: CampaignSearchProps) => {\r\n  const country = props.country;\r\n  const platform = props.platform;\r\n  const category = props.category;\r\n  const [searchType, setSearchType] = useState<CampaignSearchMode>(\r\n    CampaignSearchMode.TextSearch\r\n  );\r\n\r\n  const [active, setActive] = useState(false);\r\n  const [camSearchResult, setCamSearchResult] = useState<any[]>([]);\r\n  const champTextSearch = useRef<HTMLInputElement>(null);\r\n  const [selCountry, setSelCountry] = useState<any[]>([]);\r\n  const [con, setcon] = useState<boolean>(false);\r\n  const [selPlatform, setSelectedPlatform] = useState<any[]>([]);\r\n\r\n  const [selcategory, setSelcategory] = useState<any[]>([]);\r\n  const [cat, setcat] = useState<boolean>(false);\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const minReachSearch = useRef<HTMLInputElement>(null);\r\n  const maxReachSearch = useRef<HTMLInputElement>(null);\r\n  const cppSearch = useRef<HTMLInputElement>(null);\r\n  const minTargetSearch = useRef<HTMLInputElement>(null);\r\n  const totalTargetSearch = useRef<HTMLInputElement>(null);\r\n\r\n  const camptextsearch = async () => {\r\n    setError(null);\r\n    let req: any = {\r\n      active: active ? \"1\" : \"0\",\r\n    };\r\n\r\n    if (\r\n      champTextSearch!.current!.value != null &&\r\n      champTextSearch!.current!.value != undefined &&\r\n      champTextSearch!.current!.value != \"\"\r\n    )\r\n      req.name = champTextSearch!.current!.value;\r\n    if (\r\n      minReachSearch.current?.value != null &&\r\n      minReachSearch.current?.value != undefined &&\r\n      minReachSearch.current?.value != \"\"\r\n    )\r\n      req.minReach = minReachSearch.current?.value;\r\n    if (\r\n      maxReachSearch.current?.value != null &&\r\n      maxReachSearch.current?.value != undefined &&\r\n      maxReachSearch.current?.value != \"\"\r\n    )\r\n      req.maxReach = maxReachSearch.current?.value;\r\n    if (\r\n      cppSearch.current?.value != null &&\r\n      cppSearch.current?.value != undefined &&\r\n      cppSearch.current?.value != \"\"\r\n    )\r\n      req.costPerPost = cppSearch.current?.value;\r\n    if (\r\n      minTargetSearch.current?.value != null &&\r\n      minTargetSearch.current?.value != undefined &&\r\n      minTargetSearch.current?.value != \"\"\r\n    )\r\n      req.minTarget = minTargetSearch.current?.value;\r\n    if (\r\n      totalTargetSearch.current?.value != null &&\r\n      totalTargetSearch.current?.value != undefined &&\r\n      totalTargetSearch.current?.value != \"\"\r\n    )\r\n      req.totalTarget = totalTargetSearch.current?.value;\r\n\r\n    const data = await axios.post(`${BaseUrl}/api/campaign-search`, req);\r\n    if (data.data.status == false) return setError(data.data.message);\r\n    setCamSearchResult(data.data.data);\r\n  };\r\n\r\n  const campadvancesearch = async () => {\r\n    setError(null);\r\n    if (selcategory.length == 0) return setError(\"Select the category\");\r\n    if (selPlatform.length == 0) return setError(\"Select the platform\");\r\n    if (selCountry.length == 0) return setError(\"Select the country\");\r\n    let req = {\r\n      country: selcategory[0][\"id\"],\r\n      platform: selPlatform.join(\",\"),\r\n      category: selCountry[0][\"id\"],\r\n      active: active ? \"1\" : \"0\",\r\n    };\r\n\r\n    if (\r\n      selcategory.length != 0\r\n    )\r\n      req.totalTarget = totalTargetSearch.current?.value;\r\n\r\n\r\n    const data = await axios.post(`${BaseUrl}/api/campaign-search`, req);\r\n    if (data.data.status == false) return setError(data.data.message);\r\n    setCamSearchResult(data.data.data);\r\n  };\r\n\r\n  const delsearch = () => {\r\n    setCamSearchResult([]);\r\n  };\r\n  //all filter box\r\n  const [showFilter, setFilter] = useState<boolean>(false);\r\n\r\n  //save filter fox\r\n  const [filterName, setFilterName] = useState<boolean>(false);\r\n\r\n  //for filter error\r\n  const [nameError, setNameError] = useState<string | null>(null);\r\n\r\n  const [localFilter, setLocalFilter] = useLocalStorageState<any[]>(\r\n    \"CampaignSearch\",\r\n    {\r\n      defaultValue: [],\r\n    }\r\n  );\r\n  const nameFilterRef = useRef<HTMLInputElement>(null);\r\n  const saveFilter = (name: string) => {\r\n    if (name == \"\" || name == null || name == undefined)\r\n      return setNameError(\"Enter the Filter name\");\r\n    if (selcategory.length == 0) return setNameError(\"Select the category\");\r\n    if (selPlatform.length == 0) return setNameError(\"Select the platform\");\r\n    if (selCountry.length == 0) return setNameError(\"Select the country\");\r\n\r\n    for (let i: number = 0; i < localFilter.length; i++) {\r\n      if (name == localFilter[i][\"name\"]) {\r\n        return setNameError(\"Filter name already exist.\");\r\n      }\r\n    }\r\n  \r\n    const filter = {\r\n      name: name,\r\n      country: selCountry,\r\n      platform: selPlatform,\r\n      category: selcategory,\r\n      active: active,\r\n    };\r\n    setLocalFilter([...localFilter, filter]);\r\n    nameFilterRef!.current!.value = \"\";\r\n    setFilterName(false);\r\n  };\r\n  const loadFilter = (filterdata: any) => {\r\n    setSelcategory(filterdata[\"category\"]);\r\n    setSelectedPlatform(filterdata[\"platform\"]);\r\n    setSelCountry(filterdata[\"country\"]);\r\n    setActive(filterdata[\"active\"]);\r\n    setFilter(false);\r\n  };\r\n\r\n  function handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>) {\r\n    const keyCode = event.keyCode || event.which;\r\n    const keyValue = String.fromCharCode(keyCode);\r\n    const regex = /^[0-9\\b]*$/;\r\n    if (!regex.test(keyValue)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"rounded-xl shadow-xl p-6 bg-white\">\r\n          <div className=\"flex px-2 my-4\">\r\n            <h2 className=\"text-black text-xl text-left font-bold\">Filter</h2>\r\n            <div className=\"grow\"></div>\r\n            {searchType == CampaignSearchMode.TextSearch ? (\r\n              <div className=\"flex gap-x-2\">\r\n                <div className=\"relative\">\r\n                  <button\r\n                    className=\"bg-gray-200  rounded-md px-4 py-1 font-medium text-md text-center\"\r\n                    onClick={() => {\r\n                      setFilterName(!filterName);\r\n                    }}\r\n                  >\r\n                    Save filter\r\n                  </button>\r\n                  <div\r\n                    className={`w-80 right-0 max-h-56 overflow-y-scroll no-scrollbar p-2 bg-gray-100 shadow-xl absolute translate-y-2 rounded-lg ${filterName ? \"\" : \"hidden\"\r\n                      }`}\r\n                  >\r\n                    <p className=\"text-center text-sm text-slate-900 font-semibold my-2\">\r\n                      Filter name\r\n                    </p>\r\n                    <input\r\n                      ref={nameFilterRef}\r\n                      type=\"text\"\r\n                      className=\"bg-transparent w-full outline-none border-2 rounded-md my-2 border-green-500 px-2 py-1\"\r\n                    />\r\n                    {nameError == \"\" ||\r\n                      nameError == null ||\r\n                      nameError == undefined ? null : (\r\n                      <div className=\"bg-red-500 bg-opacity-10 border text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-2\">\r\n                        {nameError}\r\n                      </div>\r\n                    )}\r\n                    <button\r\n                      onClick={() => {\r\n                        saveFilter(nameFilterRef!.current!.value);\r\n                      }}\r\n                      className=\"text-center font-semibold text-md text-green-500 hover:text-white w-full hover:bg-green-500 border border-green-500\"\r\n                    >\r\n                      SAVE\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setFilterName(false);\r\n                      }}\r\n                      className=\"text-center font-semibold text-md text-red-500 hover:text-white w-full hover:bg-red-500 border border-red-500 my-1\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-6\"></div>\r\n                <div className=\"relative\">\r\n                  <button\r\n                    className=\"bg-gray-200  rounded-md px-4 py-1 font-medium text-md text-center\"\r\n                    onClick={() => {\r\n                      setFilter(!showFilter);\r\n                    }}\r\n                  >\r\n                    Saved filter\r\n                    <FontAwesomeIcon icon={faSortDown}></FontAwesomeIcon>{\" \"}\r\n                  </button>\r\n                  <div\r\n                    className={`w-full max-h-56 overflow-y-scroll no-scrollbar p-2 bg-white shadow-xl absolute translate-y-2 rounded-lg ${showFilter ? \"\" : \"hidden\"\r\n                      }`}\r\n                  >\r\n                    {localFilter.map((val: any, index: number) => {\r\n                      return (\r\n                        <div\r\n                          key={index}\r\n                          className=\"w-full text-slate-900 py-1 text-center text hover:bg-green-500 hover:bg-opacity-20 rounded-md hover:border-l-2 hover:border-green-400 cursor-pointer\"\r\n                          onClick={() => {\r\n                            loadFilter(val);\r\n                          }}\r\n                        >\r\n                          {val[\"name\"]}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          {/* campaign text search start here */}\r\n          {searchType == CampaignSearchMode.AdvanceSearch ? (\r\n            <div className=\"w-full\">\r\n              {/* search options */}\r\n              <div className=\"w-full flex flex-wrap gap-6 justify-between\">\r\n                <div className=\"w-80\">\r\n                  <p className=\"text-xl font-semibold text-primary\">Search</p>\r\n                  <div className=\"bg-gray-200 rounded-md py-1 px-4 flex items-center\">\r\n                    <input\r\n                      ref={champTextSearch}\r\n                      type=\"text\"\r\n                      className=\"bg-transparent w-full outline-none py-1 px-2\"\r\n                      placeholder=\"Start typing to search..\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-80\">\r\n                  <p className=\"text-xl font-semibold text-primary\">\r\n                    Min Reach\r\n                  </p>\r\n                  <div className=\"bg-gray-200 rounded-md py-1 px-4 flex items-center\">\r\n                    <input\r\n                      ref={minReachSearch}\r\n                      type=\"text\"\r\n                      className=\"bg-transparent w-full outline-none py-1 px-2\"\r\n                      placeholder=\"Min Reach\"\r\n                      onKeyDown={handleKeyPress}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-80\">\r\n                  <p className=\"text-xl font-semibold text-primary\">\r\n                    Max Reach\r\n                  </p>\r\n                  <div className=\"bg-gray-200 rounded-md py-1 px-4 flex items-center\">\r\n                    <input\r\n                      ref={maxReachSearch}\r\n                      type=\"text\"\r\n                      className=\"bg-transparent w-full outline-none py-1 px-2\"\r\n                      placeholder=\"Max Reach\"\r\n                      onKeyDown={handleKeyPress}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-80\">\r\n                  <p className=\"text-xl font-semibold text-primary\">\r\n                    Cost Per Post\r\n                  </p>\r\n                  <div className=\"bg-gray-200 rounded-md py-1 px-4 flex items-center\">\r\n                    <input\r\n                      ref={cppSearch}\r\n                      type=\"text\"\r\n                      className=\"bg-transparent w-full outline-none py-1 px-2\"\r\n                      placeholder=\"Cost Per Post\"\r\n                      onKeyDown={handleKeyPress}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-80\">\r\n                  <p className=\"text-xl font-semibold text-primary\">\r\n                    Min Target\r\n                  </p>\r\n                  <div className=\"bg-gray-200 rounded-md py-1 px-4 flex items-center\">\r\n                    <input\r\n                      ref={minTargetSearch}\r\n                      type=\"text\"\r\n                      className=\"bg-transparent w-full outline-none py-1 px-2\"\r\n                      placeholder=\"Min Target\"\r\n                      onKeyDown={handleKeyPress}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-80\">\r\n                  <p className=\"text-xl font-semibold text-primary\">\r\n                    Total target\r\n                  </p>\r\n                  <div className=\"bg-gray-200 rounded-md py-1 px-4 flex items-center\">\r\n                    <input\r\n                      ref={totalTargetSearch}\r\n                      type=\"text\"\r\n                      className=\"bg-transparent w-full outline-none py-1 px-2\"\r\n                      placeholder=\"Total Target\"\r\n                      onKeyDown={handleKeyPress}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* search button */}\r\n              <div className=\"flex items-center\">\r\n                <div className=\"flex\">\r\n                  <ReactSwitch\r\n                    onChange={() => setActive(!active)}\r\n                    checked={active}\r\n                    checkedIcon={false}\r\n                    uncheckedIcon={false}\r\n                    onColor=\"#03125E\"\r\n                  ></ReactSwitch>\r\n                  <p className=\"text-primary font-bold text-ld ml-2\">\r\n                    Show only active campaigns\r\n                  </p>\r\n                </div>\r\n                <div className=\"grow\"></div>\r\n                <div\r\n                  className=\"text-primary text-sm font-semibold cursor-pointer\"\r\n                  onClick={() => {\r\n                    setSearchType(CampaignSearchMode.TextSearch);\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={faSortDown}></FontAwesomeIcon> Normal\r\n                  filter\r\n                </div>\r\n                <div className=\"w-10\"></div>\r\n                <FontAwesomeIcon\r\n                  onClick={delsearch}\r\n                  className=\"text-primary text-2xl mx-2\"\r\n                  icon={faTrash}\r\n                ></FontAwesomeIcon>\r\n                <div className=\"w-4\"></div>\r\n                <div\r\n                  onClick={() => {\r\n                    camptextsearch();\r\n                  }}\r\n                >\r\n                  <CusButton\r\n                    text=\"Search\"\r\n                    textColor={\"text-white\"}\r\n                    background={\"bg-primary\"}\r\n                    fontwidth={\"font-bold\"}\r\n                    width={\"w-32\"}\r\n                  ></CusButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {/* campaign text search end here */}\r\n          {/* campaign advance search start here */}\r\n          {searchType == CampaignSearchMode.TextSearch ? (\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-y-4\">\r\n              <div className=\"px-2\">\r\n                {/* category start here */}\r\n                <h1 className=\"text-primary text-lg font-bold mb\">Category</h1>\r\n                <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 w-full relative\">\r\n                  <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                    {selcategory.map((value: any, i: number) => {\r\n                      return (\r\n                        <div\r\n                          key={i}\r\n                          className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\"\r\n                        >\r\n                          <h1 className=\" text-black font-semibold text-center w-40\">\r\n                            {`${value[\"categoryName\"]} - [${value[\"categoryCode\"]}]`}\r\n                          </h1>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"grow\"></div>\r\n                  <div\r\n                    className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\"\r\n                    onClick={() => {\r\n                      setcat(!cat);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={cat ? faXmark : faAdd}\r\n                    ></FontAwesomeIcon>\r\n                  </div>\r\n                  <div\r\n                    className={`bg-gray-200 w-full h-80 overflow-y-scroll no-scrollbar absolute top-12 z-50 rounded-lg ${cat ? \"\" : \"hidden\"\r\n                      }`}\r\n                  >\r\n                    <div className=\"min-h-80 w-full p-4 overflow-y-scroll no-scrollbar\">\r\n                      {category.map((val: any, i: number) => {\r\n                        return (\r\n                          <h1\r\n                            onClick={() => {\r\n                              if (selcategory.includes(val)) {\r\n                                let addcur = selcategory.filter(\r\n                                  (data) => data != val\r\n                                );\r\n                                setSelcategory(addcur);\r\n                              } else {\r\n                                setSelcategory([val]);\r\n                              }\r\n                              setcat(false);\r\n                            }}\r\n                            key={i}\r\n                            className={`text-lg text-left text-gray-600 font-semibold cursor-pointer w-full my-2 border-b-2 ${selcategory.includes(val)\r\n                              ? \"border-green-500 text-green-500\"\r\n                              : \"border-gray-500 text-black\"\r\n                              }  no-scrollbar`}\r\n                          >\r\n                            {val[\"categoryCode\"]} - {val[\"categoryName\"]}{\" \"}\r\n                          </h1>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* category end here */}\r\n                <div className=\"flex mt-8\">\r\n                  <ReactSwitch\r\n                    onChange={() => setActive(!active)}\r\n                    checked={active}\r\n                    checkedIcon={false}\r\n                    uncheckedIcon={false}\r\n                    onColor=\"#03125E\"\r\n                  ></ReactSwitch>\r\n                  <p className=\"text-primary font-bold text-ld ml-2\">\r\n                    Show only active campaigns\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"ml-2\">\r\n                <h1 className=\"text-primary text-lg font-bold mb\">Platforms</h1>\r\n                <div className=\"gap-2 flex  overflow-x-scroll flex-nowrap no-scrollbar pb-4\">\r\n                  {platform.map((val: any, i: number) => {\r\n                    return (\r\n                      <div\r\n                        key={i}\r\n                        className={`shrink-0 p-1 w-10 h-10 shadow-lg rounded-lg ${selPlatform.includes(val.id)\r\n                          ? \"bg-white \"\r\n                          : \"bg-gray-200\"\r\n                          } `}\r\n                        onClick={() => {\r\n                          if (selPlatform.includes(val.id)) {\r\n                            let setdata = selPlatform.filter(\r\n                              (platdata) => platdata != val.id\r\n                            );\r\n                            setSelectedPlatform(setdata);\r\n                          } else {\r\n                            setSelectedPlatform([...selPlatform, val.id]);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={platform[i][\"platformLogoUrl\"]}\r\n                          alt=\"error\"\r\n                          className=\"object-cover w-full h-full inline-block\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div className=\"px-2\">\r\n                {/* country start here */}\r\n                <p className=\"text-primary text-left font-bold text-lg\">\r\n                  Country\r\n                </p>\r\n                <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full relative\">\r\n                  <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                    {selCountry.map((value: any, i: number) => {\r\n                      return (\r\n                        <div\r\n                          key={i}\r\n                          className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\"\r\n                        >\r\n                          <h1 className=\" text-black font-semibold text-center w-40\">\r\n                            {`${value[\"name\"]} - [${value[\"code\"]}]`}\r\n                          </h1>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"grow\"></div>\r\n                  <div\r\n                    className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\"\r\n                    onClick={() => {\r\n                      setcon(!con);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={con ? faXmark : faAdd}\r\n                    ></FontAwesomeIcon>\r\n                  </div>\r\n                  <div\r\n                    className={`bg-gray-200 w-full h-80 overflow-y-scroll no-scrollbar absolute top-12 z-50 rounded-lg p-4 ${con ? \"\" : \"hidden\"\r\n                      }`}\r\n                  >\r\n                    {\" \"}\r\n                    <div className=\"min-h-80 overflow-y-scroll no-scrollbar\">\r\n                      {country.map((val: any, i: number) => {\r\n                        return (\r\n                          <h1\r\n                            onClick={() => {\r\n                              if (selCountry.includes(val)) {\r\n                                let addcur = selCountry.filter(\r\n                                  (data) => data != val\r\n                                );\r\n                                setSelCountry(addcur);\r\n                              } else {\r\n                                setSelCountry([val]);\r\n                              }\r\n                              setcon(false);\r\n                            }}\r\n                            key={i}\r\n                            className={`text-lg text-gray-600 text-left font-semibold  w-full my-2 border-b-2 ${selCountry.includes(val)\r\n                              ? \"border-green-500 text-green-500\"\r\n                              : \"border-gray-400 text-black\"\r\n                              }  no-scrollbar`}\r\n                          >\r\n                            {val[\"code\"]} - {val[\"name\"]}\r\n                          </h1>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* country end here */}\r\n                <div className=\"flex mt-4 items-center\">\r\n                  <div\r\n                    className=\"text-primary text-md font-semibold cursor-pointer\"\r\n                    onClick={() => {\r\n                      setSearchType(CampaignSearchMode.AdvanceSearch);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faSortDown}></FontAwesomeIcon>{\" \"}\r\n                    Advanced filter\r\n                  </div>\r\n                  <div className=\"grow\"></div>\r\n                  <FontAwesomeIcon\r\n                    onClick={delsearch}\r\n                    className=\"text-primary text-2xl\"\r\n                    icon={faTrash}\r\n                  ></FontAwesomeIcon>\r\n                  <div className=\"w-4\"></div>\r\n                  <div onClick={campadvancesearch}>\r\n                    <CusButton\r\n                      text=\"Search\"\r\n                      textColor={\"text-white\"}\r\n                      background={\"bg-primary\"}\r\n                      fontwidth={\"font-bold\"}\r\n                    ></CusButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {/* campaign advance search end here */}\r\n          {error == \"\" || error == null || error == undefined ? null : (\r\n            <div className=\"bg-red-500 bg-opacity-10 border text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n              {error}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {camSearchResult.length != 0 ? (\r\n          <SearchedCampaign data={camSearchResult}></SearchedCampaign>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\ntype InfluencerSearchProps = {\r\n  country: any;\r\n  platform: any;\r\n  category: any;\r\n};\r\nexport const InfluencerSearch = (props: InfluencerSearchProps) => {\r\n  const country = props.country;\r\n  const platform = props.platform;\r\n  const category = props.category;\r\n  const [searchType, setSearchType] = useState<CampaignSearchMode>(\r\n    CampaignSearchMode.AdvanceSearch\r\n  );\r\n\r\n  const [active, setActive] = useState(false);\r\n  const [camSearchResult, setCamSearchResult] = useState<any[]>([]);\r\n  const champTextSearch = useRef<HTMLInputElement>(null);\r\n  const [selCountry, setSelCountry] = useState<any[]>([]);\r\n  const [con, setcon] = useState<boolean>(false);\r\n  const [selPlatform, setSelectedPlatform] = useState<any[]>([]);\r\n\r\n  const [selcategory, setSelcategory] = useState<any[]>([]);\r\n  const [cat, setcat] = useState<boolean>(false);\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const camptextsearch = async (searchtext: string) => {\r\n    setError(null);\r\n\r\n    champTextSearch!.current!.value = \"\";\r\n    if (searchtext == \"\" || searchtext == null || searchtext == undefined)\r\n      return setError(\"Fill the field to start searching\");\r\n    let req = { search: searchtext, role: 10 };\r\n    const data = await axios.post(`${BaseUrl}/api/user-search`, req);\r\n    if (data.data.status == false) {\r\n      setCamSearchResult([]);\r\n      return setError(data.data.message);\r\n    }\r\n    setCamSearchResult(data.data.data);\r\n  };\r\n\r\n  const campadvancesearch = async () => {\r\n    setError(null);\r\n\r\n    if (selcategory.length == 0) {\r\n      setCamSearchResult([]);\r\n      return setError(\"Select the category\");\r\n    }\r\n    if (selPlatform.length == 0) {\r\n      setCamSearchResult([]);\r\n      return setError(\"Select the platform\");\r\n    }\r\n    if (selCountry.length == 0) {\r\n      setCamSearchResult([]);\r\n      return setError(\"Select the country\");\r\n    }\r\n    let req = {\r\n      country: selCountry[0][\"id\"],\r\n      platform: selPlatform.join(\",\"),\r\n      category: selcategory[0][\"id\"],\r\n      active: active ? \"1\" : \"0\",\r\n      role: 10,\r\n    };\r\n    const data = await axios.post(`${BaseUrl}/api/user-search`, req);\r\n    if (data.data.status == false) return setError(data.data.message);\r\n    setCamSearchResult(data.data.data);\r\n  };\r\n\r\n  const delsearch = () => {\r\n    setCamSearchResult([]);\r\n  };\r\n\r\n  //all filter box\r\n  const [showFilter, setFilter] = useState<boolean>(false);\r\n\r\n  //save filter fox\r\n  const [filterName, setFilterName] = useState<boolean>(false);\r\n\r\n  //for filter error\r\n  const [nameError, setNameError] = useState<string | null>(null);\r\n\r\n  const [localFilter, setLocalFilter] = useLocalStorageState<any[]>(\r\n    \"InfluencerSearch\",\r\n    {\r\n      defaultValue: [],\r\n    }\r\n  );\r\n  const nameFilterRef = useRef<HTMLInputElement>(null);\r\n  const saveFilter = (name: string) => {\r\n    if (name == \"\" || name == null || name == undefined)\r\n      return setNameError(\"Enter the Filter name\");\r\n    if (selcategory.length == 0) return setNameError(\"Select the category\");\r\n    if (selPlatform.length == 0) return setNameError(\"Select the platform\");\r\n    if (selCountry.length == 0) return setNameError(\"Select the country\");\r\n\r\n    for (let i: number = 0; i < localFilter.length; i++) {\r\n      if (name == localFilter[i][\"name\"]) {\r\n        return setNameError(\"Filter name already exist.\");\r\n      }\r\n    }\r\n    const filter = {\r\n      name: name,\r\n      country: selCountry,\r\n      platform: selPlatform,\r\n      category: selcategory,\r\n      active: active,\r\n    };\r\n    setLocalFilter([...localFilter, filter]);\r\n    nameFilterRef!.current!.value = \"\";\r\n    setFilterName(false);\r\n  };\r\n\r\n  const loadFilter = (filterdata: any) => {\r\n    setSelcategory(filterdata[\"category\"]);\r\n    setSelectedPlatform(filterdata[\"platform\"]);\r\n    setSelCountry(filterdata[\"country\"]);\r\n    setActive(filterdata[\"active\"]);\r\n    setFilter(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"rounded-xl shadow-xl p-6 bg-white\">\r\n          <div className=\"flex px-2 my-4\">\r\n            <h2 className=\"text-black text-xl text-left font-bold\">Filter</h2>\r\n            <div className=\"grow\"></div>\r\n            {searchType == CampaignSearchMode.AdvanceSearch ? (\r\n              <div className=\"flex gap-x-2\">\r\n                <div className=\"relative\">\r\n                  <button\r\n                    className=\"bg-gray-200  rounded-md px-4 py-1 font-medium text-md text-center\"\r\n                    onClick={() => {\r\n                      setFilterName(!filterName);\r\n                    }}\r\n                  >\r\n                    Save filter\r\n                  </button>\r\n                  <div\r\n                    className={`w-80 right-0 max-h-56 overflow-y-scroll no-scrollbar p-2 bg-gray-100 shadow-xl absolute translate-y-2 rounded-lg ${filterName ? \"\" : \"hidden\"\r\n                      }`}\r\n                  >\r\n                    <p className=\"text-center text-sm text-slate-900 font-semibold my-2\">\r\n                      Filter name\r\n                    </p>\r\n                    <input\r\n                      ref={nameFilterRef}\r\n                      type=\"text\"\r\n                      className=\"bg-transparent w-full outline-none border-2 rounded-md my-2 border-green-500 px-2 py-1\"\r\n                    />\r\n                    {nameError == \"\" ||\r\n                      nameError == null ||\r\n                      nameError == undefined ? null : (\r\n                      <div className=\"bg-red-500 bg-opacity-10 border text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-2\">\r\n                        {nameError}\r\n                      </div>\r\n                    )}\r\n                    <button\r\n                      onClick={() => {\r\n                        saveFilter(nameFilterRef!.current!.value);\r\n                      }}\r\n                      className=\"text-center font-semibold text-md text-green-500 hover:text-white w-full hover:bg-green-500 border border-green-500\"\r\n                    >\r\n                      SAVE\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setFilterName(false);\r\n                      }}\r\n                      className=\"text-center font-semibold text-md text-red-500 hover:text-white w-full hover:bg-red-500 border border-red-500 my-1\"\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-6\"></div>\r\n                <div className=\"relative\">\r\n                  <button\r\n                    className=\"bg-gray-200  rounded-md px-4 py-1 font-medium text-md text-center\"\r\n                    onClick={() => {\r\n                      setFilter(!showFilter);\r\n                    }}\r\n                  >\r\n                    Saved filter\r\n                    <FontAwesomeIcon icon={faSortDown}></FontAwesomeIcon>{\" \"}\r\n                  </button>\r\n                  <div\r\n                    className={`w-full max-h-56 overflow-y-scroll no-scrollbar p-2 bg-white shadow-xl absolute translate-y-2 rounded-lg ${showFilter ? \"\" : \"hidden\"\r\n                      }`}\r\n                  >\r\n                    {localFilter.map((val: any, index: number) => {\r\n                      return (\r\n                        <div\r\n                          key={index}\r\n                          className=\"w-full text-slate-900 py-1 text-center text hover:bg-green-500 hover:bg-opacity-20 rounded-md hover:border-l-2 hover:border-green-400 cursor-pointer\"\r\n                          onClick={() => {\r\n                            loadFilter(val);\r\n                          }}\r\n                        >\r\n                          {val[\"name\"]}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          {/* campaign text search start here */}\r\n          {searchType == CampaignSearchMode.TextSearch ? (\r\n            <div className=\"flex flex-col lg:flex-row\">\r\n              <div className=\"grid place-items-start lg:place-content-center\">\r\n                <div className=\"bg-gray-200 rounded-md py-1 px-4 w-full flex items-center\">\r\n                  <FontAwesomeIcon\r\n                    className=\"text-gray-600\"\r\n                    icon={faSearch}\r\n                  ></FontAwesomeIcon>\r\n                  <input\r\n                    ref={champTextSearch}\r\n                    type=\"text\"\r\n                    className=\"bg-transparent w-full outline-none py-1 px-2\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"w-8\"></div>\r\n              <div className=\"flex items-center\">\r\n                <div\r\n                  className=\"text-primary text-sm font-semibold cursor-pointer\"\r\n                  onClick={() => {\r\n                    setSearchType(CampaignSearchMode.AdvanceSearch);\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={faSortDown}></FontAwesomeIcon> Advanced\r\n                  filter\r\n                </div>\r\n                <div className=\"grow\"></div>\r\n                <FontAwesomeIcon\r\n                  onClick={delsearch}\r\n                  className=\"text-primary text-2xl mx-2\"\r\n                  icon={faTrash}\r\n                ></FontAwesomeIcon>\r\n                <div className=\"w-4\"></div>\r\n                <div\r\n                  onClick={() => {\r\n                    camptextsearch(champTextSearch!.current!.value);\r\n                  }}\r\n                >\r\n                  <CusButton\r\n                    text=\"Search\"\r\n                    textColor={\"text-white\"}\r\n                    background={\"bg-primary\"}\r\n                    fontwidth={\"font-bold\"}\r\n                    width={\"w-32\"}\r\n                  ></CusButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {/* campaign text search end here */}\r\n          {/* campaign advance search start here */}\r\n          {searchType == CampaignSearchMode.AdvanceSearch ? (\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-y-4\">\r\n              <div className=\"px-2\">\r\n                {/* category start here */}\r\n                <h1 className=\"text-primary text-lg font-bold mb\">Category</h1>\r\n                <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n                  <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                    {selcategory.map((value: any, i: number) => {\r\n                      return (\r\n                        <div\r\n                          key={i}\r\n                          className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\"\r\n                        >\r\n                          <h1 className=\" text-black font-semibold text-center w-40\">\r\n                            {`${value[\"categoryName\"]} - [${value[\"categoryCode\"]}]`}\r\n                          </h1>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"grow\"></div>\r\n                  <div\r\n                    className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\"\r\n                    onClick={() => {\r\n                      setcat(true);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${cat ? \"\" : \"hidden\"\r\n                    } grid place-items-center`}\r\n                >\r\n                  <div className=\"bg-white p-10 cursor-pointer\">\r\n                    <div className=\"min-h-80 w-80 overflow-y-scroll no-scrollbar\">\r\n                      {category.map((val: any, i: number) => {\r\n                        return (\r\n                          <h1\r\n                            onClick={() => {\r\n                              if (selcategory.includes(val)) {\r\n                                let addcur = selcategory.filter(\r\n                                  (data) => data != val\r\n                                );\r\n                                setSelcategory(addcur);\r\n                              } else {\r\n                                setSelcategory([val]);\r\n                              }\r\n                              setcat(false);\r\n                            }}\r\n                            key={i}\r\n                            className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selcategory.includes(val)\r\n                              ? \"border-green-500 text-green-500\"\r\n                              : \"border-gray-800 text-black\"\r\n                              }  no-scrollbar`}\r\n                          >\r\n                            {val[\"categoryCode\"]} - {val[\"categoryName\"]}{\" \"}\r\n                          </h1>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* category end here */}\r\n                <div className=\"flex mt-8\">\r\n                  <ReactSwitch\r\n                    onChange={() => setActive(!active)}\r\n                    checked={active}\r\n                    checkedIcon={false}\r\n                    uncheckedIcon={false}\r\n                    onColor=\"#03125E\"\r\n                  ></ReactSwitch>\r\n                  <p className=\"text-primary font-bold text-ld ml-2\">\r\n                    Show only active influecner\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"ml-2\">\r\n                <h1 className=\"text-primary text-lg font-bold mb\">Platforms</h1>\r\n                <div className=\"gap-2 flex  overflow-x-scroll flex-nowrap no-scrollbar pb-2\">\r\n                  {platform.map((val: any, i: number) => {\r\n                    return (\r\n                      <div\r\n                        key={i}\r\n                        className={`shrink-0 p-1 w-10 h-10 shadow-lg rounded-lg ${selPlatform.includes(val.id)\r\n                          ? \"bg-white \"\r\n                          : \"bg-gray-200\"\r\n                          } `}\r\n                        onClick={() => {\r\n                          if (selPlatform.includes(val.id)) {\r\n                            let setdata = selPlatform.filter(\r\n                              (platdata) => platdata != val.id\r\n                            );\r\n                            setSelectedPlatform(setdata);\r\n                          } else {\r\n                            setSelectedPlatform([...selPlatform, val.id]);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={platform[i][\"platformLogoUrl\"]}\r\n                          alt=\"error\"\r\n                          className=\"object-cover w-full h-full inline-block\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div className=\"px-2\">\r\n                {/* country start here */}\r\n                <p className=\"text-primary text-left font-bold text-lg\">\r\n                  Country\r\n                </p>\r\n                <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n                  <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                    {selCountry.map((value: any, i: number) => {\r\n                      return (\r\n                        <div\r\n                          key={i}\r\n                          className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\"\r\n                        >\r\n                          <h1 className=\" text-black font-semibold text-center w-40\">\r\n                            {`${value[\"name\"]} - [${value[\"code\"]}]`}\r\n                          </h1>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"grow\"></div>\r\n                  <div\r\n                    className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\"\r\n                    onClick={() => {\r\n                      setcon(true);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${con ? \"\" : \"hidden\"\r\n                    } grid place-items-center`}\r\n                >\r\n                  <div className=\"bg-white p-10 cursor-pointer\">\r\n                    <div className=\"min-h-80 overflow-y-scroll no-scrollbar w-80\">\r\n                      {country.map((val: any, i: number) => {\r\n                        return (\r\n                          <h1\r\n                            onClick={() => {\r\n                              if (selCountry.includes(val)) {\r\n                                let addcur = selCountry.filter(\r\n                                  (data) => data != val\r\n                                );\r\n                                setSelCountry(addcur);\r\n                              } else {\r\n                                setSelCountry([val]);\r\n                              }\r\n                              setcon(false);\r\n                            }}\r\n                            key={i}\r\n                            className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selCountry.includes(val)\r\n                              ? \"border-green-500 text-green-500\"\r\n                              : \"border-gray-800 text-black\"\r\n                              }  no-scrollbar`}\r\n                          >\r\n                            {val[\"code\"]} - {val[\"name\"]}\r\n                          </h1>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* country end here */}\r\n                <div className=\"flex mt-4 items-center\">\r\n                  <div\r\n                    className=\"text-primary text-md font-semibold cursor-pointer\"\r\n                    onClick={() => {\r\n                      setSearchType(CampaignSearchMode.TextSearch);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faSortDown}></FontAwesomeIcon> Text\r\n                    search{\" \"}\r\n                  </div>\r\n                  <div className=\"grow\"></div>\r\n                  <FontAwesomeIcon\r\n                    onClick={delsearch}\r\n                    className=\"text-primary text-2xl\"\r\n                    icon={faTrash}\r\n                  ></FontAwesomeIcon>\r\n                  <div className=\"w-4\"></div>\r\n                  <div onClick={campadvancesearch}>\r\n                    <CusButton\r\n                      text=\"Search\"\r\n                      textColor={\"text-white\"}\r\n                      background={\"bg-primary\"}\r\n                      fontwidth={\"font-bold\"}\r\n                    ></CusButton>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {/* campaign advance search end here */}\r\n          {error == \"\" || error == null || error == undefined ? null : (\r\n            <div className=\"bg-red-500 bg-opacity-10 border text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n              {error}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {camSearchResult.length != 0 ? (\r\n          <SearchedInfluencer data={camSearchResult}></SearchedInfluencer>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst BrandSearch = () => {\r\n  const [brandSearchResult, setBrandSearchResult] = useState<any[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const delsearch = () => {\r\n    setBrandSearchResult([]);\r\n  };\r\n\r\n  const brandTextSearch = useRef<HTMLInputElement>(null);\r\n  const brandtextsearch = async (searchtext: string) => {\r\n    setError(null);\r\n    brandTextSearch!.current!.value = \"\";\r\n    if (searchtext == \"\" || searchtext == null || searchtext == undefined) return setError(\"Fill the field to start searching\");\r\n    let req = { search: searchtext };\r\n    const data = await axios.post(`${BaseUrl}/api/search-brand`, req);\r\n    if (data.data.status == false) return setError(data.data.message);\r\n    setBrandSearchResult(data.data.data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"rounded-xl shadow-xl p-6 bg-white\">\r\n          <h2 className=\"text-black text-xl text-left font-bold mt-2\">\r\n            Filter\r\n          </h2>\r\n          {/* brand text search start here */}\r\n          <div className=\"flex flex-col lg:flex-row\">\r\n            <div className=\"grid place-items-start lg:place-content-center\">\r\n              <div className=\"bg-gray-200 rounded-md py-1 px-4 w-full flex items-center mt-2\">\r\n                <FontAwesomeIcon\r\n                  className=\"text-gray-600\"\r\n                  icon={faSearch}\r\n                ></FontAwesomeIcon>\r\n                <input\r\n                  ref={brandTextSearch}\r\n                  type=\"text\"\r\n                  className=\"bg-transparent w-full outline-none py-1 px-2\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-8\"></div>\r\n            <div className=\"flex items-center\">\r\n              <div className=\"grow\"></div>\r\n              <FontAwesomeIcon\r\n                onClick={delsearch}\r\n                className=\"text-primary text-2xl mx-2\"\r\n                icon={faTrash}\r\n              ></FontAwesomeIcon>\r\n              <div className=\"w-4\"></div>\r\n              <div\r\n                onClick={() => {\r\n                  brandtextsearch(brandTextSearch!.current!.value);\r\n                }}\r\n              >\r\n                <CusButton\r\n                  text=\"Search\"\r\n                  textColor={\"text-white\"}\r\n                  background={\"bg-primary\"}\r\n                  fontwidth={\"font-bold\"}\r\n                  width={\"w-32\"}\r\n                ></CusButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* brand text search end here */}\r\n          {error == \"\" || error == null || error == undefined ? null : (\r\n            <div className=\"bg-red-500 bg-opacity-10 border text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n              {error}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {brandSearchResult.length != 0 ? (\r\n        <SearchedBrand data={brandSearchResult}></SearchedBrand>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\ntype SearchedCampaignProps = {\r\n  data: any[];\r\n};\r\n\r\nconst SearchedCampaign = (props: SearchedCampaignProps) => {\r\n  const [campaignCards, setCampaignCards] = useState<React.ReactNode[]>([]);\r\n  useEffect(() => {\r\n    const resolveCampaignCards = async () => {\r\n      const resolvedCampaignCards = await Promise.all(\r\n        props.data.map(async (val: any, index: number) => {\r\n          let platforms: string[] = [];\r\n          for (let i: number = 0; i < val[\"platforms\"].length; i++) {\r\n            platforms.push(val[\"platforms\"][i][\"platformLogoUrl\"]);\r\n          }\r\n          let image =\r\n            val[\"brand\"].length == 0 ||\r\n              val[\"brand\"] == undefined ||\r\n              val[\"brand\"] == null ||\r\n              val[\"brand\"] == \"\"\r\n              ? \"/images/avatar/user.png\"\r\n              : val[\"brand\"][\"logo\"] == \"0\" ||\r\n                val[\"brand\"][\"logo\"] == undefined ||\r\n                val[\"brand\"][\"logo\"] == null ||\r\n                val[\"brand\"][\"logo\"] == \"\"\r\n                ? \"/images/avatar/user.png\"\r\n                : val[\"brand\"][\"logo\"];\r\n          let campaignType = await getCampaignType(val[\"campaignTypeId\"]);\r\n          return (\r\n            <div key={val[\"id\"]} className=\"h-full\">\r\n              <CampaginCard\r\n                id={val[\"id\"]}\r\n                title={val.campaignName}\r\n                weburl={val[\"brand\"][\"webUrl\"]}\r\n                platforms={platforms}\r\n                maxval={val.costPerPost.split(\".\")[0]}\r\n                category={campaignType}\r\n                image={image}\r\n                name={val.brand.name}\r\n                currency={val[\"currency\"][\"code\"]}\r\n                btntext=\"Learn More & Apply\"\r\n              ></CampaginCard>\r\n            </div>\r\n          );\r\n        })\r\n      );\r\n      setCampaignCards(resolvedCampaignCards);\r\n    };\r\n\r\n    resolveCampaignCards();\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-white rounded-2xl my-6 shadow-xl p-4\">\r\n        <div className=\"w-60 text-md font-bold text-primary p-2 my-2\">\r\n          Found: {props.data.length} Campaigns{\" \"}\r\n        </div>\r\n        <div className=\"flex flex-wrap gap-x-6 gap-y-6\">{campaignCards}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\ntype SearchedBrandProps = {\r\n  data: any[];\r\n};\r\n\r\nconst SearchedBrand = (props: SearchedBrandProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"bg-white rounded-2xl my-6 shadow-xl p-4\">\r\n        <div className=\"w-60 text-md font-bold text-primary p-2 my-2\">\r\n          Found: {props.data.length} Brand{\" \"}\r\n        </div>\r\n        <div className=\"flex gap-6 flex-wrap\">\r\n          {props.data.map((val: any, index: number) => {\r\n            const avatar = val[\"logo\"];\r\n            const name = val[\"name\"];\r\n            const email = val[\"email\"];\r\n            return (\r\n              <div key={index}>\r\n                <BrandCard\r\n                  id={val.id}\r\n                  image={avatar}\r\n                  name={name}\r\n                  email={email}\r\n                  website={val.webUrl}\r\n                ></BrandCard>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\ntype SearchedInfluencerProps = {\r\n  data: any[];\r\n};\r\n\r\nconst SearchedInfluencer = (props: SearchedInfluencerProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"bg-white rounded-2xl my-6 shadow-xl p-4\">\r\n        <div className=\"w-60 text-md font-bold text-primary p-2 my-2\">\r\n          Found: {props.data.length} Influencer{\" \"}\r\n        </div>\r\n        <div className=\"grid place-items-center lg:place-items-start grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\r\n          {props.data.map((val: any, index: number) => {\r\n            const avatar =\r\n              val[\"pic\"] == \"0\" ||\r\n                val[\"pic\"] == null ||\r\n                val[\"pic\"] == undefined ||\r\n                val[\"pic\"] == \"\"\r\n                ? \"/images/inf/inf14.png\"\r\n                : val[\"pic\"];\r\n            const name = val[\"userName\"];\r\n            return (\r\n              <div key={index}>\r\n                <InfluencerCard\r\n                  id={val[\"id\"]}\r\n                  image={avatar}\r\n                  name={name}\r\n                  star={parseInt(val.rating)}\r\n                  bio={val.bio}\r\n                ></InfluencerCard>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n", "import { Link } from \"@remix-run/react\";\r\nimport { CusButton } from \"./buttont\";\r\n\r\n\r\ntype BrandCardProps = {\r\n    image: string\r\n    name: string\r\n    email: string\r\n    id: string\r\n    website: string\r\n}\r\n\r\nexport const BrandCard = (props: BrandCardProps) => {\r\n    return (\r\n        <>\r\n            <div className=\"bg-white rounded-xl shadow-xl p-4 w-64\">\r\n                <div className=\"flex items-end gap-x-3\">\r\n                    <div>\r\n                        <img src={props.image} alt=\"error\" className=\"object-cover w-16 h-16 rounded\" />\r\n                    </div>\r\n                    <p className=\"text-black font-semibold text-xl content-end text-left\">{props.name}</p>\r\n                </div>\r\n                <p className=\"text-black font-semibold text-xs text-left mt-2\">email : {props.email}</p>\r\n                <p className=\"text-black font-semibold text-xs text-left mt-2\">Website : {props.website}</p>\r\n                <Link to={`/home/brand/${props.id}`}>\r\n                    <CusButton text=\"View\" textColor={\"text-black\"} background={\"bg-[#01FFF4]\"} width={\"w-full\"} margin={\"my-2\"} fontwidth={\"font-bold\"}></CusButton>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n}"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "ReactSwitch"]
}
