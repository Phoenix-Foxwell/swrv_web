{
  "version": 3,
  "sources": ["../../../app/components/utils/blogscard.tsx"],
  "sourcesContent": ["type BlogsCardProps = {\r\n  imageUrl: string;\r\n  title: string;\r\n  time: string;\r\n};\r\n\r\nexport const BlogsCard = (props: BlogsCardProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"mx-4 my-4 grid place-items-center h-full\">\r\n        <div className=\"w-64 text-primary text-left font-semibold text-md my-2 h-full\">\r\n          <p>UPDATE</p>\r\n          <p>{props.time.toString().split(\" \")[0]}</p>\r\n        </div>\r\n        <div className={`w-64 text-left shadow-xl rounded-xl h-full`}>\r\n          <img\r\n            src={props.imageUrl}\r\n            alt=\"err\"\r\n            className=\"w-full h-48 object-cover object-top rounded-md\"\r\n          />\r\n          <h1 className=\"text-md font-bold my-2 text-black p-4\">\r\n            {props.title}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\ntype BigBlogsCardProps = {\r\n  imageUrl: string;\r\n  title: string;\r\n  time: string;\r\n  background?: string;\r\n  textColor?: string;\r\n};\r\n\r\nexport const BigBlogCard = (props: BigBlogsCardProps) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={`w-full rounded-2xl grid grid-cols-1 lg:grid-cols-2 ${\r\n          props.background ?? \"bg-white\"\r\n        } shadow-xl my-10 lg:h-80`}\r\n      >\r\n        <div>\r\n          <img\r\n            src={props.imageUrl}\r\n            alt=\"err\"\r\n            className=\"h-80 w-full inline-block rounded-2xl\"\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${\r\n            props.textColor ?? \"text-black\"\r\n          } text-left font-semibold text-md my-2 p-4 md:p-12 grow`}\r\n        >\r\n          <p>UPDATE</p>\r\n          <p>{props.time}</p>\r\n          <h1 className=\"text-xl font-bold my-2\">{props.title}</h1>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],
  "mappings": ";;;;;;AAQI;AAFG,IAAM,YAAY,CAAC,UAA0B;AAClD,SACE,sFACE,6DAAC,SAAI,WAAU,4CACb;AAAA,uDAAC,SAAI,WAAU,iEACb;AAAA,yDAAC,OAAE,sBAAH;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,OAAG,gBAAM,KAAK,SAAS,EAAE,MAAM,GAAG,EAAE,MAArC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,SAF1C;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,SAAI,WAAW,8CACd;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,KAAK,MAAM;AAAA,UACX,KAAI;AAAA,UACJ,WAAU;AAAA;AAAA,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA,mDAAC,QAAG,WAAU,yCACX,gBAAM,SADT;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,OAdF;AAAA;AAAA;AAAA;AAAA,SAeA,KAhBF;AAAA;AAAA;AAAA;AAAA,SAiBA;AAEJ;AAUO,IAAM,cAAc,CAAC,UAA6B;AArCzD;AAsCE,SACE,sFACE;AAAA,IAAC;AAAA;AAAA,MACC,WAAW,uDACT,WAAM,eAAN,YAAoB;AAAA,MAGtB;AAAA,2DAAC,SACC;AAAA,UAAC;AAAA;AAAA,YACC,KAAK,MAAM;AAAA,YACX,KAAI;AAAA,YACJ,WAAU;AAAA;AAAA,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIA,KALF;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,QACA;AAAA,UAAC;AAAA;AAAA,YACC,WAAW,IACT,WAAM,cAAN,YAAmB;AAAA,YAGrB;AAAA,iEAAC,OAAE,sBAAH;AAAA;AAAA;AAAA;AAAA,qBAAS;AAAA,cACT,mDAAC,OAAG,gBAAM,QAAV;AAAA;AAAA;AAAA;AAAA,qBAAe;AAAA,cACf,mDAAC,QAAG,WAAU,0BAA0B,gBAAM,SAA9C;AAAA;AAAA;AAAA;AAAA,qBAAoD;AAAA;AAAA;AAAA,UAPtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA;AAAA;AAAA;AAAA,IApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBA,KAtBF;AAAA;AAAA;AAAA;AAAA,SAuBA;AAEJ;",
  "names": []
}
