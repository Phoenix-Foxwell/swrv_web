{
  "version": 3,
  "sources": ["../../../../../app/routes/admin/home/dispute.tsx"],
  "sourcesContent": ["import { faFill, faTrash, faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport styles from \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport function links() {\r\n  return [{ rel: \"stylesheet\", href: styles }];\r\n}\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n  const dispute = await axios({\r\n    method: \"post\",\r\n    url: `${BaseUrl}/api/get-dispute`,\r\n  });\r\n  return json({ dispute: dispute.data.data[0] });\r\n};\r\n\r\nconst Contact = () => {\r\n  const dispute = useLoaderData().dispute;\r\n\r\n  const [viewBox, setViewBox] = useState<boolean>(false);\r\n  const [viewDate, setViewData] = useState<any>({});\r\n\r\n  const [editBox, setEditBox] = useState<boolean>(false);\r\n  const nameRef = useRef<HTMLInputElement>(null);\r\n  const codeRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [editDate, setEditData] = useState<any>({\r\n    categoryName: nameRef.current?.value || \"\",\r\n    categoryCode: codeRef.current?.value || \"\",\r\n  });\r\n\r\n  const [error, setError] = useState<String>(\"\");\r\n\r\n  const edit = async (id: number) => {\r\n    const view = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/get-category-byid`,\r\n      data: { id: id },\r\n    });\r\n    setEditBox((val) => true);\r\n    setEditData((val: any) => view.data.data[0]);\r\n  };\r\n\r\n  const [delBox, setDelBox] = useState<boolean>(false);\r\n  const [delDate, setDelData] = useState<any>({});\r\n  const del = async (id: number) => {\r\n    const view = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/get-category-byid`,\r\n      data: { id: id },\r\n    });\r\n    setDelBox((val) => true);\r\n    setDelData((val: any) => view.data.data[0]);\r\n  };\r\n\r\n  const delButton = async (id: number) => {\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/del-category`,\r\n      data: { id: id },\r\n    });\r\n    if (res.data.status) {\r\n      toast.success(\"Successfully Deleted.\", { theme: \"dark\" });\r\n    } else {\r\n      toast.error(res.data.message, { theme: \"dark\" });\r\n    }\r\n    setDelBox((val) => false);\r\n    window.location.reload();\r\n  };\r\n  const view = async (id: number) => {\r\n    const view = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/get-category-byid`,\r\n      data: { id: id },\r\n    });\r\n    setViewBox((val) => true);\r\n    setViewData((val: any) => view.data.data[0]);\r\n  };\r\n\r\n  const submit = async (id: number) => {\r\n    if (\r\n      nameRef.current?.value == null ||\r\n      nameRef.current?.value == undefined ||\r\n      nameRef.current?.value == \"\"\r\n    ) {\r\n      setError(\"Enter the name.\");\r\n    } else if (\r\n      codeRef.current?.value == null ||\r\n      codeRef.current?.value == undefined ||\r\n      codeRef.current?.value == \"\"\r\n    ) {\r\n      setError(\"Enter the code.\");\r\n    } else {\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: `${BaseUrl}/api/upd-category`,\r\n        data: {\r\n          categoryName: nameRef.current?.value,\r\n          categoryCode: codeRef.current?.value,\r\n          id: id,\r\n        },\r\n      });\r\n      if (res.data.status) {\r\n        toast.success(\"Successfully updated.\", { theme: \"dark\" });\r\n      } else {\r\n        toast.error(res.data.message, { theme: \"dark\" });\r\n      }\r\n      setEditBox((val) => false);\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const [newBox, setNewBox] = useState<boolean>(false);\r\n  const nameNewRef = useRef<HTMLInputElement>(null);\r\n  const codeNewRef = useRef<HTMLInputElement>(null);\r\n\r\n  const submitNew = async () => {\r\n    if (\r\n      nameNewRef.current?.value == null ||\r\n      nameNewRef.current?.value == undefined ||\r\n      nameNewRef.current?.value == \"\"\r\n    ) {\r\n      setError(\"Enter the name.\");\r\n    } else if (\r\n      codeNewRef.current?.value == null ||\r\n      codeNewRef.current?.value == undefined ||\r\n      codeNewRef.current?.value == \"\"\r\n    ) {\r\n      setError(\"Enter the code.\");\r\n    } else {\r\n      const res = await axios({\r\n        method: \"post\",\r\n        url: `${BaseUrl}/api/add-category`,\r\n        data: {\r\n          categoryName: nameNewRef.current?.value,\r\n          categoryCode: codeNewRef.current?.value,\r\n        },\r\n      });\r\n      if (res.data.status) {\r\n        toast.success(\"Successfully added.\", { theme: \"dark\" });\r\n      } else {\r\n        toast.error(res.data.message, { theme: \"dark\" });\r\n      }\r\n      setNewBox((val) => false);\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* view box */}\r\n      <div\r\n        className={`fixed h-full w-full bg-slate-800 bg-opacity-40 top-0 left-0 place-items-center ${viewBox ? \"grid\" : \"hidden\"\r\n          }`}\r\n      >\r\n        <div className=\"bg-[#31353f] rounded-lg p-4\">\r\n          <div className=\"mx-auto\">\r\n            <div className=\"text-white\">\r\n              <p>ID : {viewDate.id}</p>\r\n              <p>Name : {viewDate.categoryName} </p>\r\n              <p>Code : {viewDate.categoryCode}</p>\r\n            </div>\r\n            <div className=\"w-full h-[1px] bg-gray-300 my-2\"></div>\r\n            <div\r\n              onClick={() => setViewBox(false)}\r\n              className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md hover:border hover:border-rose-400 hover:bg-rose-500 hover:bg-opacity-10 hover:text-rose-500 text-gray-300 cursor-pointer`}\r\n            >\r\n              <FontAwesomeIcon icon={faXmark} className=\"w-6\"></FontAwesomeIcon>\r\n              <p>CLOSE</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* del box */}\r\n      <div\r\n        className={`fixed h-full w-full bg-slate-800 bg-opacity-40 top-0 left-0 place-items-center ${delBox ? \"grid\" : \"hidden\"\r\n          }`}\r\n      >\r\n        <div className=\"bg-[#31353f] rounded-lg p-4\">\r\n          <div className=\"mx-auto\">\r\n            <div className=\"text-white\">\r\n              <p>Are you Sure you want to delete {delDate.name}?</p>\r\n            </div>\r\n            <div className=\"w-full h-[1px] bg-gray-300 my-2\"></div>\r\n            <div className=\"flex w-full justify-between\">\r\n              <div\r\n                onClick={() => setDelBox(false)}\r\n                className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md border border-gray-300 hover:border hover:border-rose-400 hover:bg-rose-500 hover:bg-opacity-10 hover:text-rose-500 text-gray-300 cursor-pointer`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faXmark}\r\n                  className=\"w-6\"\r\n                ></FontAwesomeIcon>\r\n                <p>CLOSE</p>\r\n              </div>\r\n              <div\r\n                onClick={() => delButton(delDate.id)}\r\n                className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md border border-gray-300hover:border hover:border-green-400 hover:bg-green-500 hover:bg-opacity-10 hover:text-green-500 text-gray-300 cursor-pointer`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faTrash}\r\n                  className=\"w-6\"\r\n                ></FontAwesomeIcon>\r\n                <p>Delete</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* edit box */}\r\n      <div\r\n        className={`fixed h-full w-full bg-slate-800 bg-opacity-40 top-0 left-0 place-items-center ${editBox ? \"grid\" : \"hidden\"\r\n          }`}\r\n      >\r\n        <div className=\"bg-[#31353f] rounded-lg p-4 w-80\">\r\n          <div className=\"mx-auto\">\r\n            <div className=\"text-white\">\r\n              <input\r\n                ref={nameRef}\r\n                type={\"text\"}\r\n                name=\"name\"\r\n                className=\"py-1 px-2 rounded-md border border-white w-full my-2 bg-transparent outline-none focus:bg-transparent fill-none\"\r\n                placeholder=\"Enter the name..\"\r\n                autoComplete=\"off\"\r\n                value={editDate.categoryName}\r\n                onChange={(e) =>\r\n                  setEditData((data: any) => ({\r\n                    ...data,\r\n                    categoryName: e.target.value,\r\n                  }))\r\n                }\r\n              />\r\n              <input\r\n                ref={codeRef}\r\n                type={\"text\"}\r\n                name=\"code\"\r\n                className=\"py-1 px-2 rounded-md border border-white w-full my-2 bg-transparent outline-none focus:bg-transparent fill-none\"\r\n                placeholder=\"Enter the code..\"\r\n                autoComplete=\"off\"\r\n                value={editDate.categoryCode}\r\n                onChange={(e) =>\r\n                  setEditData((data: any) => ({\r\n                    ...data,\r\n                    categoryCode: e.target.value,\r\n                  }))\r\n                }\r\n              />\r\n            </div>\r\n            {error == \"\" || error == null || error == undefined ? null : (\r\n              <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            <div className=\"w-full h-[1px] bg-gray-300 my-2\"></div>\r\n            <div className=\"flex w-full justify-between\">\r\n              <div\r\n                onClick={() => setEditBox(false)}\r\n                className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md border border-gray-300 hover:border hover:border-rose-400 hover:bg-rose-500 hover:bg-opacity-10 hover:text-rose-500 text-gray-300 cursor-pointer`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faXmark}\r\n                  className=\"w-6\"\r\n                ></FontAwesomeIcon>\r\n                <p>CLOSE</p>\r\n              </div>\r\n              <div\r\n                onClick={() => submit(editDate.id)}\r\n                className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md border border-gray-300hover:border hover:border-green-400 hover:bg-green-500 hover:bg-opacity-10 hover:text-green-500 text-gray-300 cursor-pointer`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faFill}\r\n                  className=\"w-6\"\r\n                ></FontAwesomeIcon>\r\n                <p>SUBMIT</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* add box */}\r\n      <div\r\n        className={`fixed h-full w-full bg-slate-800 bg-opacity-40 top-0 left-0 place-items-center ${newBox ? \"grid\" : \"hidden\"\r\n          }`}\r\n      >\r\n        <div className=\"bg-[#31353f] rounded-lg p-4 w-80\">\r\n          <div className=\"mx-auto\">\r\n            <div className=\"text-white\">\r\n              <input\r\n                ref={nameNewRef}\r\n                type={\"text\"}\r\n                name=\"name\"\r\n                className=\"py-1 px-2 rounded-md border border-white w-full my-2 bg-transparent outline-none focus:bg-transparent fill-none\"\r\n                placeholder=\"Enter the name..\"\r\n                autoComplete=\"off\"\r\n              />\r\n              <input\r\n                ref={codeNewRef}\r\n                type={\"text\"}\r\n                name=\"code\"\r\n                className=\"py-1 px-2 rounded-md border border-white w-full my-2 bg-transparent outline-none focus:bg-transparent fill-none\"\r\n                placeholder=\"Enter the code..\"\r\n                autoComplete=\"off\"\r\n              />\r\n            </div>\r\n            {error == \"\" || error == null || error == undefined ? null : (\r\n              <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            <div className=\"w-full h-[1px] bg-gray-300 my-2\"></div>\r\n            <div className=\"flex w-full justify-between\">\r\n              <div\r\n                onClick={() => setNewBox(false)}\r\n                className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md border border-gray-300 hover:border hover:border-rose-400 hover:bg-rose-500 hover:bg-opacity-10 hover:text-rose-500 text-gray-300 cursor-pointer`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faXmark}\r\n                  className=\"w-6\"\r\n                ></FontAwesomeIcon>\r\n                <p>CLOSE</p>\r\n              </div>\r\n              <div\r\n                onClick={submitNew}\r\n                className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md border border-gray-300hover:border hover:border-green-400 hover:bg-green-500 hover:bg-opacity-10 hover:text-green-500 text-gray-300 cursor-pointer`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faFill}\r\n                  className=\"w-6\"\r\n                ></FontAwesomeIcon>\r\n                <p>SUBMIT</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"grow bg-[#1b2028] my-2 rounded-md p-4 w-full\">\r\n        <div className=\"flex\">\r\n          <h1 className=\"text-white font-medium text-xl\">Campaign Type</h1>\r\n          <div className=\"grow\"></div>\r\n          {/* <button onClick={() => setNewBox(true)} className=\"bg-green-600 py-1 px-2 text-sm text-white rounded-md\">ADD NEW</button> */}\r\n        </div>\r\n        <div className=\"w-full bg-slate-400 h-[1px] my-2\"></div>\r\n        <div className=\"flex gap-4 flex-wrap\">\r\n          {dispute.map((val: any, index: number) => {\r\n\r\n            let reason = \"\";\r\n            switch (val.type) {\r\n              case \"1\":\r\n                reason = \"Product or service issue\";\r\n              case \"2\":\r\n                reason = \"Billing or payment issue\";\r\n              case \"3\":\r\n                reason = \"Shipping or delivery issue\";\r\n              case \"4\":\r\n                reason = \"Customer service issue\";\r\n              case \"5\":\r\n                reason = \"Website or app issue\";\r\n              case \"6\":\r\n                reason = \"Other issue\";\r\n            }\r\n\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"bg-[#31353f] hover:bg-slate-800 rounded-md px-4 py-2 my-2 text-white font-medium text-md flex-nowrap w-72\"\r\n              >\r\n                <div className=\"flex gap-4 w-full items-center\">\r\n                  <div>{index + 1}.</div>\r\n                  <div>\r\n                    <img\r\n                      src={\r\n                        val.userPicUrl == null\r\n                          ? \"/images/avatar/user.png\"\r\n                          : val.userPicUrl\r\n                      }\r\n                      alt=\"error\"\r\n                      className=\"w-10 h-10 shrink-0 rounded-md\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <p>{val.userName.toString().split(\"@\")[0]}</p>\r\n                    <p>{val.userEmail}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  {Number(val.isbrand) ? (\r\n                    <div className=\"w-24 py-1 text-white text-lg bg-green-500 text-center rounded-md font-medium\">\r\n                      Brand\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"w-24 py-1 text-white text-lg bg-rose-500 text-center rounded-md font-medium\">\r\n                      Influencer\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"w-full h-[2px] bg-gray-400 my-2\"></div>\r\n                <div className=\"flex gap-4 w-full items-center\">\r\n                  <div>\r\n                    <img\r\n                      src={\r\n                        val.brandLogoUrl == null\r\n                          ? \"/images/avatar/user.png\"\r\n                          : val.brandLogoUrl\r\n                      }\r\n                      alt=\"error\"\r\n                      className=\"w-10 h-10 shrink-0 rounded-md\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <p>{val.brandName.toString().split(\"@\")[0]}</p>\r\n                    <p>{val.brandWebUrl}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-full h-[2px] bg-gray-400 my-2\"></div>\r\n                {Number(val.isbrand) ? null : (\r\n                  <>\r\n                    <div className=\"mt-4\">{val.campaignName}</div>\r\n                    <div className=\"w-full h-[2px] bg-gray-400 my-2\"></div>\r\n                  </>\r\n                )}\r\n                <div className=\"mt-4\">Message : {val.message}</div>\r\n                <div className=\"mt-4\">Reaseon : {reason}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <ToastContainer></ToastContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],
  "mappings": "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",
  "names": ["import_react", "view", "_a", "_b"]
}
