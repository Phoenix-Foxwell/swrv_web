{
  "version": 3,
  "sources": ["../../../../../app/routes/admin/home/user.tsx"],
  "sourcesContent": ["import {\r\n  faEdit,\r\n  faEye,\r\n  faFill,\r\n  faTrash,\r\n  faXmark,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport styles from \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport function links() {\r\n  return [{ rel: \"stylesheet\", href: styles }];\r\n}\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n  const user = await axios({\r\n    method: \"post\",\r\n    url: `${BaseUrl}/api/get-users`,\r\n  });\r\n  return json({ user: user.data.data[0] });\r\n};\r\n\r\nconst User = () => {\r\n  const user = useLoaderData().user;\r\n\r\n  const [viewBox, setViewBox] = useState<boolean>(false);\r\n  const [viewDate, setViewData] = useState<any>({});\r\n\r\n  const [editBox, setEditBox] = useState<boolean>(false);\r\n  const nameRef = useRef<HTMLInputElement>(null);\r\n  const codeRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [delBox, setDelBox] = useState<boolean>(false);\r\n  const [delDate, setDelData] = useState<any>({});\r\n  const status = async (id: number) => {\r\n    const view = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/user-search`,\r\n      data: { id: id },\r\n    });\r\n    setDelBox((val) => true);\r\n    setDelData((val: any) => view.data.data[0]);\r\n  };\r\n\r\n  const statusButton = async (id: number, status: number) => {\r\n    const res = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/status-user`,\r\n      data: { id: id, status: status == 1 ? 0 : 1 },\r\n    });\r\n    if (res.data.status) {\r\n      toast.success(\"Successfully updated.\", { theme: \"dark\" });\r\n    } else {\r\n      toast.error(res.data.message, { theme: \"dark\" });\r\n    }\r\n    setDelBox((val) => false);\r\n    window.location.reload();\r\n  };\r\n\r\n  const view = async (id: number) => {\r\n    const view = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/user-search`,\r\n      data: { id: id },\r\n    });\r\n\r\n    setViewBox((val) => true);\r\n    setViewData((val: any) => view.data.data[0]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* view box */}\r\n      <div\r\n        className={`fixed h-full w-full bg-slate-800 bg-opacity-40 top-0 left-0 place-items-center py-20 overflow-x-scroll ${\r\n          viewBox ? \"grid\" : \"hidden\"\r\n        }`}\r\n      >\r\n        <div className=\"bg-[#31353f] rounded-lg p-4 w-80\">\r\n          <div className=\"w-full grid place-items-center mb-4\">\r\n            <img\r\n              src={\r\n                viewDate.pic == undefined ||\r\n                viewDate.pic == undefined ||\r\n                viewDate.pic == \"\" ||\r\n                viewDate.pic == \"0\"\r\n                  ? \"/images/avatar/user.png\"\r\n                  : viewDate.pic\r\n              }\r\n              alt=\"avatar\"\r\n              className=\"w-40 h-40 object-cover object-center rounded-md\"\r\n            />\r\n          </div>\r\n          <div className=\"mx-auto\">\r\n            <div className=\"text-white\">\r\n              <p>ID : {viewDate.id}</p>\r\n              <p>Name : {viewDate.userName} </p>\r\n              <p>Nick Name : {viewDate.nickName} </p>\r\n              <p>Code : {viewDate.bio}</p>\r\n              <p>Address : {viewDate.address}</p>\r\n              <p>contact : {viewDate.contact}</p>\r\n              <p>\r\n                Date of Birth :{\" \"}\r\n                {new Date(viewDate.dob).toLocaleDateString(\"en-US\", {\r\n                  weekday: \"long\",\r\n                  year: \"numeric\",\r\n                  month: \"long\",\r\n                  day: \"numeric\",\r\n                })}\r\n              </p>\r\n              <p>Email : {viewDate.email}</p>\r\n              <p>Bio : {viewDate.bio}</p>\r\n              <p>Career History : {viewDate.careerHistory}</p>\r\n              <p>Rating : {Number(viewDate.rating).toString().split(\".\")[0]}</p>\r\n            </div>\r\n            <div className=\"grid place-items-center w-full\">\r\n              <Link\r\n                to={`/admin/home/userhandel/${viewDate.id}`}\r\n                className=\"py-2 px-6 rounded-md border border-green-400 bg-green-500 bg-opacity-10 text-green-500 cursor-pointer\"\r\n              >\r\n                View Insights\r\n              </Link>\r\n            </div>\r\n            <div className=\"w-full h-[1px] bg-gray-300 my-2\"></div>\r\n            <div className=\"grid place-items-center\">\r\n              <div\r\n                onClick={() => setViewBox(false)}\r\n                className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md hover:border hover:border-rose-400 hover:bg-rose-500 hover:bg-opacity-10 hover:text-rose-500 text-gray-300 cursor-pointer`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faXmark}\r\n                  className=\"w-6\"\r\n                ></FontAwesomeIcon>\r\n                <p>CLOSE</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* del box */}\r\n      <div\r\n        className={`fixed h-full w-full bg-slate-800 bg-opacity-40 top-0 left-0 place-items-center ${\r\n          delBox ? \"grid\" : \"hidden\"\r\n        }`}\r\n      >\r\n        <div className=\"bg-[#31353f] rounded-lg p-4 w-80\">\r\n          <div className=\"mx-auto\">\r\n            <div className=\"text-white\">\r\n              <p>\r\n                Are you Sure you want to change the status of {delDate.userName}{\" \"}\r\n                user?\r\n              </p>\r\n            </div>\r\n            <div className=\"w-full h-[1px] bg-gray-300 my-2\"></div>\r\n            <div className=\"flex w-full justify-between\">\r\n              <div\r\n                onClick={() => setDelBox(false)}\r\n                className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md border border-gray-300 hover:border hover:border-rose-400 hover:bg-rose-500 hover:bg-opacity-10 hover:text-rose-500 text-gray-300 cursor-pointer`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faXmark}\r\n                  className=\"w-6\"\r\n                ></FontAwesomeIcon>\r\n                <p>CLOSE</p>\r\n              </div>\r\n              <div\r\n                onClick={() => statusButton(delDate.id, delDate.status.code)}\r\n                className={`text-sm flex gap-2 items-center my-1 b  py-1 px-2 rounded-md border border-gray-300hover:border hover:border-green-400 hover:bg-green-500 hover:bg-opacity-10 hover:text-green-500 text-gray-300 cursor-pointer`}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faEdit}\r\n                  className=\"w-6\"\r\n                ></FontAwesomeIcon>\r\n                <p>CHANGE</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"grow bg-[#1b2028] my-2 rounded-md p-4 w-full\">\r\n        <h1 className=\"text-white font-medium text-xl\">User</h1>\r\n        <div className=\"w-full bg-slate-400 h-[1px] my-2\"></div>\r\n        <div className=\"overflow-x-hidden no-scrollbar\">\r\n          <div className=\"bg-[#31353f]  rounded-md flex px-4 py-2 my-2 text-white font-medium text-md flex-nowrap\">\r\n            <div className=\"w-14\">Id</div>\r\n            <div className=\"w-10\"></div>\r\n            <div className=\"w-44\">Name</div>\r\n            <div className=\"grow\"></div>\r\n            <div className=\"w-24\">Status</div>\r\n            <div className=\"grow\"></div>\r\n            <div className=\"w-32\">Action</div>\r\n          </div>\r\n          {user.map((val: any, index: number) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"bg-[#31353f] hover:bg-slate-800 rounded-md flex px-4 py-2 my-2 text-white font-medium text-md flex-nowrap\"\r\n              >\r\n                <div className=\"w-14\">{val.id}</div>\r\n                <div className=\"w-10\"></div>\r\n                <div className=\"w-44\">{val.userName}</div>\r\n                <div className=\"grow\"></div>\r\n                <div className=\"w-24\">\r\n                  {Number(val.userStatus) ? (\r\n                    <div className=\"w-16 py-1 text-white text-xs bg-green-500 text-center rounded-md font-medium\">\r\n                      ACTIVE\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"w-16 py-1 text-white text-xs bg-rose-500 text-center rounded-md font-medium\">\r\n                      INACTIVE\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"grow\"></div>\r\n                <div className=\"w-32 flex text-bold text-md gap-4\">\r\n                  <div className=\"text-emerald-500 cursor-pointer\">\r\n                    <FontAwesomeIcon\r\n                      icon={faEye}\r\n                      onClick={() => view(val.id)}\r\n                    ></FontAwesomeIcon>\r\n                  </div>\r\n                  <div className=\"text-cyan-500 cursor-pointer\">\r\n                    <FontAwesomeIcon\r\n                      icon={faEdit}\r\n                      onClick={() => status(val.id)}\r\n                    ></FontAwesomeIcon>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <ToastContainer></ToastContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAAA,gBAA4C;AAmExC;AA7DG,SAAS,QAAQ;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,sBAAO,CAAC;AAC7C;AAUA,IAAM,OAAO,MAAM;AACjB,QAAM,OAAO,cAAc,EAAE;AAE7B,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAkB,KAAK;AACrD,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAc,CAAC,CAAC;AAEhD,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAkB,KAAK;AACrD,QAAM,cAAU,sBAAyB,IAAI;AAC7C,QAAM,cAAU,sBAAyB,IAAI;AAE7C,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAkB,KAAK;AACnD,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAc,CAAC,CAAC;AAC9C,QAAM,SAAS,OAAO,OAAe;AACnC,UAAMC,QAAO,MAAM,cAAM;AAAA,MACvB,QAAQ;AAAA,MACR,KAAK,GAAG;AAAA,MACR,MAAM,EAAE,GAAO;AAAA,IACjB,CAAC;AACD,cAAU,CAAC,QAAQ,IAAI;AACvB,eAAW,CAAC,QAAaA,MAAK,KAAK,KAAK,EAAE;AAAA,EAC5C;AAEA,QAAM,eAAe,OAAO,IAAYC,YAAmB;AACzD,UAAM,MAAM,MAAM,cAAM;AAAA,MACtB,QAAQ;AAAA,MACR,KAAK,GAAG;AAAA,MACR,MAAM,EAAE,IAAQ,QAAQA,WAAU,IAAI,IAAI,EAAE;AAAA,IAC9C,CAAC;AACD,QAAI,IAAI,KAAK,QAAQ;AACnB,QAAM,QAAQ,yBAAyB,EAAE,OAAO,OAAO,CAAC;AAAA,IAC1D,OAAO;AACL,QAAM,MAAM,IAAI,KAAK,SAAS,EAAE,OAAO,OAAO,CAAC;AAAA,IACjD;AACA,cAAU,CAAC,QAAQ,KAAK;AACxB,WAAO,SAAS,OAAO;AAAA,EACzB;AAEA,QAAM,OAAO,OAAO,OAAe;AACjC,UAAMD,QAAO,MAAM,cAAM;AAAA,MACvB,QAAQ;AAAA,MACR,KAAK,GAAG;AAAA,MACR,MAAM,EAAE,GAAO;AAAA,IACjB,CAAC;AAED,eAAW,CAAC,QAAQ,IAAI;AACxB,gBAAY,CAAC,QAAaA,MAAK,KAAK,KAAK,EAAE;AAAA,EAC7C;AAEA,SACE,sFAEE;AAAA;AAAA,MAAC;AAAA;AAAA,QACC,WAAW,0GACT,UAAU,SAAS;AAAA,QAGrB,6DAAC,SAAI,WAAU,oCACb;AAAA,6DAAC,SAAI,WAAU,uCACb;AAAA,YAAC;AAAA;AAAA,cACC,KACE,SAAS,OAAO,UAChB,SAAS,OAAO,UAChB,SAAS,OAAO,MAChB,SAAS,OAAO,MACZ,4BACA,SAAS;AAAA,cAEf,KAAI;AAAA,cACJ,WAAU;AAAA;AAAA,YAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWA,KAZF;AAAA;AAAA;AAAA;AAAA,iBAaA;AAAA,UACA,mDAAC,SAAI,WAAU,WACb;AAAA,+DAAC,SAAI,WAAU,cACb;AAAA,iEAAC,OAAE;AAAA;AAAA,gBAAM,SAAS;AAAA,mBAAlB;AAAA;AAAA;AAAA;AAAA,qBAAqB;AAAA,cACrB,mDAAC,OAAE;AAAA;AAAA,gBAAQ,SAAS;AAAA,gBAAS;AAAA,mBAA7B;AAAA;AAAA;AAAA;AAAA,qBAA8B;AAAA,cAC9B,mDAAC,OAAE;AAAA;AAAA,gBAAa,SAAS;AAAA,gBAAS;AAAA,mBAAlC;AAAA;AAAA;AAAA;AAAA,qBAAmC;AAAA,cACnC,mDAAC,OAAE;AAAA;AAAA,gBAAQ,SAAS;AAAA,mBAApB;AAAA;AAAA;AAAA;AAAA,qBAAwB;AAAA,cACxB,mDAAC,OAAE;AAAA;AAAA,gBAAW,SAAS;AAAA,mBAAvB;AAAA;AAAA;AAAA;AAAA,qBAA+B;AAAA,cAC/B,mDAAC,OAAE;AAAA;AAAA,gBAAW,SAAS;AAAA,mBAAvB;AAAA;AAAA;AAAA;AAAA,qBAA+B;AAAA,cAC/B,mDAAC,OAAE;AAAA;AAAA,gBACe;AAAA,gBACf,IAAI,KAAK,SAAS,GAAG,EAAE,mBAAmB,SAAS;AAAA,kBAClD,SAAS;AAAA,kBACT,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP,KAAK;AAAA,gBACP,CAAC;AAAA,mBAPH;AAAA;AAAA;AAAA;AAAA,qBAQA;AAAA,cACA,mDAAC,OAAE;AAAA;AAAA,gBAAS,SAAS;AAAA,mBAArB;AAAA;AAAA;AAAA;AAAA,qBAA2B;AAAA,cAC3B,mDAAC,OAAE;AAAA;AAAA,gBAAO,SAAS;AAAA,mBAAnB;AAAA;AAAA;AAAA;AAAA,qBAAuB;AAAA,cACvB,mDAAC,OAAE;AAAA;AAAA,gBAAkB,SAAS;AAAA,mBAA9B;AAAA;AAAA;AAAA;AAAA,qBAA4C;AAAA,cAC5C,mDAAC,OAAE;AAAA;AAAA,gBAAU,OAAO,SAAS,MAAM,EAAE,SAAS,EAAE,MAAM,GAAG,EAAE;AAAA,mBAA3D;AAAA;AAAA;AAAA;AAAA,qBAA8D;AAAA,iBAnBhE;AAAA;AAAA;AAAA;AAAA,mBAoBA;AAAA,YACA,mDAAC,SAAI,WAAU,kCACb;AAAA,cAAC;AAAA;AAAA,gBACC,IAAI,0BAA0B,SAAS;AAAA,gBACvC,WAAU;AAAA,gBACX;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKA,KANF;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA,YACA,mDAAC,SAAI,WAAU,qCAAf;AAAA;AAAA;AAAA;AAAA,mBAAiD;AAAA,YACjD,mDAAC,SAAI,WAAU,2BACb;AAAA,cAAC;AAAA;AAAA,gBACC,SAAS,MAAM,WAAW,KAAK;AAAA,gBAC/B,WAAW;AAAA,gBAEX;AAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,MAAM;AAAA,sBACN,WAAU;AAAA;AAAA,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGC;AAAA,kBACD,mDAAC,OAAE,qBAAH;AAAA;AAAA;AAAA;AAAA,yBAAQ;AAAA;AAAA;AAAA,cARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASA,KAVF;AAAA;AAAA;AAAA;AAAA,mBAWA;AAAA,eA1CF;AAAA;AAAA;AAAA;AAAA,iBA2CA;AAAA,aA1DF;AAAA;AAAA;AAAA;AAAA,eA2DA;AAAA;AAAA,MAhEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiEA;AAAA,IAEA;AAAA,MAAC;AAAA;AAAA,QACC,WAAW,kFACT,SAAS,SAAS;AAAA,QAGpB,6DAAC,SAAI,WAAU,oCACb,6DAAC,SAAI,WAAU,WACb;AAAA,6DAAC,SAAI,WAAU,cACb,6DAAC,OAAE;AAAA;AAAA,YAC8C,QAAQ;AAAA,YAAU;AAAA,YAAI;AAAA,eADvE;AAAA;AAAA;AAAA;AAAA,iBAGA,KAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UACA,mDAAC,SAAI,WAAU,qCAAf;AAAA;AAAA;AAAA;AAAA,iBAAiD;AAAA,UACjD,mDAAC,SAAI,WAAU,+BACb;AAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAS,MAAM,UAAU,KAAK;AAAA,gBAC9B,WAAW;AAAA,gBAEX;AAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,MAAM;AAAA,sBACN,WAAU;AAAA;AAAA,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGC;AAAA,kBACD,mDAAC,OAAE,qBAAH;AAAA;AAAA;AAAA;AAAA,yBAAQ;AAAA;AAAA;AAAA,cARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASA;AAAA,YACA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAS,MAAM,aAAa,QAAQ,IAAI,QAAQ,OAAO,IAAI;AAAA,gBAC3D,WAAW;AAAA,gBAEX;AAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,MAAM;AAAA,sBACN,WAAU;AAAA;AAAA,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGC;AAAA,kBACD,mDAAC,OAAE,sBAAH;AAAA;AAAA;AAAA;AAAA,yBAAS;AAAA;AAAA;AAAA,cARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASA;AAAA,eApBF;AAAA;AAAA;AAAA;AAAA,iBAqBA;AAAA,aA7BF;AAAA;AAAA;AAAA;AAAA,eA8BA,KA/BF;AAAA;AAAA;AAAA;AAAA,eAgCA;AAAA;AAAA,MArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAsCA;AAAA,IACA,mDAAC,SAAI,WAAU,gDACb;AAAA,yDAAC,QAAG,WAAU,kCAAiC,oBAA/C;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA,MACnD,mDAAC,SAAI,WAAU,sCAAf;AAAA;AAAA;AAAA;AAAA,aAAkD;AAAA,MAClD,mDAAC,SAAI,WAAU,kCACb;AAAA,2DAAC,SAAI,WAAU,2FACb;AAAA,6DAAC,SAAI,WAAU,QAAO,kBAAtB;AAAA;AAAA;AAAA;AAAA,iBAAwB;AAAA,UACxB,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,iBAAsB;AAAA,UACtB,mDAAC,SAAI,WAAU,QAAO,oBAAtB;AAAA;AAAA;AAAA;AAAA,iBAA0B;AAAA,UAC1B,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,iBAAsB;AAAA,UACtB,mDAAC,SAAI,WAAU,QAAO,sBAAtB;AAAA;AAAA;AAAA;AAAA,iBAA4B;AAAA,UAC5B,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,iBAAsB;AAAA,UACtB,mDAAC,SAAI,WAAU,QAAO,sBAAtB;AAAA;AAAA;AAAA;AAAA,iBAA4B;AAAA,aAP9B;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,QACC,KAAK,IAAI,CAAC,KAAU,UAAkB;AACrC,iBACE;AAAA,YAAC;AAAA;AAAA,cAEC,WAAU;AAAA,cAEV;AAAA,mEAAC,SAAI,WAAU,QAAQ,cAAI,MAA3B;AAAA;AAAA;AAAA;AAAA,uBAA8B;AAAA,gBAC9B,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,uBAAsB;AAAA,gBACtB,mDAAC,SAAI,WAAU,QAAQ,cAAI,YAA3B;AAAA;AAAA;AAAA;AAAA,uBAAoC;AAAA,gBACpC,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,uBAAsB;AAAA,gBACtB,mDAAC,SAAI,WAAU,QACZ,iBAAO,IAAI,UAAU,IACpB,mDAAC,SAAI,WAAU,gFAA+E,sBAA9F;AAAA;AAAA;AAAA;AAAA,uBAEA,IAEA,mDAAC,SAAI,WAAU,+EAA8E,wBAA7F;AAAA;AAAA;AAAA;AAAA,uBAEA,KARJ;AAAA;AAAA;AAAA;AAAA,uBAUA;AAAA,gBACA,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,uBAAsB;AAAA,gBACtB,mDAAC,SAAI,WAAU,qCACb;AAAA,qEAAC,SAAI,WAAU,mCACb;AAAA,oBAAC;AAAA;AAAA,sBACC,MAAM;AAAA,sBACN,SAAS,MAAM,KAAK,IAAI,EAAE;AAAA;AAAA,oBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGC,KAJH;AAAA;AAAA;AAAA;AAAA,yBAKA;AAAA,kBACA,mDAAC,SAAI,WAAU,gCACb;AAAA,oBAAC;AAAA;AAAA,sBACC,MAAM;AAAA,sBACN,SAAS,MAAM,OAAO,IAAI,EAAE;AAAA;AAAA,oBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGC,KAJH;AAAA;AAAA;AAAA;AAAA,yBAKA;AAAA,qBAZF;AAAA;AAAA;AAAA;AAAA,uBAaA;AAAA;AAAA;AAAA,YAhCK;AAAA,YADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAkCA;AAAA,QAEJ,CAAC;AAAA,WAhDH;AAAA;AAAA;AAAA;AAAA,aAiDA;AAAA,MACA,mDAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA,SArDlB;AAAA;AAAA;AAAA;AAAA,WAsDA;AAAA,OAlKF;AAAA;AAAA;AAAA;AAAA,SAmKA;AAEJ;AAEA,IAAO,eAAQ;",
  "names": ["import_react", "view", "status"]
}
