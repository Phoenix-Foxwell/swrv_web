{
  "version": 3,
  "sources": ["../../../app/routes/adminlogin.tsx"],
  "sourcesContent": ["import { faEye, faEyeSlash, faPerson, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ActionArgs, LoaderArgs, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, useActionData } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState, useTransition } from \"react\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { adminUser } from \"~/cookies\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport styles from 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport function links() {\r\n    return [{ rel: \"stylesheet\", href: styles }];\r\n}\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n    const cookieHeader = request.headers.get(\"Cookie\");\r\n    const cookie = await adminUser.parse(cookieHeader);\r\n    if (cookie) {\r\n        if (cookie.AdminLogin) {\r\n            return redirect(\"/admin/home\");\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst AdminLogin = () => {\r\n    const [pass, setPass] = useState<boolean>(false);\r\n    const handelPassword = (value: boolean) => {\r\n        setPass((val) => value);\r\n    }\r\n\r\n    const retdata = useActionData();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"h-screen w-full grid place-items-center bg-[#1b2028]\">\r\n                <div>\r\n                    <h3 className=\"text-white text-2xl font-medium my-3 text-center\">SWRV ADMIN</h3>\r\n                    <div className=\"w-80 bg-[#31353f] rounded-lg p-4\">\r\n                        <h3 className=\"text-white text-xl font-medium my-3 text-center\">Login</h3>\r\n                        <Form method=\"post\">\r\n                            <div className=\"text-white flex gap-4 my-4 items-center border-2 border-gray-400 rounded-md py-1 px-4\">\r\n                                <FontAwesomeIcon icon={faUser}></FontAwesomeIcon>\r\n                                <input type={\"text\"} name=\"username\" className=\"w-full bg-transparent outline-none focus:bg-transparent fill-none border-none\" placeholder=\"Enter the username..\" autoComplete=\"off\" />\r\n                            </div>\r\n                            <div className=\"text-white flex gap-4 my-4 items-center border-2 border-gray-400 rounded-md py-1 px-4\">\r\n                                <div className=\"cursor-pointer\" onClick={() => handelPassword(!pass)}>\r\n                                    <FontAwesomeIcon icon={pass ? faEyeSlash : faEye}></FontAwesomeIcon>\r\n                                </div>\r\n                                <input type={pass ? \"text\" : \"password\"} name=\"password\" className=\"w-full bg-transparent outline-none focus:bg-transparent\" placeholder=\"Enter the password..\" autoComplete=\"off\" />\r\n                            </div>\r\n                            {(retdata?.message == \"\" || retdata?.message == null || retdata?.message == undefined) ? null :\r\n                                <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{retdata.message}</div>\r\n                            }\r\n                            <div>\r\n                                <button className=\"text-center text-white font-bold w-full py-1 border-2 border-gray-300 hover:bg-gray-300 hover:text-[#222239]\" type=\"submit\">SUBMIT</button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default AdminLogin;\r\n\r\n\r\nexport const action = async ({ request }: ActionArgs) => {\r\n    const formData = await request.formData();\r\n    const value = Object.fromEntries(formData);\r\n    if (value.username == null || value.username == \"\" || value.username == undefined) {\r\n        return { message: \"Enter username.\", error: true };\r\n    }\r\n    if (value.password == null || value.password == \"\" || value.password == undefined) {\r\n        return { message: \"Enter password.\", error: true };\r\n    }\r\n    try {\r\n        const data = await axios.post(`${BaseUrl}/api/admin-login`, { \"userName\": value.username, \"password\": value.password });\r\n        if (data.data.status == false) {\r\n            return { message: data.data.message, error: true };\r\n        }\r\n        else {\r\n            return redirect(\"/admin/home\", {\r\n                headers: {\r\n                    \"Set-Cookie\": await adminUser.serialize({ user: data.data.data[0], AdminLogin: true }),\r\n                },\r\n            });\r\n        }\r\n    } catch (e) {\r\n        return { message: e };\r\n    }\r\n\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAKA,IAAAA,gBAAmD;AA+B3C;AAxBD,SAAS,QAAQ;AACpB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,sBAAO,CAAC;AAC/C;AAaA,IAAM,aAAa,MAAM;AACrB,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAkB,KAAK;AAC/C,QAAM,iBAAiB,CAAC,UAAmB;AACvC,YAAQ,CAAC,QAAQ,KAAK;AAAA,EAC1B;AAEA,QAAM,UAAU,cAAc;AAE9B,SACI,sFACI,6DAAC,SAAI,WAAU,wDACX,6DAAC,SACG;AAAA,uDAAC,QAAG,WAAU,oDAAmD,0BAAjE;AAAA;AAAA;AAAA;AAAA,WAA2E;AAAA,IAC3E,mDAAC,SAAI,WAAU,oCACX;AAAA,yDAAC,QAAG,WAAU,mDAAkD,qBAAhE;AAAA;AAAA;AAAA;AAAA,aAAqE;AAAA,MACrE,mDAAC,QAAK,QAAO,QACT;AAAA,2DAAC,SAAI,WAAU,yFACX;AAAA,6DAAC,mBAAgB,MAAM,UAAvB;AAAA;AAAA;AAAA;AAAA,iBAA+B;AAAA,UAC/B,mDAAC,WAAM,MAAM,QAAQ,MAAK,YAAW,WAAU,iFAAgF,aAAY,wBAAuB,cAAa,SAA/K;AAAA;AAAA;AAAA;AAAA,iBAAqL;AAAA,aAFzL;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACA,mDAAC,SAAI,WAAU,yFACX;AAAA,6DAAC,SAAI,WAAU,kBAAiB,SAAS,MAAM,eAAe,CAAC,IAAI,GAC/D,6DAAC,mBAAgB,MAAM,OAAO,aAAa,SAA3C;AAAA;AAAA;AAAA;AAAA,iBAAkD,KADtD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,WAAM,MAAM,OAAO,SAAS,YAAY,MAAK,YAAW,WAAU,2DAA0D,aAAY,wBAAuB,cAAa,SAA7K;AAAA;AAAA;AAAA;AAAA,iBAAmL;AAAA,aAJvL;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,SACE,mCAAS,YAAW,OAAM,mCAAS,YAAW,SAAQ,mCAAS,YAAW,SAAa,OACrF,mDAAC,SAAI,WAAU,yHAAyH,kBAAQ,WAAhJ;AAAA;AAAA;AAAA;AAAA,eAAwJ;AAAA,QAE5J,mDAAC,SACG,6DAAC,YAAO,WAAU,gHAA+G,MAAK,UAAS,sBAA/I;AAAA;AAAA;AAAA;AAAA,eAAqJ,KADzJ;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAhBJ;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,SAnBJ;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,OAtBJ;AAAA;AAAA;AAAA;AAAA,SAuBA,KAxBJ;AAAA;AAAA;AAAA;AAAA,SAyBA,KA1BJ;AAAA;AAAA;AAAA;AAAA,SA2BA;AAER;AACA,IAAO,qBAAQ;",
  "names": ["import_react"]
}
