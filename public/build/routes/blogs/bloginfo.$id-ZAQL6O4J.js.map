{
  "version": 3,
  "sources": ["../../../../app/routes/blogs/bloginfo.$id.tsx"],
  "sourcesContent": ["import { Footer } from \"~/components/home/footer/footer\";\r\nimport { IntroNavBar } from \"~/components/home/navbar/intronavbar\";\r\nimport BlogsInfo from \"~/components/blogpage/bloginfo\";\r\nimport { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { MyNavBar } from \"~/components/home/navbar/mynavbar\";\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n  const id = props.params.id;\r\n  const nebdata = await axios.post(`${BaseUrl}/api/get-neb-byid`, { id: id });\r\n\r\n  const blog = await axios.post(`${BaseUrl}/api/get-neb-bytype`, { type: 1 });\r\n  if (nebdata.data.data[0].title == undefined) {\r\n    return json({ nebdata: nebdata.data.data[0], error: true });\r\n  } else {\r\n    return json({\r\n      nebdata: nebdata.data.data[0],\r\n      error: false,\r\n      blog: blog.data.data,\r\n    });\r\n  }\r\n};\r\n\r\nconst blogs = () => {\r\n  let data = useLoaderData();\r\n  const blog = useLoaderData().blog[0];\r\n  return (\r\n    <>\r\n      <div className=\"fixed top-0 left-0 w-full z-50 bg-white\">\r\n        <MyNavBar></MyNavBar>\r\n      </div>\r\n      <div className=\"h-16\"></div>\r\n      <BlogsInfo\r\n        error={data.error}\r\n        image={data.nebdata.imageUrl}\r\n        title={data.nebdata.title}\r\n        shorttitle={data.nebdata.titleDesc}\r\n        description={data.nebdata.description}\r\n        date={data.nebdata.dateTime}\r\n        type={data.nebdata.type}\r\n        relatedArtical={blog}\r\n      ></BlogsInfo>\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n};\r\nexport default blogs;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AA6BI;AAJJ,IAAM,QAAQ,MAAM;AAClB,MAAI,OAAO,cAAc;AACzB,QAAM,OAAO,cAAc,EAAE,KAAK;AAClC,SACE,sFACE;AAAA,uDAAC,SAAI,WAAU,2CACb,6DAAC,cAAD;AAAA;AAAA;AAAA;AAAA,WAAU,KADZ;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,IACtB;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,KAAK;AAAA,QACZ,OAAO,KAAK,QAAQ;AAAA,QACpB,OAAO,KAAK,QAAQ;AAAA,QACpB,YAAY,KAAK,QAAQ;AAAA,QACzB,aAAa,KAAK,QAAQ;AAAA,QAC1B,MAAM,KAAK,QAAQ;AAAA,QACnB,MAAM,KAAK,QAAQ;AAAA,QACnB,gBAAgB;AAAA;AAAA,MARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASC;AAAA,IACD,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,OAfV;AAAA;AAAA;AAAA;AAAA,SAgBA;AAEJ;AACA,IAAO,sBAAQ;",
  "names": []
}
