{
  "version": 3,
  "sources": ["../../../app/routes/createbrand.tsx"],
  "sourcesContent": ["import { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  ActionArgs,\r\n  LoaderArgs,\r\n  LoaderFunction,\r\n  json,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport {\r\n  Form,\r\n  NavLink,\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigate,\r\n} from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport { UploadFile } from \"~/utils\";\r\nimport * as EmailValidator from \"email-validator\";\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n  const cookieHeader = props.request.headers.get(\"Cookie\");\r\n  const cookie = await userPrefs.parse(cookieHeader);\r\n  return json({ user: cookie.user });\r\n};\r\n\r\nconst createBarnd = () => {\r\n  const navigator = useNavigate();\r\n  const data = useActionData();\r\n  const nextButton = useRef<HTMLButtonElement>(null);\r\n  const uidref = useRef<HTMLInputElement>(null);\r\n\r\n  const userdata = useLoaderData();\r\n  const userId: string = userdata.user.id;\r\n  const [error, setError] = useState<String>(\"\");\r\n  const [img, setImale] = useState<File | null>(null);\r\n  let imgref = useRef<HTMLInputElement | null>(null);\r\n  const [imgerror, setImgerror] = useState<string | null>(null);\r\n  const [cityerror, setCityerror] = useState<string | null>(null);\r\n  const [citybox, setCitybox] = useState<boolean>(false);\r\n  const [searchcity, setSearchcity] = useState<any[]>([]);\r\n  const [selectedcity, setSelectedctiy] = useState<any>(null);\r\n\r\n  const [contactnumber, setContactnumber] = useState<number>();\r\n  const handelcontent = (e: any) => {\r\n    setContactnumber(e.target.value.replace(/\\D/g, \"\"));\r\n  };\r\n\r\n  let cityref = useRef<HTMLInputElement | null>(null);\r\n  const getCity = async (city: String) => {\r\n    const data = await axios.post(`${BaseUrl}/api/get-city`, { search: city });\r\n    setSearchcity(data.data.data);\r\n  };\r\n\r\n  const nameRef = useRef<HTMLInputElement | null>(null);\r\n  const codeRef = useRef<HTMLInputElement | null>(null);\r\n  const addressRef = useRef<HTMLInputElement | null>(null);\r\n  const websiteRef = useRef<HTMLInputElement | null>(null);\r\n  const emailRef = useRef<HTMLInputElement | null>(null);\r\n  const binfoRef = useRef<HTMLTextAreaElement | null>(null);\r\n  const cinfoRef = useRef<HTMLTextAreaElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    uidref.current!.value = userId;\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`w-full h-screen bg-black bg-opacity-25 fixed top-0 left-0  place-items-center ${\r\n          citybox ? \"grid\" : \"hidden\"\r\n        }`}\r\n      >\r\n        <div className=\"bg-white shadow-md w-80 rounded-lg p-4\">\r\n          {searchcity.length == 0 ? (\r\n            <div className=\"w-80 h-96\">\r\n              <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                No city found with this name\r\n              </div>\r\n              <button\r\n                className=\"px-5 mx-auto bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\"\r\n                onClick={() => {\r\n                  setCitybox(false);\r\n                }}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"h-72 overflow-y-scroll no-scrollbar\">\r\n              {searchcity.map((value: any, index: number) => {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      onClick={() => {\r\n                        setSelectedctiy(value);\r\n                        setCitybox(false);\r\n                        cityref!.current!.value = \"\";\r\n                      }}\r\n                      key={index}\r\n                      className=\"my-6 cursor-pointer bg-white rounded-md py-1 border-2 text-center font-normal text-md hover:border-emerald-500\"\r\n                    >\r\n                      {value[\"name\"]} - {value[\"code\"]}\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full pt-4 px-4 bg-background pb-10\">\r\n        <div className=\"w-full rounded-lg bg-white grid place-items-center shadow-lg py-2 sm:w-96 mx-auto\">\r\n          <NavLink to={\"/\"} className={\"cursor-pointer\"}>\r\n            <img src=\"./images/swrvlogo.png\" className=\"w-28 lg:w-32\" />\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"bg-white w-full shadow-xl p-4 mt-4 rounded-lg mx-auto sm:w-96\">\r\n          <div className=\"hidden\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              ref={imgref}\r\n              onChange={(value) => {\r\n                let file_size = parseInt(\r\n                  (value!.target.files![0].size / 1024 / 1024).toString()\r\n                );\r\n                if (file_size < 4) {\r\n                  setImgerror(null);\r\n                  setImale(value!.target.files![0]);\r\n                } else {\r\n                  setImgerror(\"Image file size must be less then 4 mb\");\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"bg-gray-200 rounded-lg my-6 mr-6 p-4 text-gray-400 flex w-full items-center justify-center\">\r\n            <div className=\"grid place-items-center w-40 mr-4 h-40 object-cover\">\r\n              {img == null ? (\r\n                <img\r\n                  src=\"/images/icons/gallery.png\"\r\n                  alt=\"error\"\r\n                  className=\"w-40 object-cover inline-block\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={URL.createObjectURL(img)}\r\n                  alt=\"error\"\r\n                  className=\"w-20 h-20 inline-block object-cover rounded-md\"\r\n                />\r\n              )}\r\n            </div>\r\n            <div>\r\n              <p className=\"mt-4\">Drop profile photo here.</p>\r\n              <p className=\"mt-4\">\r\n                The image should either be jpg jped or png format and be a\r\n                maximum size of 4 MB\r\n              </p>\r\n              <div className=\"mt-4\">\r\n                {imgerror == \"\" ||\r\n                imgerror == null ||\r\n                imgerror == undefined ? null : (\r\n                  <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                    {imgerror}\r\n                  </div>\r\n                )}\r\n                <div\r\n                  onClick={() => {\r\n                    imgref.current?.click();\r\n                  }}\r\n                >\r\n                  <CusButton\r\n                    text=\"Upload\"\r\n                    textColor={\"text-white\"}\r\n                    width={\"w-full\"}\r\n                    background={\"bg-gray-400\"}\r\n                  ></CusButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Brand Name\r\n          </h2>\r\n          <input\r\n            ref={nameRef}\r\n            className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n          />\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Brand code\r\n          </h2>\r\n          <input\r\n            ref={codeRef}\r\n            className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n          />\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Brand website\r\n          </h2>\r\n          <input\r\n            ref={websiteRef}\r\n            className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n          />\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Brand address\r\n          </h2>\r\n          <input\r\n            ref={addressRef}\r\n            className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n          />\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Brand city\r\n          </h2>\r\n          <div className=\"w-full bg-[#EEEEEE] rounded-md flex p-2\">\r\n            <div className=\"grow\">\r\n              <input\r\n                ref={cityref}\r\n                className=\"h-full w-full outline-none focus:border-gray-300 bg-transparent\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"bg-white text-bold p-2 rounded-md grid place-items-center w-8 h-8 cursor-pointer\"\r\n              onClick={() => {\r\n                if (\r\n                  cityref.current?.value == null ||\r\n                  cityref.current?.value == undefined ||\r\n                  cityref.current?.value == \"\"\r\n                ) {\r\n                  setCityerror(\"Enter the city name\");\r\n                } else {\r\n                  setCitybox(true);\r\n                  setCityerror(null);\r\n                  getCity(cityref.current?.value ?? \"\");\r\n                }\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\r\n            </div>\r\n          </div>\r\n          {cityerror == \"\" ||\r\n          cityerror == null ||\r\n          cityerror == undefined ? null : (\r\n            <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n              {cityerror}\r\n            </div>\r\n          )}\r\n          {selectedcity == \"\" ||\r\n          selectedcity == null ||\r\n          selectedcity == undefined ? null : (\r\n            <div className=\"bg-white bg-opacity-10 border-2 text-center border-black rounded-md text-black text-md font-normal text-md my-4\">\r\n              {selectedcity[\"name\"]} - {selectedcity[\"code\"]}\r\n            </div>\r\n          )}\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Support Contact\r\n          </h2>\r\n          <div className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md flex\">\r\n            <div className=\"text-center text-black font-normal text-md mr-4\">\r\n              {selectedcity == null ? 0 : selectedcity[\"country\"][\"isd\"]}\r\n            </div>\r\n            <input\r\n              onChange={handelcontent}\r\n              value={contactnumber}\r\n              type={\"text\"}\r\n              maxLength={10}\r\n              className=\"w-full outline-none bg-transparent focus:border-gray-300 rounded-md resize-none\"\r\n            />\r\n          </div>\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Support Email\r\n          </h2>\r\n          <input\r\n            ref={emailRef}\r\n            className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n          />\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Brand info\r\n          </h2>\r\n          <textarea\r\n            ref={binfoRef}\r\n            className=\"p-2 w-full h-32 outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n          ></textarea>\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Company info\r\n          </h2>\r\n          <textarea\r\n            ref={cinfoRef}\r\n            className=\"p-2 w-full h-32 outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n          ></textarea>\r\n          {error == \"\" || error == null || error == undefined ? null : (\r\n            <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          {/* {data.message && ( */}\r\n          {data == \"\" || data == null || data == undefined ? null : (\r\n            <p className=\"w-full border-2 border-red-500 bg-red-500 bg-opacity-5  text-center my-2 rounded-md p-2 text-sm font-semibold text-red-500\">\r\n              {data!.message}\r\n            </p>\r\n          )}\r\n          <div\r\n            onClick={async () => {\r\n              if (img == null || img == undefined) {\r\n                setError(\"Select the image\");\r\n              } else if (\r\n                nameRef.current?.value == null ||\r\n                nameRef.current?.value == undefined ||\r\n                nameRef.current?.value == \"\"\r\n              ) {\r\n                setError(\"Fill the Brand name\");\r\n              } else if (\r\n                codeRef.current?.value == null ||\r\n                codeRef.current?.value == undefined ||\r\n                codeRef.current?.value == \"\"\r\n              ) {\r\n                setError(\"Fill the Brand code\");\r\n              } else if (\r\n                websiteRef.current?.value == null ||\r\n                websiteRef.current?.value == undefined ||\r\n                websiteRef.current?.value == \"\"\r\n              ) {\r\n                setError(\"Fill the Brand website\");\r\n              } else if (\r\n                addressRef.current?.value == null ||\r\n                addressRef.current?.value == undefined ||\r\n                addressRef.current?.value == \"\"\r\n              ) {\r\n                setError(\"Fill the Brand address\");\r\n              } else if (selectedcity == null) {\r\n                setError(\"Fill the city\");\r\n              } else if (\r\n                contactnumber == null ||\r\n                contactnumber == undefined ||\r\n                contactnumber == 0\r\n              ) {\r\n                setError(\"Fill the contact number\");\r\n              } else if (\r\n                emailRef.current?.value == null ||\r\n                emailRef.current?.value == undefined ||\r\n                emailRef.current?.value == \"\"\r\n              ) {\r\n                setError(\"Fill the Brand info\");\r\n              } else if (!EmailValidator.validate(emailRef.current?.value)) {\r\n                setError(\"Enter valid email\");\r\n              } else if (contactnumber.toString().length != 10) {\r\n                setError(\"Enter a 10 digit valid contact number\");\r\n              } else if (\r\n                binfoRef.current?.value == null ||\r\n                binfoRef.current?.value == undefined ||\r\n                binfoRef.current?.value == \"\"\r\n              ) {\r\n                setError(\"Fill the Brand info\");\r\n              } else if (\r\n                cinfoRef.current?.value == null ||\r\n                cinfoRef.current?.value == undefined ||\r\n                cinfoRef.current?.value == \"\"\r\n              ) {\r\n                setError(\"Fill the Campany info\");\r\n              } else {\r\n                const imageurl = await UploadFile(img);\r\n\r\n                if (imageurl.status) {\r\n                  let req = {\r\n                    userId: userId,\r\n                    brandLogoUrl: imageurl.data,\r\n                    brandName: nameRef.current?.value,\r\n                    brandCode: codeRef.current?.value,\r\n                    brandWebUrl: websiteRef.current?.value,\r\n                    brandFullRegisteredAddress: addressRef.current?.value,\r\n                    brandSupportEmail: emailRef.current?.value,\r\n                    brandSupportContact: contactnumber,\r\n                    brandBioInfo: binfoRef.current?.value,\r\n                    comapnyBio: cinfoRef.current?.value,\r\n                    cityId: selectedcity[\"id\"],\r\n                  };\r\n\r\n                  const data = await axios({\r\n                    method: \"post\",\r\n                    url: `${BaseUrl}/api/add-brand`,\r\n                    data: req,\r\n                    headers: {\r\n                      \"Access-Control-Allow-Origin\": \"*\",\r\n                      \"Access-Control-Allow-Headers\": \"*\",\r\n                      \"Access-Control-Allow-Options\": \"*\",\r\n                      \"Access-Control-Allow-Methods\": \"*\",\r\n                      \"X-Content-Type-Options\": \"*\",\r\n                      \"Content-Type\": \"application/json\",\r\n                      Accept: \"*\",\r\n                    },\r\n                  });\r\n                  if (data.data.status == false) {\r\n                    return setError(data.data.message);\r\n                  }\r\n                  nextButton.current!.click();\r\n\r\n                  // return navigator(\"/home\");\r\n                } else {\r\n                  setError(imageurl.data);\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            <CusButton\r\n              text=\"Create Brand\"\r\n              background=\"bg-secondary\"\r\n              textColor={\"text-white\"}\r\n              width={\"w-full\"}\r\n            ></CusButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Form method=\"post\">\r\n        <input type=\"hidden\" name=\"id\" ref={uidref} />\r\n        <button ref={nextButton} name=\"submit\">\r\n          Submit\r\n        </button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default createBarnd;\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const formData = await request.formData();\r\n  const value = Object.fromEntries(formData);\r\n  const userdata = await axios({\r\n    method: \"post\",\r\n    url: `${BaseUrl}/api/getuser`,\r\n    data: { id: value.id },\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Headers\": \"*\",\r\n      \"Access-Control-Allow-Options\": \"*\",\r\n      \"Access-Control-Allow-Methods\": \"*\",\r\n      \"X-Content-Type-Options\": \"*\",\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"*\",\r\n    },\r\n  });\r\n\r\n\r\n  if (userdata.data.status == false) {\r\n    return { message: userdata.data.message };\r\n  } else {\r\n    return redirect(\"/home\", {\r\n      headers: {\r\n        \"Set-Cookie\": await userPrefs.serialize({\r\n          user: userdata.data.data[0],\r\n          isLogin: true,\r\n        }),\r\n      },\r\n    });\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": ["import_react", "data"]
}
