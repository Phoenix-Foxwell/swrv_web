{
  "version": 3,
  "sources": ["../../../../../app/routes/home/createcampaign/spbd.tsx"],
  "sourcesContent": ["import {\r\n  faAdd,\r\n  faCheck,\r\n  faCircleXmark,\r\n  faPaperclip,\r\n  faRemove,\r\n  faStar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { LoaderArgs, json } from \"@remix-run/node\";\r\nimport { useLoaderData, useNavigate } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport CreateCampaignStore from \"~/state/campaign/createcampaign\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport Brand from \"~/routes/admin/home/brand\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const platform = await axios.post(`${BaseUrl}/api/getplatform`);\r\n\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const cookie = await userPrefs.parse(cookieHeader);\r\n  return json({ platform: platform.data.data, userdata: cookie.user });\r\n};\r\n\r\nconst Spbd = () => {\r\n  const userdata = useLoaderData();\r\n  const userId: string = userdata.userdata.id;\r\n  const brandId: string = userdata.userdata.brandId;\r\n\r\n  const mediatype = [\"Post\", \"Story\", \"Reel\", \"Video\", \"Audio\"];\r\n\r\n  const data = useLoaderData();\r\n  const navigator = useNavigate();\r\n\r\n  const campaginType = CreateCampaignStore((state) => state.campaignTypeId);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const platform = CreateCampaignStore((state) => state.platform);\r\n  const setPlatform = CreateCampaignStore((state) => state.setPlatform);\r\n\r\n  const media = CreateCampaignStore((state) => state.media);\r\n  const setMedia = CreateCampaignStore((state) => state.setMedia);\r\n\r\n  const CampaignName = useRef<HTMLInputElement | null>(null);\r\n\r\n  const campinfo = useRef<HTMLTextAreaElement | null>(null);\r\n\r\n  const StartDate = useRef<HTMLInputElement | null>(null);\r\n\r\n  const EndDate = useRef<HTMLInputElement | null>(null);\r\n\r\n  //start date\r\n  const [sd, setsd] = useState<string>(\"\");\r\n  // end date\r\n  const [ed, seted] = useState<string>(\"\");\r\n\r\n  // campaign name\r\n  const [cn, setcn] = useState<string>(\"\");\r\n\r\n  const campaignTypeId = CreateCampaignStore((state) => state.campaignTypeId);\r\n  const CostPerPost = useRef<HTMLInputElement | null>(null);\r\n\r\n  //cost per post\r\n  const [cpp, setcpp] = useState<string>(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"flex gap-x-4 flex-col lg:flex-row\">\r\n        <div className=\"bg-white shadow-xl rounded-xl px-8 py-4 mt-4 grow\">\r\n          <h2 className=\"text-black tect-xl font-medium text-left my-4\">\r\n            {campaginType == \"5\" ? \"Single post\" : \"Bidding\"}\r\n          </h2>\r\n          <div className=\"flex gap-4 flex-wrap\">\r\n            {data.platform.map((val: any, i: number) => {\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  className={` p-2 rounded-lg shrink-0 ${\r\n                    platform.includes(val.id)\r\n                      ? \"bg-white shadow-xl \"\r\n                      : \"bg-gray-200\"\r\n                  } `}\r\n                  onClick={() => {\r\n                    setPlatform(val.id);\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={data.platform[i][\"platformLogoUrl\"]}\r\n                    alt=\"error\"\r\n                    className=\"w-10 h-10\"\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"flex gap-4 flex-wrap my-6\">\r\n            {mediatype.map((val: string, i: number) => {\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  className={`shrink-0 cursor-pointer text-primary text-lg text-center font-normal w-28 py-1  rounded-xl ${\r\n                    val == media ? \"bg-white shadow-xl\" : \"bg-gray-100\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    setMedia(val);\r\n                  }}\r\n                >\r\n                  {val}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Campaign name\r\n          </h2>\r\n          <input\r\n            ref={CampaignName}\r\n            type={\"text\"}\r\n            className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\"\r\n            onChange={(val) => setcn(val.target.value)}\r\n          />\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Campaign info\r\n          </h2>\r\n          <textarea\r\n            ref={campinfo}\r\n            className=\"p-4 w-full h-40 outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n          ></textarea>\r\n          {campaginType == \"6\" ? (\r\n            <div className=\"flex flex-col lg:flex-row\">\r\n              <div className=\"grow\">\r\n                <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n                  Start date\r\n                </h2>\r\n                <input\r\n                  type={\"date\"}\r\n                  ref={StartDate}\r\n                  className=\"bg-[#EEEEEE] outline-none border-none rounded-lg focus:border-gray-300 w-full p-2\"\r\n                  onChange={(val) => setsd(val.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div className=\"w-8\"></div>\r\n              <div className=\"grow\">\r\n                <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n                  End date\r\n                </h2>\r\n                <input\r\n                  ref={EndDate}\r\n                  type={\"date\"}\r\n                  className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\"\r\n                  onChange={(val) => seted(val.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n              Cost per post\r\n            </h2>\r\n            <input\r\n              ref={CostPerPost}\r\n              type={\"number\"}\r\n              className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\"\r\n              onChange={(val) => setcpp(val.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {error == \"\" || error == null || error == undefined ? null : (\r\n            <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n              {error}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <div className=\"lg:w-80 bg-white  shadow-lx rounded-xl p-4 mt-4\">\r\n            <h1 className=\"text-primary text-lg font-medium\">\r\n              Campaign Summary\r\n            </h1>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Campaign name</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {cn == \"\" ? \"--------\" : cn}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Cost per post</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {cpp == \"\" ? \"--------\" : cpp}\r\n              </p>\r\n            </div>\r\n            {campaginType == \"6\" ? (\r\n              <>\r\n                <div className=\"flex my-4\">\r\n                  <p className=\"text-sm text-primary font-normal\">Start date</p>\r\n                  <div className=\"grow\"></div>\r\n                  <p className=\"text-sm text-primary font-medium\">\r\n                    {sd == \"\"\r\n                      ? \"--------\"\r\n                      : new Date(sd).toLocaleDateString(\"en-US\", {\r\n                          weekday: \"short\",\r\n                          year: \"numeric\",\r\n                          month: \"long\",\r\n                          day: \"numeric\",\r\n                        })}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex my-4\">\r\n                  <p className=\"text-sm text-primary font-normal\">End date</p>\r\n                  <div className=\"grow\"></div>\r\n                  <p className=\"text-sm text-primary font-medium\">\r\n                    {ed == \"\"\r\n                      ? \"--------\"\r\n                      : new Date(ed).toLocaleDateString(\"en-US\", {\r\n                          weekday: \"short\",\r\n                          year: \"numeric\",\r\n                          month: \"long\",\r\n                          day: \"numeric\",\r\n                        })}\r\n                  </p>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n            {error == \"\" || error == null || error == undefined ? null : (\r\n              <div className=\"my-4 bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-xl text-red-500 text-md font-normal text-md\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            <div className=\"flex w-full\">\r\n              <div\r\n                onClick={() => {\r\n                  navigator(-1);\r\n                }}\r\n                className=\"w-full\"\r\n              >\r\n                <CusButton\r\n                  text=\"Back\"\r\n                  textColor={\"text-black\"}\r\n                  background=\"bg-gray-100\"\r\n                  width={\"w-full\"}\r\n                  fontwidth={\"font-bold\"}\r\n                ></CusButton>\r\n              </div>\r\n              <div className=\"w-10\"></div>\r\n              <div\r\n                className=\"w-full\"\r\n                onClick={async () => {\r\n                  if (\r\n                    platform == null ||\r\n                    platform.length == 0 ||\r\n                    platform == undefined\r\n                  ) {\r\n                    setError(\"Select a platform\");\r\n                  } else if (\r\n                    media == null ||\r\n                    media == \"\" ||\r\n                    media == undefined\r\n                  ) {\r\n                    setError(\"Select a media\");\r\n                  } else if (\r\n                    CampaignName.current?.value == null ||\r\n                    CampaignName.current?.value == undefined ||\r\n                    CampaignName.current?.value == \"\"\r\n                  ) {\r\n                    setError(\"Enter campaign name\");\r\n                  } else if (CampaignName.current?.value.length < 4) {\r\n                    setError(\"Campaign should be more then 3 character.\");\r\n                  } else if (\r\n                    campinfo.current?.value == null ||\r\n                    campinfo.current?.value == undefined ||\r\n                    campinfo.current?.value == \"\"\r\n                  ) {\r\n                    setError(\"Add campaign info\");\r\n                  } else if (\r\n                    CostPerPost.current?.value == null ||\r\n                    CostPerPost.current?.value == undefined ||\r\n                    CostPerPost.current?.value == \"\"\r\n                  ) {\r\n                    setError(\"Fill the cost per post\");\r\n                  } else {\r\n                    if (campaginType == \"6\") {\r\n                      const x = new Date(StartDate!.current!.value);\r\n                      const y = new Date(EndDate!.current!.value);\r\n                      const pass_date: boolean = x > y;\r\n                      if (\r\n                        StartDate.current?.value == null ||\r\n                        StartDate.current?.value == undefined ||\r\n                        StartDate.current?.value == \"\"\r\n                      ) {\r\n                        setError(\"Enter planed starting date\");\r\n                      } else if (pass_date) {\r\n                        setError(\"Start date should be less then end date\");\r\n                      } else if (\r\n                        EndDate.current?.value == null ||\r\n                        EndDate.current?.value == undefined ||\r\n                        EndDate.current?.value == \"\"\r\n                      ) {\r\n                        setError(\"Enter planed end date\");\r\n                      } else {\r\n                        const req = {\r\n                          userId: userId,\r\n                          brandUserId: userId,\r\n                          brandId: brandId,\r\n                          cityId: \"0\",\r\n                          currencyId: \"0\",\r\n                          categories: \"0\",\r\n                          minEligibleRating: \"0\",\r\n                          maxEligibleRating: \"0\",\r\n                          minReach: \"0\",\r\n                          maxReach: \"0\",\r\n                          costPerPost: CostPerPost.current?.value,\r\n                          totalBudget: \"0\",\r\n                          dos: \"0\",\r\n                          donts: \"0\",\r\n                          mentions: \"0\",\r\n                          hashtags: \"0\",\r\n                          campaignTypeId: campaignTypeId,\r\n                          campaignName: CampaignName.current?.value,\r\n                          campaignInfo: campinfo.current?.value,\r\n                          platforms: platform.join(),\r\n                          startAt: StartDate.current?.value,\r\n                          endAt: EndDate.current?.value,\r\n                        };\r\n\r\n                        const data = await axios({\r\n                          method: \"post\",\r\n                          url: `${BaseUrl}/api/add-campaign`,\r\n                          data: req,\r\n                          headers: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Access-Control-Allow-Headers\": \"*\",\r\n                            \"Access-Control-Allow-Options\": \"*\",\r\n                            \"Access-Control-Allow-Methods\": \"*\",\r\n                            \"X-Content-Type-Options\": \"*\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Accept: \"*\",\r\n                          },\r\n                        });\r\n                        if (data.data.status == false) {\r\n                          setError(data.data.message);\r\n                        } else {\r\n                          const req1 = {\r\n                            brandId: brandId,\r\n                            campaignId: data.data.data.campaign.id,\r\n                            remark: \"init bid\",\r\n                            bidamount: CostPerPost.current?.value,\r\n                          };\r\n\r\n                          const data1 = await axios({\r\n                            method: \"post\",\r\n                            url: `${BaseUrl}/api/add-bid`,\r\n                            data: req1,\r\n                            headers: {\r\n                              \"Access-Control-Allow-Origin\": \"*\",\r\n                              \"Access-Control-Allow-Headers\": \"*\",\r\n                              \"Access-Control-Allow-Options\": \"*\",\r\n                              \"Access-Control-Allow-Methods\": \"*\",\r\n                              \"X-Content-Type-Options\": \"*\",\r\n                              \"Content-Type\": \"application/json\",\r\n                              Accept: \"*\",\r\n                            },\r\n                          });\r\n\r\n                          if (data1.data.status == false) {\r\n                            setError(data1.data.message);\r\n                          } else {\r\n                            return navigator(\r\n                              `/home/createcampaign/inviteinf/${data.data.data.campaign.id}`\r\n                            );\r\n                          }\r\n                        }\r\n                      }\r\n                    } else {\r\n                      const req = {\r\n                        userId: userId,\r\n                        brandUserId: userId,\r\n                        brandId: brandId,\r\n                        cityId: \"0\",\r\n                        currencyId: \"0\",\r\n                        categories: \"0\",\r\n                        minEligibleRating: \"0\",\r\n                        maxEligibleRating: \"0\",\r\n                        minReach: \"0\",\r\n                        maxReach: \"0\",\r\n                        costPerPost: CostPerPost.current?.value,\r\n                        totalBudget: \"0\",\r\n                        dos: \"0\",\r\n                        donts: \"0\",\r\n                        mentions: \"0\",\r\n                        hashtags: \"0\",\r\n                        campaignTypeId: campaignTypeId,\r\n                        campaignName: CampaignName.current?.value,\r\n                        campaignInfo: campinfo.current?.value,\r\n                        platforms: platform.join(),\r\n                        startAt: new Date().toLocaleDateString(),\r\n                        endAt: new Date().toLocaleDateString(),\r\n                      };\r\n                      const data = await axios({\r\n                        method: \"post\",\r\n                        url: `${BaseUrl}/api/add-campaign`,\r\n                        data: req,\r\n                        headers: {\r\n                          \"Access-Control-Allow-Origin\": \"*\",\r\n                          \"Access-Control-Allow-Headers\": \"*\",\r\n                          \"Access-Control-Allow-Options\": \"*\",\r\n                          \"Access-Control-Allow-Methods\": \"*\",\r\n                          \"X-Content-Type-Options\": \"*\",\r\n                          \"Content-Type\": \"application/json\",\r\n                          Accept: \"*\",\r\n                        },\r\n                      });\r\n                      if (data.data.status == false) {\r\n                        setError(data.data.message);\r\n                      } else {\r\n                        return navigator(\r\n                          `/home/createcampaign/inviteinf/${data.data.data.campaign.id}`\r\n                        );\r\n                      }\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <CusButton\r\n                  text=\"Create\"\r\n                  textColor={\"text-white\"}\r\n                  background=\"bg-primary\"\r\n                  width={\"w-full\"}\r\n                ></CusButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Spbd;\r\n"],
  "mappings": "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",
  "names": ["import_react", "data"]
}
