{
  "version": 3,
  "sources": ["../../../../../app/routes/home/createcampaign/step3.tsx"],
  "sourcesContent": ["import {\r\n  faAdd,\r\n  faCaretDown,\r\n  faCircleXmark,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useLoaderData, useNavigate } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport CreateCampaignStore from \"~/state/campaign/createcampaign\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { GoogleMap, Marker, useJsApiLoader } from \"@react-google-maps/api\";\r\n\r\nexport const loader = async () => {\r\n  const data = await axios.post(`${BaseUrl}/api/getcategory`);\r\n  return json({ data: data.data.data });\r\n};\r\n\r\nconst Step3 = () => {\r\n  const navigator = useNavigate();\r\n  const data = useLoaderData();\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const audienceText = useRef<HTMLInputElement>(null);\r\n  const [auderror, setAudError] = useState<string | null>(null);\r\n  const [addaudience, setAddAudience] = useState<boolean>(false);\r\n  const audience = CreateCampaignStore((state) => state.audience);\r\n  const removeAudience = CreateCampaignStore((state) => state.removeAudience);\r\n  const clearAudience = CreateCampaignStore((state) => state.clearAudience);\r\n  const addAudience = CreateCampaignStore((state) => state.addAudience);\r\n\r\n  const infLocation = CreateCampaignStore((state) => state.infLocation);\r\n  const setInfLocation = CreateCampaignStore((state) => state.setInfLocation);\r\n\r\n  const datepicker = useRef<HTMLInputElement | null>(null);\r\n  const tilldate = CreateCampaignStore((state) => state.tilldate);\r\n  const setTillDate = CreateCampaignStore((state) => state.setTillDate);\r\n\r\n  const maxInf = useRef<HTMLInputElement | null>(null);\r\n  const maxinf = CreateCampaignStore((state) => state.maxInf);\r\n  const setMaxInf = CreateCampaignStore((state) => state.setMaxInf);\r\n\r\n  const remuneration = useRef<HTMLInputElement | null>(null);\r\n  const Remuneration = CreateCampaignStore((state) => state.remuneration);\r\n  const setRemuneration = CreateCampaignStore((state) => state.setRemuneration);\r\n\r\n  const remunerationType = CreateCampaignStore(\r\n    (state) => state.remunerationType\r\n  );\r\n  const setRemunerationType = CreateCampaignStore(\r\n    (state) => state.setRemunerationType\r\n  );\r\n\r\n  const setLat = CreateCampaignStore((state) => state.setLat);\r\n  const setLong = CreateCampaignStore((state) => state.setLong);\r\n\r\n  useEffect(() => {\r\n    if (datepicker.current?.value != null) {\r\n      datepicker!.current!.value = tilldate;\r\n    }\r\n    if (maxInf.current?.value != null) {\r\n      maxInf!.current!.value = maxinf.toString();\r\n    }\r\n    if (remuneration.current?.value != null) {\r\n      remuneration!.current!.value = Remuneration;\r\n    }\r\n  }, []);\r\n\r\n  // map settings start here\r\n\r\n  const containerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  };\r\n\r\n  const [marker, setMarker] = useState<{ lat: number; lng: number }>({\r\n    lat: -3.745,\r\n    lng: -38.523,\r\n  });\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyBiZK164IPHzJ213FTrIR_hDUWVnjhC_4o\",\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n\r\n  const onLoad = useCallback(function callback(map: any) {\r\n    const bounds = new window.google.maps.LatLngBounds(marker);\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(function callback(map: any) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  const handleClick = (event: any) => {\r\n    setMarker({\r\n      lat: event.latLng.lat(),\r\n      lng: event.latLng.lng(),\r\n    });\r\n    setLat(event.latLng.lat());\r\n    setLong(event.latLng.lng());\r\n  };\r\n\r\n  //   map setting end here\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-white shadow-xl rounded-xl px-8 py-4 mt-4\">\r\n        <h2 className=\"text-black tect-xl font-medium text-left\">\r\n          Audience & demeography\r\n        </h2>\r\n        {/* audience start here */}\r\n        <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n          Audience location\r\n        </h2>\r\n        <div className=\"flex\">\r\n          <div className=\"bg-[#EEEEEE]  h-10 rounded-lg  flex gap-1 pl-2 sm:w-96 w-72\">\r\n            <div className=\"flex gap-x-2 overflow-x-scroll no-scrollbar\">\r\n              {audience.map((value: string, i: number) => {\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\"\r\n                  >\r\n                    <div className=\" text-black font-semibold \">\r\n                      {`@${value}`}\r\n                    </div>\r\n                    <div\r\n                      className=\"grid place-items-center cursor-pointer\"\r\n                      onClick={() => removeAudience(value)}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        icon={faCircleXmark}\r\n                        className=\"text-lg font-bold text-red-500\"\r\n                      ></FontAwesomeIcon>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"grow\"></div>\r\n            <div\r\n              className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\"\r\n              onClick={() => setAddAudience(true)}\r\n            >\r\n              <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p\r\n              className=\"text-primary text-center text-md font-normal my-2 w-20 cursor-pointer\"\r\n              onClick={clearAudience}\r\n            >\r\n              clear all\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {addaudience ? (\r\n          <div className=\"mt-4 flex\">\r\n            <div className=\"grid place-items-center\">\r\n              <input\r\n                ref={audienceText}\r\n                type=\"text\"\r\n                className=\"bg-gray-200 w-full outline-none rounded-lg px-4 py-2\"\r\n                placeholder=\"Audience\"\r\n              />\r\n            </div>\r\n            <div className=\"w-6\"></div>\r\n            <div\r\n              onClick={() => {\r\n                if (\r\n                  audienceText!.current!.value == \"\" ||\r\n                  audienceText!.current!.value == null ||\r\n                  audienceText!.current!.value == undefined\r\n                ) {\r\n                  setAudError(\"Audience location can't be empty!\");\r\n                } else if (audience.includes(audienceText!.current!.value)) {\r\n                  setAudError(\"Audience already exist add a diffrent one\");\r\n                } else if (audienceText!.current!.value.indexOf(\" \") >= 0) {\r\n                  setAudError(\"Audience cannot containt space\");\r\n                } else {\r\n                  addAudience(audienceText!.current!.value);\r\n                  audienceText!.current!.value = \"\";\r\n                  setAddAudience(false);\r\n                  setAudError(null);\r\n                }\r\n              }}\r\n            >\r\n              <CusButton\r\n                text=\"ADD\"\r\n                background=\"bg-primary\"\r\n                width={\"w-20\"}\r\n              ></CusButton>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {auderror == \"\" || auderror == null || auderror == undefined ? null : (\r\n          <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-xl text-red-500 text-md font-normal text-md\">\r\n            {auderror}\r\n          </div>\r\n        )}\r\n\r\n        {/* audience end here */}\r\n        <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n          Influencer category\r\n        </h2>\r\n        <select\r\n          className=\"w-full p-2 bg-[#EEEEEE] rounded-lg outline-none border-none pr-6\"\r\n          onClick={(value: any) => {\r\n            const data = value.target.value + \"\";\r\n            const setdata = data.split(\" \");\r\n            setInfLocation(setdata[0], setdata[1], setdata[2]);\r\n          }}\r\n        >\r\n          {data.data.map((value: any, i: number) => {\r\n            if (value.id == infLocation.id) {\r\n              return (\r\n                <option\r\n                  value={`${value.id} ${value.categoryName} ${value.categoryCode}`}\r\n                  key={i}\r\n                  className=\"border-none outline-none font-normal text-lg\"\r\n                  selected\r\n                >{`${value.categoryName} [${value.categoryCode}]`}</option>\r\n              );\r\n            } else {\r\n              return (\r\n                <option\r\n                  value={`${value.id} ${value.categoryName} ${value.categoryCode}`}\r\n                  key={i}\r\n                  className=\"border-none outline-none font-normal text-lg\"\r\n                >{`${value.categoryName} [${value.categoryCode}]`}</option>\r\n              );\r\n            }\r\n          })}\r\n        </select>\r\n        <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n          Maximum no of influencers that can join the campaign\r\n        </h2>\r\n        <input\r\n          ref={maxInf}\r\n          type={\"number\"}\r\n          className=\"bg-[#EEEEEE] outline-none border-none rounded-lg focus:border-gray-300 mt-4 w-full p-2\"\r\n        ></input>\r\n        <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n          Geo restriction ( Optional only applicable for influencer filtering )\r\n          radius in kilometers\r\n        </h2>\r\n        <div className=\"w-full h-96\">\r\n          {isLoaded ? (\r\n            <GoogleMap\r\n              mapContainerStyle={containerStyle}\r\n              center={marker}\r\n              zoom={10}\r\n              onLoad={onLoad}\r\n              onUnmount={onUnmount}\r\n              onClick={handleClick}\r\n            >\r\n              {marker && <Marker position={marker} />}\r\n            </GoogleMap>\r\n          ) : null}\r\n        </div>\r\n        <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n          Accept participation / invite till\r\n        </h2>\r\n        <input\r\n          type={\"date\"}\r\n          ref={datepicker}\r\n          className=\"bg-[#EEEEEE] outline-none border-none rounded-lg focus:border-gray-300 mt-4 w-full p-2\"\r\n        ></input>\r\n        <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n          Remuneration\r\n        </h2>\r\n        <select\r\n          className=\"w-full p-2 bg-[#EEEEEE] rounded-lg outline-none border-none pr-6\"\r\n          onChange={(value) => {\r\n            setRemunerationType(value.target.value);\r\n          }}\r\n        >\r\n          <option\r\n            value=\"1\"\r\n            className=\"border-none outline-none font-normal text-lg\"\r\n          >\r\n            Cash\r\n          </option>\r\n          <option\r\n            value=\"2\"\r\n            className=\"border-none outline-none font-normal text-lg\"\r\n          >\r\n            Product\r\n          </option>\r\n          <option\r\n            value=\"3\"\r\n            className=\"border-none outline-none font-normal text-lg\"\r\n          >\r\n            Revenue\r\n          </option>\r\n          <option\r\n            value=\"4\"\r\n            className=\"border-none outline-none font-normal text-lg\"\r\n          >\r\n            Discount\r\n          </option>\r\n        </select>\r\n        {remunerationType == \"1\" ? (\r\n          <input\r\n            ref={remuneration}\r\n            type={\"text\"}\r\n            className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md mt-4 w-full p-2\"\r\n            placeholder=\"usd\"\r\n          />\r\n        ) : null}\r\n        {remunerationType == \"2\" ? (\r\n          <input\r\n            ref={remuneration}\r\n            type={\"text\"}\r\n            className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md mt-4 w-full p-2\"\r\n            placeholder=\"Product details\"\r\n          />\r\n        ) : null}\r\n        {remunerationType == \"3\" ? (\r\n          <input\r\n            ref={remuneration}\r\n            type={\"text\"}\r\n            className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md mt-4 w-full p-2\"\r\n            placeholder=\"% per sale\"\r\n          />\r\n        ) : null}\r\n        {remunerationType == \"4\" ? (\r\n          <input\r\n            ref={remuneration}\r\n            type={\"text\"}\r\n            className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md mt-4 w-full p-2\"\r\n            placeholder=\"Coupons\"\r\n          />\r\n        ) : null}\r\n        {error == \"\" || error == null || error == undefined ? null : (\r\n          <div className=\"my-4 bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-xl text-red-500 text-md font-normal text-md\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <div className=\"flex w-full\">\r\n          <div\r\n            onClick={() => {\r\n              navigator(-1);\r\n            }}\r\n            className=\"w-full\"\r\n          >\r\n            <CusButton\r\n              text=\"Back\"\r\n              textColor={\"text-black\"}\r\n              background=\"bg-gray-100\"\r\n              width={\"w-full\"}\r\n            ></CusButton>\r\n          </div>\r\n          <div className=\"w-10\"></div>\r\n          <div\r\n            className=\"w-full\"\r\n            onClick={() => {\r\n              if (audience.length == 0) {\r\n                setError(\"Add Audience Location\");\r\n              } else if (\r\n                infLocation.id == null ||\r\n                infLocation.id == undefined ||\r\n                infLocation.id == \"\"\r\n              ) {\r\n                setError(\"Select Influencer category\");\r\n              } else if (\r\n                maxInf.current?.value == null ||\r\n                maxInf.current.value == undefined ||\r\n                maxInf.current?.value == \"\" ||\r\n                parseInt(maxInf.current?.value) == 0\r\n              ) {\r\n                setError(\"Select maximum influencer no. \");\r\n              } else if (\r\n                datepicker.current?.value == null ||\r\n                datepicker.current?.value == undefined ||\r\n                datepicker.current?.value == \"\"\r\n              ) {\r\n                setError(\"Select Accept participation last date. \");\r\n              } else if (\r\n                remuneration.current?.value == null ||\r\n                remuneration.current?.value == undefined ||\r\n                remuneration.current?.value == \"\"\r\n              ) {\r\n                setError(\"Select remuneration. \");\r\n              } else {\r\n                setTillDate(datepicker.current?.value);\r\n                setMaxInf(parseInt(maxInf.current?.value));\r\n                setRemuneration(remuneration.current?.value);\r\n                navigator(\"/home/createcampaign/step4\");\r\n              }\r\n            }}\r\n          >\r\n            <CusButton\r\n              text=\"Next\"\r\n              textColor={\"text-white\"}\r\n              background=\"bg-primary\"\r\n              width={\"w-full\"}\r\n            ></CusButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Step3;\r\n"],
  "mappings": "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",
  "names": ["import_react", "map", "data"]
}
