{
  "version": 3,
  "sources": ["../../../../../app/routes/home/createcampaign/step4.tsx"],
  "sourcesContent": ["import { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport { useLoaderData, useNavigate } from \"@remix-run/react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport ReactSwitch from \"react-switch\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport CreateCampaignStore from \"~/state/campaign/createcampaign\";\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n  const cookieHeader = props.request.headers.get(\"Cookie\");\r\n  const cookie = await userPrefs.parse(cookieHeader);\r\n  return json({ user: cookie.user });\r\n};\r\n\r\nconst Step4 = () => {\r\n  const brand_name = useLoaderData().user;\r\n  // brand name\r\n  const [bn, setbn] = useState<string>(\"\");\r\n  // campaign name\r\n  const [cn, setcn] = useState<string>(\"\");\r\n  //planed budget\r\n  const [pb, setpb] = useState<string>(\"\");\r\n  //cost per post\r\n  const [cpp, setcpp] = useState<string>(\"\");\r\n  //start date\r\n  const [sd, setsd] = useState<string>(\"\");\r\n  // end date\r\n  const [ed, seted] = useState<string>(\"\");\r\n  //   min reach\r\n  const [minr, setminr] = useState<string>(\"\");\r\n  //   max reach\r\n  const [maxr, setmaxr] = useState<string>(\"\");\r\n\r\n  const navigator = useNavigate();\r\n  const [active, setActive] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const CampaignName = useRef<HTMLInputElement | null>(null);\r\n  const campaignName = CreateCampaignStore((state) => state.campaignName);\r\n  const setCampaignName = CreateCampaignStore((state) => state.setCampaignName);\r\n\r\n  const PlanedBudget = useRef<HTMLInputElement | null>(null);\r\n  const planedBudget = CreateCampaignStore((state) => state.planedBudget);\r\n  const setPlanedBudget = CreateCampaignStore((state) => state.setPlanedBudget);\r\n\r\n  const CostPerPost = useRef<HTMLInputElement | null>(null);\r\n  const costPerPost = CreateCampaignStore((state) => state.costPerPost);\r\n  const setCostPerPost = CreateCampaignStore((state) => state.setCostPerPost);\r\n\r\n  const StartDate = useRef<HTMLInputElement | null>(null);\r\n  const startDate = CreateCampaignStore((state) => state.startDate);\r\n  const setStartDate = CreateCampaignStore((state) => state.setStartDate);\r\n\r\n  const EndDate = useRef<HTMLInputElement | null>(null);\r\n  const endDate = CreateCampaignStore((state) => state.endDate);\r\n  const setEndDate = CreateCampaignStore((state) => state.setEndDate);\r\n\r\n  const MinReach = useRef<HTMLInputElement | null>(null);\r\n  const minReach = CreateCampaignStore((state) => state.minReach);\r\n  const setMinReach = CreateCampaignStore((state) => state.setMinReach);\r\n\r\n  const MaxReact = useRef<HTMLInputElement | null>(null);\r\n  const maxReact = CreateCampaignStore((state) => state.maxReact);\r\n  const setMaxReact = CreateCampaignStore((state) => state.setMaxReact);\r\n\r\n  const publicGlobally = CreateCampaignStore((state) => state.publicGlobally);\r\n  const setPublicGlobally = CreateCampaignStore(\r\n    (state) => state.setPublicGlobally\r\n  );\r\n\r\n  useEffect(() => {\r\n    setbn(brand_name.brand.name);\r\n    if (CampaignName.current?.value != null) {\r\n      CampaignName!.current!.value = campaignName;\r\n    }\r\n    if (PlanedBudget.current?.value != null) {\r\n      PlanedBudget!.current!.value = planedBudget.toString();\r\n    }\r\n    if (CostPerPost.current?.value != null) {\r\n      CostPerPost!.current!.value = costPerPost.toString();\r\n    }\r\n    if (StartDate.current?.value != null) {\r\n      StartDate!.current!.value = startDate;\r\n    }\r\n    if (EndDate.current?.value != null) {\r\n      EndDate!.current!.value = endDate;\r\n    }\r\n    if (MinReach.current?.value != null) {\r\n      MinReach!.current!.value = minReach.toString();\r\n    }\r\n    if (MaxReact.current?.value != null) {\r\n      MaxReact!.current!.value = maxReact.toString();\r\n    }\r\n    setActive(publicGlobally);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex gap-x-4 flex-col lg:flex-row\">\r\n        <div className=\"bg-white shadow-xl rounded-xl px-8 py-4 mt-4\">\r\n          <h1 className=\"text-primary text-lg font-medium\">Create campaign</h1>\r\n          <p className=\"text-primary text-md font-normal\">\r\n            The term business demography is used to cover a set of variables\r\n            which explain the characteristics and demography of the business\r\n            population.\r\n          </p>\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Campaign name\r\n          </h2>\r\n          <input\r\n            ref={CampaignName}\r\n            type={\"text\"}\r\n            className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\"\r\n            onChange={(val) => setcn(val.target.value)}\r\n          />\r\n\r\n          <div className=\"flex flex-col lg:flex-row\">\r\n            <div>\r\n              <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n                Planed budget\r\n              </h2>\r\n              <input\r\n                ref={PlanedBudget}\r\n                type={\"number\"}\r\n                className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2  lg:w-72\"\r\n                onChange={(val) => setpb(val.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"w-8\"></div>\r\n            <div>\r\n              <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n                Cost per post\r\n              </h2>\r\n              <input\r\n                ref={CostPerPost}\r\n                type={\"number\"}\r\n                className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2 lg:w-72\"\r\n                onChange={(val) => setcpp(val.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col lg:flex-row\">\r\n            <div>\r\n              <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n                Start date\r\n              </h2>\r\n              <input\r\n                type={\"date\"}\r\n                ref={StartDate}\r\n                className=\"bg-[#EEEEEE] outline-none border-none rounded-lg focus:border-gray-300 w-full p-2 lg:w-72\"\r\n                onChange={(val) => setsd(val.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div className=\"w-8\"></div>\r\n            <div>\r\n              <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n                End date\r\n              </h2>\r\n              <input\r\n                ref={EndDate}\r\n                type={\"date\"}\r\n                className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2 lg:w-72\"\r\n                onChange={(val) => seted(val.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-col lg:flex-row\">\r\n            <div>\r\n              <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n                Min reach\r\n              </h2>\r\n              <input\r\n                ref={MinReach}\r\n                type={\"number\"}\r\n                className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2 lg:w-72\"\r\n                onChange={(val) => setminr(val.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"w-8\"></div>\r\n            <div>\r\n              <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n                Max reach\r\n              </h2>\r\n              <input\r\n                ref={MaxReact}\r\n                type={\"number\"}\r\n                className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2 lg:w-72\"\r\n                onChange={(val) => setmaxr(val.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center gap-x-4\">\r\n            <ReactSwitch\r\n              onChange={() => setActive(!active)}\r\n              checked={active}\r\n              checkedIcon={false}\r\n              uncheckedIcon={false}\r\n              onColor=\"#03125E\"\r\n            ></ReactSwitch>\r\n            <div className=\"grow\">\r\n              <h1 className=\"text-primary text-lg font-medium\">\r\n                Public globally\r\n              </h1>\r\n              <p className=\"text-primary text-md font-normal\">\r\n                The term business demography is used to cover a set of variables\r\n                which explain the characteristics and demography of the business\r\n                population.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"lg:w-80 bg-white  shadow-lx rounded-xl p-4 mt-4\">\r\n            <h1 className=\"text-primary text-lg font-medium\">\r\n              Campaign Summary\r\n            </h1>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Brand name</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">{bn}</p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Campaign name</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {cn == \"\" ? \"--------\" : cn}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Planed budget</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {pb == \"\" ? \"--------\" : pb}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Cost per post</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {cpp == \"\" ? \"--------\" : cpp}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Start date</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {sd == \"\"\r\n                  ? \"--------\"\r\n                  : new Date(sd).toLocaleDateString(\"en-US\", {\r\n                      weekday: \"short\",\r\n                      year: \"numeric\",\r\n                      month: \"long\",\r\n                      day: \"numeric\",\r\n                    })}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">End date</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {ed == \"\"\r\n                  ? \"--------\"\r\n                  : new Date(ed).toLocaleDateString(\"en-US\", {\r\n                      weekday: \"short\",\r\n                      year: \"numeric\",\r\n                      month: \"long\",\r\n                      day: \"numeric\",\r\n                    })}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Min reach</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {minr == \"\" ? \"--------\" : minr}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Max reach</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {maxr == \"\" ? \"--------\" : maxr}\r\n              </p>\r\n            </div>\r\n            {error == \"\" || error == null || error == undefined ? null : (\r\n              <div className=\"my-4 bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-xl text-red-500 text-md font-normal text-md\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            <div className=\"flex w-full\">\r\n              <div\r\n                onClick={() => {\r\n                  navigator(-1);\r\n                }}\r\n                className=\"w-full\"\r\n              >\r\n                <CusButton\r\n                  text=\"Back\"\r\n                  textColor={\"text-black\"}\r\n                  background=\"bg-gray-100\"\r\n                  width={\"w-full\"}\r\n                  fontwidth={\"font-bold\"}\r\n                ></CusButton>\r\n              </div>\r\n              <div className=\"w-10\"></div>\r\n              <div\r\n                className=\"w-full\"\r\n                onClick={() => {\r\n                  const x = new Date(StartDate!.current!.value);\r\n                  const y = new Date(EndDate!.current!.value);\r\n                  const pass_date: boolean = x > y;\r\n                  if (\r\n                    CampaignName.current?.value == null ||\r\n                    CampaignName.current?.value == undefined ||\r\n                    CampaignName.current?.value == \"\"\r\n                  ) {\r\n                    setError(\"Enter campaign name\");\r\n                  } else if (CampaignName.current?.value.length < 4) {\r\n                    setError(\"Campaign should be more then 3 character.\");\r\n                  } else if (\r\n                    PlanedBudget.current?.value == null ||\r\n                    PlanedBudget.current?.value == undefined ||\r\n                    PlanedBudget.current?.value == \"\" ||\r\n                    parseInt(PlanedBudget.current?.value) == 0\r\n                  ) {\r\n                    setError(\"Enter planed budget\");\r\n                  } else if (\r\n                    CostPerPost.current?.value == null ||\r\n                    CostPerPost.current?.value == undefined ||\r\n                    CostPerPost.current?.value == \"\" ||\r\n                    parseInt(CostPerPost.current?.value) == 0\r\n                  ) {\r\n                    setError(\"Enter planed cost per post\");\r\n                  } else if (\r\n                    StartDate.current?.value == null ||\r\n                    StartDate.current?.value == undefined ||\r\n                    StartDate.current?.value == \"\"\r\n                  ) {\r\n                    setError(\"Enter planed starting date\");\r\n                  } else if (\r\n                    EndDate.current?.value == null ||\r\n                    EndDate.current?.value == undefined ||\r\n                    EndDate.current?.value == \"\"\r\n                  ) {\r\n                    setError(\"Enter planed end date\");\r\n                  } else if (\r\n                    MinReach.current?.value == null ||\r\n                    MinReach.current?.value == undefined ||\r\n                    MinReach.current?.value == \"\" ||\r\n                    parseInt(MinReach.current?.value) == 0\r\n                  ) {\r\n                    setError(\"Enter planed min reach\");\r\n                  } else if (\r\n                    MaxReact.current?.value == null ||\r\n                    MaxReact.current?.value == undefined ||\r\n                    MaxReact.current?.value == \"\" ||\r\n                    parseInt(MaxReact.current?.value) == 0\r\n                  ) {\r\n                    setError(\"Enter planed max reach\");\r\n                  } else if (\r\n                    parseInt(MinReach.current?.value) >\r\n                    parseInt(MaxReact.current?.value)\r\n                  ) {\r\n                    setError(\"Max react should be gretter then min reach\");\r\n                  } else if (pass_date) {\r\n                    setError(\"Start date should be less then end date\");\r\n                  } else {\r\n                    setCampaignName(CampaignName!.current!.value);\r\n                    setPlanedBudget(parseInt(CostPerPost!.current!.value));\r\n                    setCostPerPost(parseInt(CostPerPost!.current!.value));\r\n                    setStartDate(StartDate!.current!.value);\r\n                    setEndDate(EndDate!.current!.value);\r\n                    setMinReach(parseInt(MinReach.current?.value));\r\n                    setMaxReact(parseInt(MaxReact.current?.value));\r\n                    setPublicGlobally(active);\r\n                    navigator(\"/home/createcampaign/step5\");\r\n                  }\r\n                }}\r\n              >\r\n                <CusButton\r\n                  text=\"Next\"\r\n                  textColor={\"text-white\"}\r\n                  background=\"bg-secondary\"\r\n                  width={\"w-full\"}\r\n                  fontwidth={\"font-bold\"}\r\n                ></CusButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Step4;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAEA,IAAAA,gBAA4C;AAC5C,0BAAwB;AA6FpB;AAnFJ,IAAM,QAAQ,MAAM;AAClB,QAAM,aAAa,cAAc,EAAE;AAEnC,QAAM,CAAC,IAAI,KAAK,QAAI,wBAAiB,EAAE;AAEvC,QAAM,CAAC,IAAI,KAAK,QAAI,wBAAiB,EAAE;AAEvC,QAAM,CAAC,IAAI,KAAK,QAAI,wBAAiB,EAAE;AAEvC,QAAM,CAAC,KAAK,MAAM,QAAI,wBAAiB,EAAE;AAEzC,QAAM,CAAC,IAAI,KAAK,QAAI,wBAAiB,EAAE;AAEvC,QAAM,CAAC,IAAI,KAAK,QAAI,wBAAiB,EAAE;AAEvC,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAiB,EAAE;AAE3C,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAiB,EAAE;AAE3C,QAAM,YAAY,YAAY;AAC9B,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,KAAK;AAC1C,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAwB,IAAI;AAEtD,QAAM,mBAAe,sBAAgC,IAAI;AACzD,QAAM,eAAe,uBAAoB,CAAC,UAAU,MAAM,YAAY;AACtE,QAAM,kBAAkB,uBAAoB,CAAC,UAAU,MAAM,eAAe;AAE5E,QAAM,mBAAe,sBAAgC,IAAI;AACzD,QAAM,eAAe,uBAAoB,CAAC,UAAU,MAAM,YAAY;AACtE,QAAM,kBAAkB,uBAAoB,CAAC,UAAU,MAAM,eAAe;AAE5E,QAAM,kBAAc,sBAAgC,IAAI;AACxD,QAAM,cAAc,uBAAoB,CAAC,UAAU,MAAM,WAAW;AACpE,QAAM,iBAAiB,uBAAoB,CAAC,UAAU,MAAM,cAAc;AAE1E,QAAM,gBAAY,sBAAgC,IAAI;AACtD,QAAM,YAAY,uBAAoB,CAAC,UAAU,MAAM,SAAS;AAChE,QAAM,eAAe,uBAAoB,CAAC,UAAU,MAAM,YAAY;AAEtE,QAAM,cAAU,sBAAgC,IAAI;AACpD,QAAM,UAAU,uBAAoB,CAAC,UAAU,MAAM,OAAO;AAC5D,QAAM,aAAa,uBAAoB,CAAC,UAAU,MAAM,UAAU;AAElE,QAAM,eAAW,sBAAgC,IAAI;AACrD,QAAM,WAAW,uBAAoB,CAAC,UAAU,MAAM,QAAQ;AAC9D,QAAM,cAAc,uBAAoB,CAAC,UAAU,MAAM,WAAW;AAEpE,QAAM,eAAW,sBAAgC,IAAI;AACrD,QAAM,WAAW,uBAAoB,CAAC,UAAU,MAAM,QAAQ;AAC9D,QAAM,cAAc,uBAAoB,CAAC,UAAU,MAAM,WAAW;AAEpE,QAAM,iBAAiB,uBAAoB,CAAC,UAAU,MAAM,cAAc;AAC1E,QAAM,oBAAoB;AAAA,IACxB,CAAC,UAAU,MAAM;AAAA,EACnB;AAEA,+BAAU,MAAM;AArElB;AAsEI,UAAM,WAAW,MAAM,IAAI;AAC3B,UAAI,kBAAa,YAAb,mBAAsB,UAAS,MAAM;AACvC,mBAAc,QAAS,QAAQ;AAAA,IACjC;AACA,UAAI,kBAAa,YAAb,mBAAsB,UAAS,MAAM;AACvC,mBAAc,QAAS,QAAQ,aAAa,SAAS;AAAA,IACvD;AACA,UAAI,iBAAY,YAAZ,mBAAqB,UAAS,MAAM;AACtC,kBAAa,QAAS,QAAQ,YAAY,SAAS;AAAA,IACrD;AACA,UAAI,eAAU,YAAV,mBAAmB,UAAS,MAAM;AACpC,gBAAW,QAAS,QAAQ;AAAA,IAC9B;AACA,UAAI,aAAQ,YAAR,mBAAiB,UAAS,MAAM;AAClC,cAAS,QAAS,QAAQ;AAAA,IAC5B;AACA,UAAI,cAAS,YAAT,mBAAkB,UAAS,MAAM;AACnC,eAAU,QAAS,QAAQ,SAAS,SAAS;AAAA,IAC/C;AACA,UAAI,cAAS,YAAT,mBAAkB,UAAS,MAAM;AACnC,eAAU,QAAS,QAAQ,SAAS,SAAS;AAAA,IAC/C;AACA,cAAU,cAAc;AAAA,EAC1B,GAAG,CAAC,CAAC;AAEL,SACE,sFACE,6DAAC,SAAI,WAAU,qCACb;AAAA,uDAAC,SAAI,WAAU,gDACb;AAAA,yDAAC,QAAG,WAAU,oCAAmC,+BAAjD;AAAA;AAAA;AAAA;AAAA,aAAgE;AAAA,MAChE,mDAAC,OAAE,WAAU,oCAAmC,6JAAhD;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC,QAAG,WAAU,mDAAkD,6BAAhE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACC,KAAK;AAAA,UACL,MAAM;AAAA,UACN,WAAU;AAAA,UACV,UAAU,CAAC,QAAQ,MAAM,IAAI,OAAO,KAAK;AAAA;AAAA,QAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,MAEA,mDAAC,SAAI,WAAU,6BACb;AAAA,2DAAC,SACC;AAAA,6DAAC,QAAG,WAAU,mDAAkD,6BAAhE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,KAAK;AAAA,cACL,MAAM;AAAA,cACN,WAAU;AAAA,cACV,UAAU,CAAC,QAAQ,MAAM,IAAI,OAAO,KAAK;AAAA;AAAA,YAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QACA,mDAAC,SAAI,WAAU,SAAf;AAAA;AAAA;AAAA;AAAA,eAAqB;AAAA,QACrB,mDAAC,SACC;AAAA,6DAAC,QAAG,WAAU,mDAAkD,6BAAhE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,KAAK;AAAA,cACL,MAAM;AAAA,cACN,WAAU;AAAA,cACV,UAAU,CAAC,QAAQ,OAAO,IAAI,OAAO,KAAK;AAAA;AAAA,YAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,WAvBF;AAAA;AAAA;AAAA;AAAA,aAwBA;AAAA,MACA,mDAAC,SAAI,WAAU,6BACb;AAAA,2DAAC,SACC;AAAA,6DAAC,QAAG,WAAU,mDAAkD,0BAAhE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,MAAM;AAAA,cACN,KAAK;AAAA,cACL,WAAU;AAAA,cACV,UAAU,CAAC,QAAQ,MAAM,IAAI,OAAO,KAAK;AAAA;AAAA,YAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKC;AAAA,aATH;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QACA,mDAAC,SAAI,WAAU,SAAf;AAAA;AAAA;AAAA;AAAA,eAAqB;AAAA,QACrB,mDAAC,SACC;AAAA,6DAAC,QAAG,WAAU,mDAAkD,wBAAhE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,KAAK;AAAA,cACL,MAAM;AAAA,cACN,WAAU;AAAA,cACV,UAAU,CAAC,QAAQ,MAAM,IAAI,OAAO,KAAK;AAAA;AAAA,YAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,WAvBF;AAAA;AAAA;AAAA;AAAA,aAwBA;AAAA,MACA,mDAAC,SAAI,WAAU,6BACb;AAAA,2DAAC,SACC;AAAA,6DAAC,QAAG,WAAU,mDAAkD,yBAAhE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,KAAK;AAAA,cACL,MAAM;AAAA,cACN,WAAU;AAAA,cACV,UAAU,CAAC,QAAQ,QAAQ,IAAI,OAAO,KAAK;AAAA;AAAA,YAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QACA,mDAAC,SAAI,WAAU,SAAf;AAAA;AAAA;AAAA;AAAA,eAAqB;AAAA,QACrB,mDAAC,SACC;AAAA,6DAAC,QAAG,WAAU,mDAAkD,yBAAhE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,KAAK;AAAA,cACL,MAAM;AAAA,cACN,WAAU;AAAA,cACV,UAAU,CAAC,QAAQ,QAAQ,IAAI,OAAO,KAAK;AAAA;AAAA,YAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,WAvBF;AAAA;AAAA;AAAA;AAAA,aAwBA;AAAA,MACA,mDAAC,SAAI,WAAU,6BACb;AAAA;AAAA,UAAC,oBAAAC;AAAA,UAAA;AAAA,YACC,UAAU,MAAM,UAAU,CAAC,MAAM;AAAA,YACjC,SAAS;AAAA,YACT,aAAa;AAAA,YACb,eAAe;AAAA,YACf,SAAQ;AAAA;AAAA,UALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMC;AAAA,QACD,mDAAC,SAAI,WAAU,QACb;AAAA,6DAAC,QAAG,WAAU,oCAAmC,+BAAjD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,OAAE,WAAU,oCAAmC,6JAAhD;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,WAjBF;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,SA9GF;AAAA;AAAA;AAAA;AAAA,WA+GA;AAAA,IACA,mDAAC,SACC,6DAAC,SAAI,WAAU,mDACb;AAAA,yDAAC,QAAG,WAAU,oCAAmC,gCAAjD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,SAAI,WAAU,aACb;AAAA,2DAAC,OAAE,WAAU,oCAAmC,0BAAhD;AAAA;AAAA;AAAA;AAAA,eAA0D;AAAA,QAC1D,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,OAAE,WAAU,oCAAoC,gBAAjD;AAAA;AAAA;AAAA;AAAA,eAAoD;AAAA,WAHtD;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC,SAAI,WAAU,aACb;AAAA,2DAAC,OAAE,WAAU,oCAAmC,6BAAhD;AAAA;AAAA;AAAA;AAAA,eAA6D;AAAA,QAC7D,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,OAAE,WAAU,oCACV,gBAAM,KAAK,aAAa,MAD3B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,SAAI,WAAU,aACb;AAAA,2DAAC,OAAE,WAAU,oCAAmC,6BAAhD;AAAA;AAAA;AAAA;AAAA,eAA6D;AAAA,QAC7D,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,OAAE,WAAU,oCACV,gBAAM,KAAK,aAAa,MAD3B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,SAAI,WAAU,aACb;AAAA,2DAAC,OAAE,WAAU,oCAAmC,6BAAhD;AAAA;AAAA;AAAA;AAAA,eAA6D;AAAA,QAC7D,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,OAAE,WAAU,oCACV,iBAAO,KAAK,aAAa,OAD5B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,SAAI,WAAU,aACb;AAAA,2DAAC,OAAE,WAAU,oCAAmC,0BAAhD;AAAA;AAAA;AAAA;AAAA,eAA0D;AAAA,QAC1D,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,OAAE,WAAU,oCACV,gBAAM,KACH,aACA,IAAI,KAAK,EAAE,EAAE,mBAAmB,SAAS;AAAA,UACvC,SAAS;AAAA,UACT,MAAM;AAAA,UACN,OAAO;AAAA,UACP,KAAK;AAAA,QACP,CAAC,KARP;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,WAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,MACA,mDAAC,SAAI,WAAU,aACb;AAAA,2DAAC,OAAE,WAAU,oCAAmC,wBAAhD;AAAA;AAAA;AAAA;AAAA,eAAwD;AAAA,QACxD,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,OAAE,WAAU,oCACV,gBAAM,KACH,aACA,IAAI,KAAK,EAAE,EAAE,mBAAmB,SAAS;AAAA,UACvC,SAAS;AAAA,UACT,MAAM;AAAA,UACN,OAAO;AAAA,UACP,KAAK;AAAA,QACP,CAAC,KARP;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,WAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,MACA,mDAAC,SAAI,WAAU,aACb;AAAA,2DAAC,OAAE,WAAU,oCAAmC,yBAAhD;AAAA;AAAA;AAAA;AAAA,eAAyD;AAAA,QACzD,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,OAAE,WAAU,oCACV,kBAAQ,KAAK,aAAa,QAD7B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,SAAI,WAAU,aACb;AAAA,2DAAC,OAAE,WAAU,oCAAmC,yBAAhD;AAAA;AAAA;AAAA;AAAA,eAAyD;AAAA,QACzD,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,OAAE,WAAU,oCACV,kBAAQ,KAAK,aAAa,QAD7B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACC,SAAS,MAAM,SAAS,QAAQ,SAAS,SAAY,OACpD,mDAAC,SAAI,WAAU,yHACZ,mBADH;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEF,mDAAC,SAAI,WAAU,eACb;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAS,MAAM;AACb,wBAAU,EAAE;AAAA,YACd;AAAA,YACA,WAAU;AAAA,YAEV;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,WAAW;AAAA,gBACX,YAAW;AAAA,gBACX,OAAO;AAAA,gBACP,WAAW;AAAA;AAAA,cALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMC;AAAA;AAAA,UAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAaA;AAAA,QACA,mDAAC,SAAI,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAS,MAAM;AAlT/B;AAmTkB,oBAAM,IAAI,IAAI,KAAK,UAAW,QAAS,KAAK;AAC5C,oBAAM,IAAI,IAAI,KAAK,QAAS,QAAS,KAAK;AAC1C,oBAAM,YAAqB,IAAI;AAC/B,oBACE,kBAAa,YAAb,mBAAsB,UAAS,UAC/B,kBAAa,YAAb,mBAAsB,UAAS,YAC/B,kBAAa,YAAb,mBAAsB,UAAS,IAC/B;AACA,yBAAS,qBAAqB;AAAA,cAChC,aAAW,kBAAa,YAAb,mBAAsB,MAAM,UAAS,GAAG;AACjD,yBAAS,2CAA2C;AAAA,cACtD,aACE,kBAAa,YAAb,mBAAsB,UAAS,UAC/B,kBAAa,YAAb,mBAAsB,UAAS,YAC/B,kBAAa,YAAb,mBAAsB,UAAS,MAC/B,UAAS,kBAAa,YAAb,mBAAsB,KAAK,KAAK,GACzC;AACA,yBAAS,qBAAqB;AAAA,cAChC,aACE,iBAAY,YAAZ,mBAAqB,UAAS,UAC9B,iBAAY,YAAZ,mBAAqB,UAAS,YAC9B,iBAAY,YAAZ,mBAAqB,UAAS,MAC9B,UAAS,iBAAY,YAAZ,mBAAqB,KAAK,KAAK,GACxC;AACA,yBAAS,4BAA4B;AAAA,cACvC,aACE,eAAU,YAAV,mBAAmB,UAAS,UAC5B,eAAU,YAAV,mBAAmB,UAAS,YAC5B,eAAU,YAAV,mBAAmB,UAAS,IAC5B;AACA,yBAAS,4BAA4B;AAAA,cACvC,aACE,aAAQ,YAAR,mBAAiB,UAAS,UAC1B,aAAQ,YAAR,mBAAiB,UAAS,YAC1B,aAAQ,YAAR,mBAAiB,UAAS,IAC1B;AACA,yBAAS,uBAAuB;AAAA,cAClC,aACE,cAAS,YAAT,mBAAkB,UAAS,UAC3B,cAAS,YAAT,mBAAkB,UAAS,YAC3B,cAAS,YAAT,mBAAkB,UAAS,MAC3B,UAAS,cAAS,YAAT,mBAAkB,KAAK,KAAK,GACrC;AACA,yBAAS,wBAAwB;AAAA,cACnC,aACE,cAAS,YAAT,mBAAkB,UAAS,UAC3B,cAAS,YAAT,mBAAkB,UAAS,YAC3B,cAAS,YAAT,mBAAkB,UAAS,MAC3B,UAAS,cAAS,YAAT,mBAAkB,KAAK,KAAK,GACrC;AACA,yBAAS,wBAAwB;AAAA,cACnC,WACE,UAAS,cAAS,YAAT,mBAAkB,KAAK,IAChC,UAAS,cAAS,YAAT,mBAAkB,KAAK,GAChC;AACA,yBAAS,4CAA4C;AAAA,cACvD,WAAW,WAAW;AACpB,yBAAS,yCAAyC;AAAA,cACpD,OAAO;AACL,gCAAgB,aAAc,QAAS,KAAK;AAC5C,gCAAgB,SAAS,YAAa,QAAS,KAAK,CAAC;AACrD,+BAAe,SAAS,YAAa,QAAS,KAAK,CAAC;AACpD,6BAAa,UAAW,QAAS,KAAK;AACtC,2BAAW,QAAS,QAAS,KAAK;AAClC,4BAAY,UAAS,cAAS,YAAT,mBAAkB,KAAK,CAAC;AAC7C,4BAAY,UAAS,cAAS,YAAT,mBAAkB,KAAK,CAAC;AAC7C,kCAAkB,MAAM;AACxB,0BAAU,4BAA4B;AAAA,cACxC;AAAA,YACF;AAAA,YAEA;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,WAAW;AAAA,gBACX,YAAW;AAAA,gBACX,OAAO;AAAA,gBACP,WAAW;AAAA;AAAA,cALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMC;AAAA;AAAA,UAhFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAiFA;AAAA,WAjGF;AAAA;AAAA;AAAA;AAAA,aAkGA;AAAA,SA/KF;AAAA;AAAA;AAAA;AAAA,WAgLA,KAjLF;AAAA;AAAA;AAAA;AAAA,WAkLA;AAAA,OAnSF;AAAA;AAAA;AAAA;AAAA,SAoSA,KArSF;AAAA;AAAA;AAAA;AAAA,SAsSA;AAEJ;AAEA,IAAO,gBAAQ;",
  "names": ["import_react", "ReactSwitch"]
}
