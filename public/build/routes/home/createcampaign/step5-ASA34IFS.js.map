{
  "version": 3,
  "sources": ["../../../../../app/routes/home/createcampaign/step5.tsx"],
  "sourcesContent": ["import { faAdd, faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link, useNavigate } from \"@remix-run/react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport CreateCampaignStore from \"~/state/campaign/createcampaign\";\r\n\r\nconst Step5 = () => {\r\n  //brand info\r\n  const [bi, setbi] = useState<string>(\"\");\r\n  // campaign purpose\r\n  const [cp, setcp] = useState<string>(\"\");\r\n  // mentions\r\n  const mendtion: string[] = CreateCampaignStore((state) => state.mendtion);\r\n  // hashtag\r\n  const hashtag: string[] = CreateCampaignStore((state) => state.hashtag);\r\n  // should do\r\n  const dos: string[] = CreateCampaignStore((state) => state.dos);\r\n  // should do not\r\n  const donts: string[] = CreateCampaignStore((state) => state.donts);\r\n\r\n  const [error, setErrot] = useState<string | null>(null);\r\n  const [imgerror, setImgerror] = useState<string | null>(null);\r\n  let image = CreateCampaignStore((state) => state.image);\r\n  let addImage = CreateCampaignStore((state) => state.addImage);\r\n  let removeImage = CreateCampaignStore((state) => state.removeImage);\r\n\r\n  const brandInfo = useRef<HTMLTextAreaElement | null>(null);\r\n  let BrandInfo = CreateCampaignStore((state) => state.brandinfo);\r\n  let setBrandinfo = CreateCampaignStore((state) => state.setBrandinfo);\r\n\r\n  const CampaignPurpose = useRef<HTMLTextAreaElement | null>(null);\r\n  let campaignPurpose = CreateCampaignStore((state) => state.campaginPurpose);\r\n  let setCampaginPurpose = CreateCampaignStore(\r\n    (state) => state.setCampaginPurpose\r\n  );\r\n\r\n  let imgref = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    brandInfo!.current!.value = BrandInfo;\r\n\r\n    CampaignPurpose!.current!.value = campaignPurpose;\r\n  }, []);\r\n\r\n  const navigator = useNavigate();\r\n  return (\r\n    <>\r\n      <div className=\"flex gap-x-4 flex-col lg:flex-row\">\r\n        <div className=\"bg-white shadow-xl rounded-xl px-8 py-4 mt-4\">\r\n          <h1 className=\"text-primary text-lg font-medium\">Create campaign</h1>\r\n          <p className=\"text-primary text-md font-normal\">\r\n            The term business demography is used to cover a set of variables\r\n            which explain the characteristics and demography of the business\r\n            population.\r\n          </p>\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Brand info  <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span>\r\n          </h2>\r\n          <textarea\r\n            ref={brandInfo}\r\n            className=\"p-4 w-full h-40 outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n            onChange={(val) => setbi(val.target.value)}\r\n          ></textarea>\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Campaign purpose  <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span>\r\n          </h2>\r\n          <textarea\r\n            ref={CampaignPurpose}\r\n            className=\"p-4 w-full h-40 outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md resize-none\"\r\n            onChange={(val) => setcp(val.target.value)}\r\n          ></textarea>\r\n          <h2 className=\"text-primary tect-xl font-medium text-left my-1\">\r\n            Mood boards  <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span>\r\n          </h2>\r\n          <div className=\"hidden\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              ref={imgref}\r\n              onChange={(value) => {\r\n                let file_size = parseInt(\r\n                  (value!.target.files![0].size / 1024 / 1024).toString()\r\n                );\r\n                if (file_size < 4) {\r\n                  setImgerror(null);\r\n                  addImage(value!.target.files![0]);\r\n                } else {\r\n                  setImgerror(\"Image file size must be less then 4 mb\");\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"flex gap-x-4  overflow-x-scroll no-scrollbar w-[300px] lg:w-[600px] md:w-[400px]\">\r\n            {image.map((value: File, i: number) => {\r\n              var url = URL.createObjectURL(value);\r\n              return (\r\n                <div key={i}>\r\n                  <div className=\"w-32 h-32 bg-gray-200 rounded-xl grid place-items-center relative\">\r\n                    <div className=\"top-0 left-0 absolute h-full w-full\">\r\n                      <img\r\n                        src={url}\r\n                        alt=\"error\"\r\n                        className=\"w-full h-full rounded-xl object-cover\"\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className=\"cursor-pointer\"\r\n                      onClick={() => {\r\n                        removeImage(value);\r\n                      }}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        className=\"text-red-500 font-bold text-xl top-0 right-0 absolute\"\r\n                        icon={faCircleXmark}\r\n                      ></FontAwesomeIcon>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <div>\r\n              <div\r\n                className=\"w-32 h-32 bg-gray-200 rounded-xl grid place-items-center cursor-pointer\"\r\n                onClick={() => {\r\n                  imgref.current?.click();\r\n                }}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faAdd}\r\n                  className=\"text-gray-400 text-3xl font-bold text-center\"\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {imgerror == \"\" ||\r\n            imgerror == null ||\r\n            imgerror == undefined ? null : (\r\n            <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n              {imgerror}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <div className=\"lg:w-80 bg-white shadow-lx rounded-xl p-4 mt-4\">\r\n            <h1 className=\"text-primary text-lg font-medium\">\r\n              Campaign Summary\r\n            </h1>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Brand info</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {bi == \"\" ? \"--------\" : bi}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">\r\n                Campaign purpose\r\n              </p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {cp == \"\" ? \"--------\" : cp}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Hashtags</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {hashtag.map(\r\n                  (val: string, index: number, arr: string[]) =>\r\n                    `${val}${arr.length == index ? \"\" : \",\"}`\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">Mentions</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {mendtion.map(\r\n                  (val: string, index: number, arr: string[]) =>\r\n                    `${val}${arr.length == index ? \"\" : \",\"}`\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">You should do:</p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {dos.map(\r\n                  (val: string, index: number, arr: string[]) =>\r\n                    `${val}${arr.length == index ? \"\" : \",\"}`\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex my-4\">\r\n              <p className=\"text-sm text-primary font-normal\">\r\n                You should don't:\r\n              </p>\r\n              <div className=\"grow\"></div>\r\n              <p className=\"text-sm text-primary font-medium\">\r\n                {donts.map(\r\n                  (val: string, index: number, arr: string[]) =>\r\n                    `${val}${arr.length == index ? \"\" : \",\"}`\r\n                )}\r\n              </p>\r\n            </div>\r\n            {error == \"\" || error == null || error == undefined ? null : (\r\n              <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            <div className=\"flex w-full\">\r\n              <div\r\n                onClick={() => {\r\n                  navigator(-1);\r\n                }}\r\n                className=\"w-full\"\r\n              >\r\n                <CusButton\r\n                  text=\"Back\"\r\n                  textColor={\"text-black\"}\r\n                  background=\"bg-gray-100\"\r\n                  width={\"w-full\"}\r\n                  fontwidth={\"font-bold\"}\r\n                ></CusButton>\r\n              </div>\r\n              <div className=\"w-10\"></div>\r\n              <div\r\n                className=\"w-full\"\r\n                onClick={() => {\r\n                  if (\r\n                    brandInfo.current?.value == null ||\r\n                    brandInfo.current?.value == undefined ||\r\n                    brandInfo.current?.value == \"\"\r\n                  ) {\r\n                    setErrot(\"Fill the Brand Info\");\r\n                  } else if (\r\n                    CampaignPurpose.current?.value == null ||\r\n                    CampaignPurpose.current?.value == undefined ||\r\n                    CampaignPurpose.current?.value == \"\"\r\n                  ) {\r\n                    setErrot(\"Fill the Campaign Purpose.\");\r\n                  } else if (image.length == 0) {\r\n                    setErrot(\"Select at least one image.\");\r\n                  } else {\r\n                    setBrandinfo(brandInfo.current?.value);\r\n                    setCampaginPurpose(CampaignPurpose.current?.value);\r\n                    setErrot(null);\r\n                    navigator(\"/home/createcampaign/step6\");\r\n                  }\r\n                }}\r\n              >\r\n                <CusButton\r\n                  text=\"Next\"\r\n                  textColor={\"text-white\"}\r\n                  background=\"bg-secondary\"\r\n                  width={\"w-full\"}\r\n                  fontwidth={\"font-bold\"}\r\n                ></CusButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Step5;\r\n"],
  "mappings": "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",
  "names": ["import_react"]
}
