{
  "version": 3,
  "sources": ["../../../../app/routes/home/paymentreq.$brandId.$camId.$draftId.tsx"],
  "sourcesContent": ["import { faCoins } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport MyRating from \"~/components/utils/raiting\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n  const camId = props.params.camId;\r\n  const draftId = props.params.draftId;\r\n  const brandId = props.params.brandId;\r\n\r\n  const cookieHeader = props.request.headers.get(\"Cookie\");\r\n  const cookie = await userPrefs.parse(cookieHeader);\r\n\r\n  const camp = await axios({\r\n    method: \"post\",\r\n    url: `${BaseUrl}/api/campaign-search`,\r\n    data: { id: camId },\r\n  });\r\n\r\n  return json({\r\n    campaignId: camId,\r\n    userId: cookie.user.id,\r\n    draftId: draftId,\r\n    brandId: brandId,\r\n    cpp: camp.data.data[0].costPerPost,\r\n    currency: cookie.user.currency.code,\r\n    name: camp.data.data[0].campaignName,\r\n  });\r\n};\r\n\r\nenum UserDetailsType {\r\n  insights,\r\n  payments,\r\n  camapaign,\r\n}\r\n\r\nconst PaymentRequest: React.FC = (): JSX.Element => {\r\n  const loaderdata = useLoaderData();\r\n  const brandId = loaderdata.brandId;\r\n  const campaignId = loaderdata.campaignId;\r\n  const userId = loaderdata.userId;\r\n  const draftId = loaderdata.draftId;\r\n  const cpp = loaderdata.cpp;\r\n  const currency = loaderdata.currency;\r\n  const campaignName = loaderdata.name;\r\n\r\n  const [submit, setSubmit] = useState<boolean>(false);\r\n\r\n  const [userDetails, setUserDetails] = useState<UserDetailsType>(\r\n    UserDetailsType.insights\r\n  );\r\n\r\n  const init = async () => {\r\n    const req = {\r\n      search: {\r\n        type: \"3\",\r\n        campaign: campaignId,\r\n        brand: brandId,\r\n        influencer: userId,\r\n      },\r\n    };\r\n    const apireq = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/search-review`,\r\n      data: req,\r\n    });\r\n    if (apireq.data.data.length > 0) {\r\n      setSubmit(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full mt-4 shadow-xl bg-white rounded-xl\">\r\n        <div className=\"flex mx-4 gap-4\">\r\n          <div\r\n            onClick={() => {\r\n              setUserDetails(UserDetailsType.insights);\r\n            }}\r\n          >\r\n            <CusButton\r\n              text=\"Insights\"\r\n              background={`${\r\n                userDetails == UserDetailsType.insights\r\n                  ? \"bg-[#01FFF4]\"\r\n                  : \"bg-gray-100\"\r\n              }`}\r\n              fontwidth=\"font-bold\"\r\n              textColor={`${\r\n                userDetails == UserDetailsType.insights\r\n                  ? \"text-black\"\r\n                  : \"text-gray-600\"\r\n              }`}\r\n            ></CusButton>\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              setUserDetails(UserDetailsType.payments);\r\n            }}\r\n          >\r\n            <CusButton\r\n              text=\"Payments\"\r\n              background={`${\r\n                userDetails == UserDetailsType.payments\r\n                  ? \"bg-[#01FFF4]\"\r\n                  : \"bg-gray-100\"\r\n              }`}\r\n              fontwidth=\"font-bold\"\r\n              textColor={`${\r\n                userDetails == UserDetailsType.payments\r\n                  ? \"text-black\"\r\n                  : \"text-gray-600\"\r\n              }`}\r\n            ></CusButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-wrap gap-6 mt-6\">\r\n        {userDetails == UserDetailsType.insights ? (\r\n          <div></div>\r\n        ) : (\r\n          //   <Insights insights={userinsights}></Insights>\r\n          <></>\r\n        )}\r\n        {userDetails == UserDetailsType.payments ? (\r\n          <>\r\n            <Payments\r\n              brandId={brandId}\r\n              userId={userId}\r\n              campaignId={campaignId}\r\n              draftId={draftId}\r\n              cpp={cpp}\r\n              currency={currency}\r\n              campname={campaignName}\r\n            ></Payments>\r\n            {!submit ? (\r\n              <div>\r\n                <p className=\"text-md text-primary font-semibold py-1\">\r\n                  Rating\r\n                </p>\r\n                <div className=\"w-full h-[1px] bg-slate-300\"></div>\r\n                <MyRating\r\n                  campaignId={campaignId}\r\n                  brandId={brandId}\r\n                  influencerId={userId}\r\n                  reviewType=\"3\"\r\n                ></MyRating>\r\n              </div>\r\n            ) : null}\r\n            <Dispute\r\n              brandId={brandId}\r\n              userId={userId}\r\n              campaignId={campaignId}\r\n            ></Dispute>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentRequest;\r\n\r\ninterface PaymentProps {\r\n  campaignId: string;\r\n  userId: string;\r\n  draftId: string;\r\n  brandId: string;\r\n  cpp: string;\r\n  currency: string;\r\n  campname: string;\r\n}\r\n\r\nconst Payments: React.FC<PaymentProps> = (props: PaymentProps): JSX.Element => {\r\n  const [paymentBox, setPaymentBox] = useState<boolean>(false);\r\n  const [paymentError, setPaymentError] = useState<String>(\"\");\r\n  const paymentRef = useRef<HTMLInputElement>(null);\r\n  const [recived, setRecived] = useState<number>(0);\r\n  const [requested, serRequested] = useState<number>(0);\r\n  const init = async () => {\r\n    const reqdata = await axios.post(`${BaseUrl}/api/get-received-payment`, {\r\n      userId: props.userId,\r\n      draftId: props.draftId,\r\n    });\r\n\r\n    if (reqdata.data.status) {\r\n      setRecived(\r\n        parseInt(reqdata.data.data.totalAmtReq.toString().split(\".\")[0])\r\n      );\r\n    } else {\r\n      setRecived(0);\r\n    }\r\n    const reqdata1 = await axios.post(`${BaseUrl}/api/get-pending-payment`, {\r\n      userId: props.userId,\r\n      draftId: props.draftId,\r\n    });\r\n\r\n    if (reqdata1.data.status) {\r\n      serRequested(\r\n        parseInt(reqdata1.data.data.totalAmtReq.toString().split(\".\")[0])\r\n      );\r\n    } else {\r\n      serRequested(0);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div>\r\n        <p className=\"text-md text-primary font-semibold py-1\">Payments</p>\r\n        <div className=\"w-full h-[1px] bg-slate-300\"></div>\r\n        <div className=\"rounded-xl shadow-xl bg-white p-4 mt-2 w-96\">\r\n          <div className=\"flex\">\r\n            <FontAwesomeIcon\r\n              icon={faCoins}\r\n              className=\"text-xl text-primary\"\r\n            ></FontAwesomeIcon>\r\n            <h2 className=\"text-xl text-primary font-medium px-4\">Budget</h2>\r\n            <div className=\"grow\"></div>\r\n            <p className=\"text-md font-bold text-black\">\r\n              {props.cpp.toString().split(\".\")[0]} {props.currency}\r\n            </p>\r\n          </div>\r\n          <div className=\"h-[1px] bg-gray-500 w-full my-2 \"></div>\r\n          <div className=\"flex my-2\">\r\n            <p className=\"text-md text-primary\">Received</p>\r\n            <div className=\"grow\"></div>\r\n            <p className=\"text-md font-normal text-black\">\r\n              {recived} {props.currency}\r\n            </p>\r\n          </div>\r\n          <div className=\"flex my-2\">\r\n            <p className=\"text-md text-primary\">Pending</p>\r\n            <div className=\"grow\"></div>\r\n            <p className=\"text-md font-normal text-black\">\r\n              {parseInt(props.cpp.toString().split(\".\")[0]) - recived}{\" \"}\r\n              {props.currency}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-4 bg-white mt-2 rounded-md w-96\">\r\n          <p className=\"text-normal font-semibold py-1 text-primary text-lg\">\r\n            Payment request\r\n          </p>\r\n          <button\r\n            onClick={() => {\r\n              setPaymentBox(true);\r\n            }}\r\n            className={`text-black bg-[#01FFF4] rounded-lg w-full text-center py-2 font-semibold text-md mt-2 ${\r\n              paymentBox ? \"hidden\" : \"\"\r\n            }`}\r\n          >\r\n            Request\r\n          </button>\r\n          <div className={`${paymentBox ? \"\" : \"hidden\"}`}>\r\n            <div className=\"flex gap-x-4\">\r\n              <p>Enter Amount : </p>{\" \"}\r\n              <div>\r\n                <input\r\n                  ref={paymentRef}\r\n                  type=\"number\"\r\n                  className=\"text-black outline-none border-none rounded-md py-1 px-2 bg-gray-300 w-full\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {paymentError == \"\" ||\r\n            paymentError == null ||\r\n            paymentError == undefined ? null : (\r\n              <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                {paymentError}\r\n              </div>\r\n            )}\r\n            <button\r\n              onClick={async () => {\r\n                if (\r\n                  paymentRef.current?.value == null ||\r\n                  paymentRef.current?.value == undefined ||\r\n                  paymentRef.current?.value == \"\"\r\n                ) {\r\n                  setPaymentError(\"Enter the amount\");\r\n                } else if (\r\n                  parseInt(paymentRef.current?.value) >\r\n                  parseInt(props.cpp) - requested\r\n                ) {\r\n                  setPaymentError(\r\n                    \"Your requested is higher then pending amount.\"\r\n                  );\r\n                } else {\r\n                  let req = {\r\n                    userId: props.userId,\r\n                    campaignId: props.campaignId,\r\n                    amtReq: paymentRef.current?.value,\r\n                    draftId: props.draftId,\r\n                    brandId: props.brandId,\r\n                    paymentType: \"1\",\r\n                  };\r\n                  const paymentdata = await axios.post(\r\n                    `${BaseUrl}/api/new-pay-request`,\r\n                    req\r\n                  );\r\n                  if (!paymentdata.data.status)\r\n                    return setPaymentError(paymentdata.data.message);\r\n                  else {\r\n                    setPaymentError(\"\");\r\n                    paymentRef.current.value = \"\";\r\n                  }\r\n                  return setPaymentBox(false);\r\n                }\r\n              }}\r\n              className={`text-black bg-[#01FFF4] rounded-lg w-full text-center py-2 font-semibold text-md mt-2`}\r\n            >\r\n              Request Payment\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface DisputeProps {\r\n  userId: string;\r\n  brandId: string;\r\n  campaignId: string;\r\n}\r\nconst Dispute: React.FC<DisputeProps> = (props: DisputeProps): JSX.Element => {\r\n  const [error, setError] = useState<String | null>(null);\r\n  const [sus, setSus] = useState<String | null>(null);\r\n  const messageRef = useRef<HTMLTextAreaElement | null>(null);\r\n  const reasonRef = useRef<HTMLSelectElement | null>(null);\r\n  const submit = async () => {\r\n    if (\r\n      messageRef.current?.value == null ||\r\n      messageRef.current?.value == undefined ||\r\n      messageRef.current?.value == \"\"\r\n    ) {\r\n      setError(\"Fill the message.\");\r\n    } else if (\r\n      reasonRef.current?.value == null ||\r\n      reasonRef.current?.value == undefined ||\r\n      reasonRef.current?.value == \"\" ||\r\n      reasonRef.current?.value == \"0\"\r\n    ) {\r\n      setError(\"Select one reason.\");\r\n    } else {\r\n      const req = {\r\n        type: reasonRef.current?.value,\r\n        userId: props.userId,\r\n        brandId: props.brandId,\r\n        campaignId: props.campaignId,\r\n        isBrand: 0,\r\n        message: messageRef.current?.value,\r\n      };\r\n\r\n      const data = await axios({\r\n        method: \"post\",\r\n        url: `${BaseUrl}/api/add-dispute`,\r\n        data: req,\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Headers\": \"*\",\r\n          \"Access-Control-Allow-Options\": \"*\",\r\n          \"Access-Control-Allow-Methods\": \"*\",\r\n          \"X-Content-Type-Options\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"*\",\r\n        },\r\n      });\r\n      if (data.data.status == false) {\r\n        return setError(data.data.message);\r\n      } else {\r\n        setError(null);\r\n        setSus(\"Message sent!\");\r\n        reasonRef!.current!.value = \"\";\r\n        messageRef!.current!.value = \"\";\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <p className=\"text-md text-primary font-semibold py-1\">Dispute</p>\r\n        <div className=\"w-full h-[1px] bg-slate-300\"></div>\r\n        <div className=\"rounded-xl shadow-xl bg-white p-4 mt-2 w-96\">\r\n          <select\r\n            ref={reasonRef}\r\n            name=\"reason\"\r\n            id=\"reason\"\r\n            className=\"w-full rounded-md border-none outline-none bg-gray-100 py-2 my-2 px-2\"\r\n          >\r\n            <option value=\"1\">This is bad</option>\r\n            <option value=\"2\">This is so bad</option>\r\n            <option value=\"3\">This is extrimily bad</option>\r\n            <option value=\"4\">I just don't want it</option>\r\n          </select>\r\n          <textarea\r\n            ref={messageRef}\r\n            className=\"p-4 w-full h-40 outline-none border-2 border-gray-300 focus:border-gray-300 rounded-md resize-none\"\r\n            placeholder=\"Your message\"\r\n          ></textarea>\r\n          {error == \"\" || error == null || error == undefined ? null : (\r\n            <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          {sus == \"\" || sus == null || sus == undefined ? null : (\r\n            <div className=\"bg-green-500 bg-opacity-10 border-2 text-center border-green-500 rounded-md text-green-500 text-md font-normal text-md my-4\">\r\n              {sus}\r\n            </div>\r\n          )}\r\n          <div onClick={submit}>\r\n            <CusButton text=\"Send Message\" background=\"bg-primary\"></CusButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],
  "mappings": "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",
  "names": ["import_react"]
}
