{
  "version": 3,
  "sources": ["../../../../app/routes/home/profilecomplete.tsx"],
  "sourcesContent": ["import { LoaderArgs, LoaderFunction, json } from \"@remix-run/node\";\r\nimport {\r\n  Outlet,\r\n  useLoaderData,\r\n  useLocation,\r\n  useNavigate,\r\n} from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport UserInputStore from \"~/state/user/firstinput\";\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n  const cookieHeader = props.request.headers.get(\"Cookie\");\r\n  const cookie = await userPrefs.parse(cookieHeader);\r\n  return json({ user: cookie.user });\r\n};\r\n\r\nconst UserEditBox = () => {\r\n  const userdata = useLoaderData();\r\n  const isBrand = userdata.user.role[\"code\"] == \"50\" ? true : false;\r\n\r\n  const index = UserInputStore((state) => state.index);\r\n  const [img, setImg] = useState<string>(\"/images/avatar/profile1.png\");\r\n  const navigator = useLocation();\r\n  useEffect(() => {\r\n    if (\r\n      navigator.pathname == \"/home/profilecomplete/\" ||\r\n      navigator.pathname == \"/home/profilecomplete\"\r\n    ) {\r\n      setImg(\"/images/avatar/profile1.png\");\r\n    } else if (\r\n      navigator.pathname == \"/home/profilecomplete/secondpage/\" ||\r\n      navigator.pathname == \"/home/profilecomplete/secondpage\"\r\n    ) {\r\n      setImg(\"/images/avatar/profile2.png\");\r\n    } else if (\r\n      navigator.pathname == \"/home/profilecomplete/thirdpage/\" ||\r\n      navigator.pathname == \"/home/profilecomplete/thirdpage\"\r\n    ) {\r\n      setImg(\"/images/avatar/profile3.png\");\r\n    } else if (\r\n      navigator.pathname == \"/home/profilecomplete/forthpage/\" ||\r\n      navigator.pathname == \"/home/profilecomplete/forthpage\"\r\n    ) {\r\n      setImg(\"/images/avatar/profile4.png\");\r\n    } else if (\r\n      navigator.pathname == \"/home/profilecomplete/fifthpage/\" ||\r\n      navigator.pathname == \"/home/profilecomplete/fifthpage\"\r\n    ) {\r\n      setImg(\"/images/avatar/profile5.png\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full bg-white rounded-xl p-4 shadow-xl mt-6\">\r\n        <div className=\"w-full  rounded-lg flex shadow-lg my-4\">\r\n          <div\r\n            className={`text-lg text-center font-medium p-2 bg-secondary text-white  ${index == 1 ? \"w-2/5\" : \"\"\r\n              } ${index == 2 ? \"w-3/5\" : \"\"} ${index == 3 ? \"w-4/5\" : \"\"} ${index == 4 ? \"w-full\" : \"\"\r\n              } rounded-xl`}\r\n          >\r\n            {index == 1 ? \"0% Completed\" : \"\"}\r\n            {index == 2 ? \"25% Completed\" : \"\"}\r\n            {index == 3 ? \"50% Completed\" : \"\"}\r\n            {index == 4 ? \"75% Completed\" : \"\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex lg:flex-row flex-col\">\r\n          <div className=\"p-6  w-full hidden md:block\">\r\n            <div className=\"hidden place-items-center lg:grid \">\r\n              <img src={img} alt=\"error\" className=\"h-[400px]\" />\r\n            </div>\r\n            <h1 className=\"pt-4 text-3xl text-primary text-left font-semibold\">\r\n              Welcome\r\n            </h1>\r\n            <p className=\"pt-2 text-black text-xl font-normal\">\r\n              Thank you for the confirmation, Login with your account and start\r\n              searching for the brands.\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <div className=\"bg-white rounded-xl shadow-xl px-2 py-4 flex flex-row items-center lg:flex-col justify-between overflow-x-hidden no-scrollbar\">\r\n              <ProfileCompleteBox\r\n                isActive={index == 1 ? true : false}\r\n                positionumber={\"01\"}\r\n                title={\"Info\"}\r\n              ></ProfileCompleteBox>\r\n              <ProfileCompleteBox\r\n                isActive={index == 2 ? true : false}\r\n                positionumber={\"02\"}\r\n                title={\"Audience\"}\r\n              ></ProfileCompleteBox>\r\n              <ProfileCompleteBox\r\n                isActive={index == 3 ? true : false}\r\n                positionumber={\"03\"}\r\n                title={\"Social\"}\r\n              ></ProfileCompleteBox>\r\n              <ProfileCompleteBox\r\n                isActive={index == 4 ? true : false}\r\n                positionumber={\"04\"}\r\n                title={\"Document\"}\r\n              ></ProfileCompleteBox>\r\n              <ProfileCompleteBox\r\n                isActive={index == 5 ? true : false}\r\n                positionumber={\"05\"}\r\n                title={\"Contact\"}\r\n              ></ProfileCompleteBox>\r\n              {isBrand ? (\r\n                <ProfileCompleteBox\r\n                  isActive={index == 6 ? true : false}\r\n                  positionumber={\"06\"}\r\n                  title={\"Users\"}\r\n                ></ProfileCompleteBox>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <Outlet></Outlet>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditBox;\r\n\r\ntype ProfileCompleteBoxProps = {\r\n  isActive: boolean;\r\n  positionumber: string;\r\n  title: string;\r\n};\r\nconst ProfileCompleteBox = (props: ProfileCompleteBoxProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"px-3 py-2\">\r\n        <div\r\n          className={`grid place-items-center h-16 w-16 shadow-md rounded-md ${props.isActive ? \"bg-secondary\" : \"bg-gray-200\"\r\n            }`}\r\n        >\r\n          <p\r\n            className={`font-medium text-xl ${props.isActive ? \"text-white\" : \"text-black\"\r\n              }`}\r\n          >\r\n            {props.positionumber}\r\n          </p>\r\n        </div>\r\n        <h4\r\n          className={`text-sm text-center ${props.isActive ? \"text-black\" : \"text-gray-500\"\r\n            } mt-2`}\r\n        >\r\n          {props.title}\r\n        </h4>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],
  "mappings": "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",
  "names": ["import_react"]
}
