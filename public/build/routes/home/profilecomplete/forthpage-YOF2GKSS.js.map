{
  "version": 3,
  "sources": ["../../../../../app/routes/home/profilecomplete/forthpage.tsx"],
  "sourcesContent": ["import { faAdd, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  ActionArgs,\r\n  ActionFunction,\r\n  LoaderArgs,\r\n  LoaderFunction,\r\n  json,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport {\r\n  Form,\r\n  Link,\r\n  useLoaderData,\r\n  useLocation,\r\n  useNavigate,\r\n} from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { useRef, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport UserInputStore from \"~/state/user/firstinput\";\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n  const cookieHeader = props.request.headers.get(\"Cookie\");\r\n  const cookie = await userPrefs.parse(cookieHeader);\r\n  const country = await axios({\r\n    method: \"post\",\r\n    url: `${BaseUrl}/api/getcountry`,\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Headers\": \"*\",\r\n      \"Access-Control-Allow-Options\": \"*\",\r\n      \"Access-Control-Allow-Methods\": \"*\",\r\n      \"X-Content-Type-Options\": \"*\",\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"*\",\r\n    },\r\n  });\r\n\r\n  return json({ user: cookie.user, country: country.data.data });\r\n};\r\n\r\nconst ForthPage = () => {\r\n  const userdata = useLoaderData();\r\n  const userId: string = userdata.user.id;\r\n  const country = userdata.country;\r\n  const gender: String[] = [\"MALE\", \"FEMALE\", \"TRANSGENDER\"];\r\n  const isBrand = userdata.user.role[\"code\"] == \"50\" ? true : false;\r\n\r\n  const [selCountry, setSelCountry] = useState<any[]>([]);\r\n  const [con, setcon] = useState<boolean>(false);\r\n\r\n  const [selGender, setSelGender] = useState<any[]>([]);\r\n  const [gen, setgen] = useState<boolean>(false);\r\n\r\n  const [error, setError] = useState<String>(\"\");\r\n  const [cityerror, setCityerror] = useState<string | null>(null);\r\n  const [citybox, setCitybox] = useState<boolean>(false);\r\n  const [searchcity, setSearchcity] = useState<any[]>([]);\r\n  const [selectedcity, setSelectedctiy] = useState<any>(null);\r\n\r\n  const [contactnumber, setContactnumber] = useState<number>();\r\n  const handelcontent = (e: any) => {\r\n    setContactnumber(e.target.value.replace(/\\D/g, \"\"));\r\n  };\r\n\r\n  let cityref = useRef<HTMLInputElement | null>(null);\r\n  const getCity = async (city: String, countryId: string) => {\r\n    const data = await axios.post(`${BaseUrl}/api/get-city`, {\r\n      search: city,\r\n      countryId: countryId,\r\n    });\r\n    setSearchcity(data.data.data);\r\n  };\r\n\r\n  const setIndex = UserInputStore((state) => state.setIndex);\r\n  const navigate = useNavigate();\r\n  const [check, setCheck] = useState<boolean>(false);\r\n  const handleOnChange = () => {\r\n    setCheck(!check);\r\n  };\r\n\r\n  const nextButton = useRef<HTMLButtonElement>(null);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`w-full h-screen bg-black bg-opacity-25 fixed top-0 left-0  place-items-center ${citybox ? \"grid\" : \"hidden\"\r\n          }`}\r\n        onClick={val => setCitybox(false)}\r\n      >\r\n        <div className=\"bg-white shadow-md w-80 rounded-lg p-4\" onClick={(e) => e.stopPropagation()}>\r\n          {searchcity.length == 0 ? (\r\n            <div className=\"min-h-96\">\r\n              <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                No city found with this name\r\n              </div>\r\n              <button\r\n                className=\"px-2 mx-auto bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4 cursor-pointer\"\r\n                onClick={() => {\r\n                  setCitybox(false);\r\n                }}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"h-[350px] overflow-y-scroll no-scrollbar\">\r\n              {searchcity.map((value: any, index: number) => {\r\n                return (\r\n                  <>\r\n                    <div\r\n                      onClick={() => {\r\n                        setSelectedctiy(value);\r\n                        setCitybox(false);\r\n                        cityref!.current!.value = \"\";\r\n                      }}\r\n                      key={index}\r\n                      className=\"my-6 cursor-pointer bg-white rounded-md py-1 border-2 text-center font-normal text-md hover:border-emerald-500\"\r\n                    >\r\n                      {value[\"name\"]} - {value[\"code\"]}\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n\r\n              <div onClick={() => {\r\n                setCitybox(false);\r\n              }} className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center cursor-pointer\">Close</div>\r\n\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"p-8 w-full\">\r\n        <div className=\"flex w-full\">\r\n          <div className=\"w-full\">\r\n            {/* country start here */}\r\n            <p className=\"text-black text-left font-normal text-lg mt-4\">\r\n              Country  <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span>\r\n            </p>\r\n            <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n              <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                {selCountry.map((value: any, i: number) => {\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\"\r\n                    >\r\n                      <h1 className=\" text-black font-semibold text-center w-40\">\r\n                        {`${value[\"name\"]} - [${value[\"code\"]}]`}\r\n                      </h1>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"grow\"></div>\r\n              <div\r\n                className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\"\r\n                onClick={() => {\r\n                  setcon(true);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${con ? \"\" : \"hidden\"\r\n                } grid place-items-center`}\r\n              onClick={val => setcon(false)}\r\n            >\r\n              <div className=\"bg-white p-10 cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n                <div className=\"overflow-y-scroll no-scrollbar w-80 h-[350px]\">\r\n                  {country.map((val: any, i: number) => {\r\n                    return (\r\n                      <h1\r\n                        onClick={() => {\r\n                          setSelCountry((value) => [val]);\r\n                          setcon(false);\r\n                        }}\r\n                        key={i}\r\n                        className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selCountry.includes(val)\r\n                          ? \"border-green-500 text-green-500\"\r\n                          : \"border-gray-800 text-black\"\r\n                          }  no-scrollbar`}\r\n                      >\r\n                        {val[\"code\"]} - {val[\"name\"]}\r\n                      </h1>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    setcon(false);\r\n                  }}\r\n                  className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center cursor-pointer\"\r\n                >\r\n                  Close\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* country end here */}\r\n\r\n            {/* Gender start here */}\r\n            <p className=\"text-black text-left font-normal text-lg  mt-4\">\r\n              Gender  <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span>\r\n            </p>\r\n            <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n              <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                {selGender.map((value: any, i: number) => {\r\n                  return (\r\n                    <div\r\n                      key={i}\r\n                      className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\"\r\n                    >\r\n                      <h1 className=\" text-black font-semibold text-center w-40\">\r\n                        {value}\r\n                      </h1>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"grow\"></div>\r\n              <div\r\n                className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\"\r\n                onClick={() => {\r\n                  setgen(true);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${gen ? \"\" : \"hidden\"\r\n                } grid place-items-center`}\r\n              onClick={val => setgen(false)}\r\n            >\r\n              <div className=\"bg-white p-10 cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n                <div className=\"min-h-80 overflow-y-scroll no-scrollbar w-80\">\r\n                  {gender.map((val: any, i: number) => {\r\n                    return (\r\n                      <h1\r\n                        onClick={() => {\r\n                          if (selGender.includes(val)) {\r\n                            let addcur = selGender.filter(\r\n                              (data) => data != val\r\n                            );\r\n                            setSelGender(addcur);\r\n                          } else {\r\n                            setSelGender([val]);\r\n                          }\r\n                          setgen(false);\r\n                        }}\r\n                        key={i}\r\n                        className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selGender.includes(val)\r\n                          ? \"border-green-500 text-green-500\"\r\n                          : \"border-gray-800 text-black\"\r\n                          }  no-scrollbar`}\r\n                      >\r\n                        {val}\r\n                      </h1>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    setgen(false);\r\n                  }}\r\n                  className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center cursor-pointer\"\r\n                >\r\n                  Close\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Gender end here */}\r\n            {/* form city start here */}\r\n            <p className=\"text-black text-left font-normal text-lg  mt-4\">\r\n              City  <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span>\r\n            </p>\r\n            <div className=\"w-full bg-[#EEEEEE] rounded-md flex p-2\">\r\n              <div className=\"grow\">\r\n                <input\r\n                  ref={cityref}\r\n                  className=\"h-full w-full outline-none focus:border-gray-300 bg-transparent\"\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"bg-white text-bold p-2 rounded-md grid place-items-center w-8 h-8 cursor-pointer\"\r\n                onClick={() => {\r\n\r\n                  if (selCountry.length == 0) {\r\n                    setError(\"Select the country first\");\r\n                  } else if (\r\n                    cityref.current?.value == null ||\r\n                    cityref.current?.value == undefined ||\r\n                    cityref.current?.value == \"\"\r\n                  ) {\r\n                    setCityerror(\"Enter the city name\");\r\n                  } else {\r\n                    setCitybox(true);\r\n                    setCityerror(null);\r\n                    getCity(cityref.current?.value ?? \"\", selCountry[0].id);\r\n                  }\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            {cityerror == \"\" ||\r\n              cityerror == null ||\r\n              cityerror == undefined ? null : (\r\n              <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                {cityerror}\r\n              </div>\r\n            )}\r\n            {selectedcity == \"\" ||\r\n              selectedcity == null ||\r\n              selectedcity == undefined ? null : (\r\n              <div className=\"bg-white bg-opacity-10 border-2 text-center border-black rounded-md text-black text-md font-normal text-md my-4\">\r\n                {selectedcity[\"name\"]} - {selectedcity[\"code\"]}\r\n              </div>\r\n            )}\r\n            <p className=\"text-black text-left font-normal text-lg  mt-4\">\r\n              Phone number  <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span>\r\n            </p>\r\n            <div className=\"p-2 w-full outline-none bg-[#EEEEEE] focus:border-gray-300 rounded-md flex\">\r\n              <div className=\"text-center text-black font-normal text-md mr-4\">\r\n                {selectedcity == null ? 0 : selectedcity[\"country\"][\"isd\"]}\r\n              </div>\r\n              <input\r\n                onChange={handelcontent}\r\n                value={contactnumber}\r\n                type={\"text\"}\r\n                className=\"w-full outline-none bg-transparent focus:border-gray-300 rounded-md resize-none\"\r\n              />\r\n            </div>\r\n            {/* form city end here */}\r\n            {/* form end there */}\r\n            <div className=\"flex gap-2 mt-4 items-center\">\r\n              <div>\r\n                <input\r\n                  checked={check}\r\n                  onChange={handleOnChange}\r\n                  type={\"checkbox\"}\r\n                  name=\"check2\"\r\n                />\r\n              </div>\r\n              <p className=\"text-left text-[10px] text-black font-normal\">\r\n                The above details are true and correct\r\n              </p>\r\n            </div>\r\n            {error == \"\" || error == null || error == undefined ? null : (\r\n              <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            <div\r\n              className=\"w-full\"\r\n              onClick={async () => {\r\n                if (selCountry.length == 0) {\r\n                  setError(\"Select the country\");\r\n                } else if (gender.length == 0) {\r\n                  setError(\"Select your gender\");\r\n                } else if (selectedcity == null || selCountry == undefined) {\r\n                  setError(\"Select the city\");\r\n                } else if (\r\n                  contactnumber == null ||\r\n                  contactnumber == undefined ||\r\n                  contactnumber == 0\r\n                ) {\r\n                  setError(\"Fill the contact number\");\r\n                }\r\n                // else if (contactnumber.toString().length != 10) {\r\n                //   setError(\"Enter a 10 digit valid contact number\");\r\n                // } \r\n                else if (!check) {\r\n                  setError(\"Check the box in order to proceed\");\r\n                } else {\r\n                  let req = {\r\n                    id: userId,\r\n                    cityId: selectedcity[\"id\"],\r\n                    userContact: contactnumber,\r\n                    userGender:\r\n                      selGender[0] == \"MALE\"\r\n                        ? \"1\"\r\n                        : selGender[0] == \"FEMALE\"\r\n                          ? \"2\"\r\n                          : \"3\",\r\n                  };\r\n\r\n                  const data = await axios({\r\n                    method: \"post\",\r\n                    url: `${BaseUrl}/api/updateuser`,\r\n                    data: req,\r\n                    headers: {\r\n                      \"Access-Control-Allow-Origin\": \"*\",\r\n                      \"Access-Control-Allow-Headers\": \"*\",\r\n                      \"Access-Control-Allow-Options\": \"*\",\r\n                      \"Access-Control-Allow-Methods\": \"*\",\r\n                      \"X-Content-Type-Options\": \"*\",\r\n                      \"Content-Type\": \"application/json\",\r\n                      Accept: \"*\",\r\n                    },\r\n                  });\r\n                  if (data.data.status == false) {\r\n                    return setError(data.data.message);\r\n                  }\r\n                  setIndex(5);\r\n                  nextButton.current!.click();\r\n                }\r\n              }}\r\n            >\r\n              <CusButton\r\n                text={isBrand ? \"Next\" : \"Finish\"}\r\n                textColor={\"text-white\"}\r\n                width={\"w-full\"}\r\n                background={\"bg-primary\"}\r\n                fontwidth={\"font-bold\"}\r\n              ></CusButton>\r\n            </div>\r\n            <div className=\"hidden\">\r\n              <Form method=\"post\" className=\"hidden\">\r\n                <input type=\"hidden\" name=\"id\" value={userId.toString()} />\r\n                <input\r\n                  type=\"hidden\"\r\n                  name=\"address\"\r\n                  value={isBrand ? \"/home/profilecomplete/fifthpage\" : \"/home\"}\r\n                />\r\n                <button ref={nextButton} name=\"submit\">\r\n                  Submit\r\n                </button>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForthPage;\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n  const formData = await request.formData();\r\n  const value = Object.fromEntries(formData);\r\n\r\n  const userdata = await axios({\r\n    method: \"post\",\r\n    url: `${BaseUrl}/api/getuser`,\r\n    data: { id: value.id },\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Headers\": \"*\",\r\n      \"Access-Control-Allow-Options\": \"*\",\r\n      \"Access-Control-Allow-Methods\": \"*\",\r\n      \"X-Content-Type-Options\": \"*\",\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"*\",\r\n    },\r\n  });\r\n  if (userdata.data.status == false) {\r\n    return { message: userdata.data.message };\r\n  } else {\r\n    return redirect(value.address.toString(), {\r\n      headers: {\r\n        \"Set-Cookie\": await userPrefs.serialize({\r\n          user: userdata.data.data[0],\r\n          isLogin: true,\r\n        }),\r\n      },\r\n    });\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": ["import_react"]
}
