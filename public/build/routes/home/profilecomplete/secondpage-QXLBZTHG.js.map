{
  "version": 3,
  "sources": ["../../../../../app/routes/home/profilecomplete/secondpage.tsx"],
  "sourcesContent": ["import { faAdd, faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ActionArgs, ActionFunction, LoaderArgs, LoaderFunction, json, redirect } from \"@remix-run/node\";\r\nimport { Form, useLoaderData, useNavigate } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport he from \"he\";\r\nimport { useRef, useState } from \"react\";\r\nimport { CusButton } from \"~/components/utils/buttont\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\nimport UserInputStore from \"~/state/user/firstinput\";\r\n\r\n\r\nexport const loader: LoaderFunction = async (props: LoaderArgs) => {\r\n    const cookieHeader = props.request.headers.get(\"Cookie\");\r\n    const cookie = await userPrefs.parse(cookieHeader);\r\n\r\n    const accountRes = await axios({\r\n        method: 'post',\r\n        url: `${BaseUrl}/api/getcurrency`,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n\r\n\r\n    const categoryRes = await axios({\r\n        method: 'post',\r\n        url: `${BaseUrl}/api/getcategory`,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n    const languagesRes = await axios({\r\n        method: 'post',\r\n        url: `${BaseUrl}/api/getlanguage`,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n\r\n    const mainmarketRes = await axios({\r\n        method: 'post',\r\n        url: `${BaseUrl}/api/get-market`,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n    return json({ user: cookie.user, currency: accountRes.data.data, category: categoryRes.data.data, languages: languagesRes.data.data, market: mainmarketRes.data.data });\r\n}\r\n\r\n\r\nconst SecondPage = () => {\r\n\r\n\r\n    const loaderData = useLoaderData();\r\n    const userID: String = loaderData.user.id;\r\n\r\n    const currency = loaderData.currency;\r\n    const category = loaderData.category;\r\n    const languages = loaderData.languages;\r\n    const market = loaderData.market;\r\n\r\n\r\n\r\n    const setIndex = UserInputStore((state) => state.setIndex);\r\n    const navigator = useNavigate();\r\n    const [error, setError] = useState<String | null>(null);\r\n\r\n\r\n\r\n    const [selcurrency, setSelcurrency] = useState<any[]>([]);\r\n    const [selcategory, setSelcategory] = useState<any[]>([]);\r\n    const [sellanguages, setSellanguages] = useState<any[]>([]);\r\n    const [selmarket, setSelmarket] = useState<any[]>([]);\r\n    const [selorthermarket, setSelorthermarket] = useState<any[]>([]);\r\n\r\n    const [cur, setcur] = useState<boolean>(false);\r\n    const [cat, setcat] = useState<boolean>(false);\r\n    const [lan, setlan] = useState<boolean>(false);\r\n    const [mar, setmar] = useState<boolean>(false);\r\n    const [ort, setort] = useState<boolean>(false);\r\n\r\n    const nextButton = useRef<HTMLButtonElement>(null);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-8 w-full mx-auto\">\r\n                <div className=\"w-full max-w-[400px] mx-auto\">\r\n                    {/* main market start here */}\r\n                    <p className=\"text-black text-left font-normal text-lg mt-4\">Main market <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span></p>\r\n                    <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n                        <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                            {selmarket.map((value: any, i: number) => {\r\n                                return (\r\n                                    <div key={i} className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\">\r\n                                        <h1 className=\" text-black font-semibold text-center w-40\">\r\n                                            {`${value[\"name\"]} - [${value[\"code\"]}]`}\r\n                                        </h1>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"grow\"></div>\r\n                        <div className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\" onClick={() => {\r\n                            setmar(true);\r\n                        }}>\r\n                            <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${mar ? \"\" : \"hidden\"} grid place-items-center bg-red-500`} onClick={(val) => setmar(false)}>\r\n                        <div className=\"bg-white p-10 cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n                            <div className=\"overflow-y-scroll no-scrollbar w-80 h-[350px]\">\r\n                                {market.map((val: any, i: number) => {\r\n                                    return (\r\n                                        <h1 onClick={() => {\r\n                                            if (selmarket.includes(val)) {\r\n                                                let addcur = selmarket.filter((data) => data != val);\r\n                                                setSelmarket(addcur);\r\n                                            } else {\r\n                                                setSelmarket([val]);\r\n                                            }\r\n                                            setmar(false);\r\n                                        }} key={i} className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selmarket.includes(val) ? \"border-green-500 text-green-500\" : \"border-gray-800 text-black\"}  no-scrollbar`}>{val[\"code\"]} - {val[\"name\"]}</h1>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                setmar(false);\r\n                            }} className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center cursor-pointer\">Close</div>\r\n                        </div>\r\n                    </div>\r\n                    {/* main market end here */}\r\n\r\n                    {/* other market start here */}\r\n                    <p className=\"text-black text-left font-normal text-lg  mt-4\">Other markets <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span></p>\r\n                    <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n                        <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                            {selorthermarket.map((value: any, i: number) => {\r\n\r\n                                return (\r\n                                    <div key={i} className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\">\r\n                                        <h1 className=\" text-black font-semibold text-center w-40\">\r\n                                            {`${value[\"name\"]} - [${value[\"code\"]}]`}\r\n                                        </h1>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"grow\"></div>\r\n                        <div className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\" onClick={() => {\r\n                            setort(true);\r\n                        }}>\r\n                            <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${ort ? \"\" : \"hidden\"} grid place-items-center`} onClick={val => setort(false)}>\r\n                        <div className=\"bg-white p-10 cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n                            <div className=\"w-80 overflow-y-scroll no-scrollbar h-[350px]\">\r\n                                {market.map((val: any, i: number) => {\r\n                                    return (\r\n                                        <h1 onClick={() => {\r\n                                            if (selorthermarket.includes(val)) {\r\n                                                let addcur = selorthermarket.filter((data) => data != val);\r\n                                                setSelorthermarket(addcur);\r\n                                            } else {\r\n                                                setSelorthermarket([...selorthermarket, val]);\r\n                                            }\r\n                                        }} key={i} className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selorthermarket.includes(val) ? \"border-green-500 text-green-500\" : \"border-gray-800 text-black\"}  no-scrollbar`}>{val[\"code\"]} - {val[\"name\"]} </h1>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                setort(false);\r\n                            }} className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center cursor-pointer\">Close</div>\r\n                        </div>\r\n                    </div>\r\n                    {/* other market end here */}\r\n\r\n                    {/* category start here */}\r\n                    <p className=\"text-black text-left font-normal text-lg  mt-4\">Category <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span></p>\r\n                    <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n                        <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                            {selcategory.map((value: any, i: number) => {\r\n                                return (\r\n                                    <div key={i} className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\">\r\n                                        <h1 className=\" text-black font-semibold text-center w-40\">\r\n                                            {`${value[\"categoryName\"]} - [${value[\"categoryCode\"]}]`}\r\n                                        </h1>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"grow\"></div>\r\n                        <div className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\" onClick={() => {\r\n                            setcat(true);\r\n                        }}>\r\n                            <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${cat ? \"\" : \"hidden\"} grid place-items-center`} onClick={val => setcat(false)}>\r\n                        <div className=\"bg-white p-10 cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n                            <div className=\"w-80 overflow-y-scroll no-scrollbar h-[350px]\">\r\n                                {category.map((val: any, i: number) => {\r\n                                    return (\r\n                                        <h1 onClick={() => {\r\n                                            if (selcategory.includes(val)) {\r\n                                                let addcur = selcategory.filter((data) => data != val);\r\n                                                setSelcategory(addcur);\r\n                                            } else {\r\n                                                setSelcategory([...selcategory, val]);\r\n                                            }\r\n                                        }} key={i} className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selcategory.includes(val) ? \"border-green-500 text-green-500\" : \"border-gray-800 text-black\"}  no-scrollbar`}>{val[\"categoryCode\"]} - {val[\"categoryName\"]}   </h1>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                setcat(false);\r\n                            }} className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center cursor-pointer\">Close</div>\r\n                        </div>\r\n                    </div>\r\n                    {/* category end here */}\r\n                    {/* currency start here */}\r\n                    <p className=\"text-black text-left font-normal text-lg  mt-4\">Account currency <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span></p>\r\n                    <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n                        <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                            {selcurrency.map((value: any, i: number) => {\r\n                                return (\r\n                                    <div key={i} className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\">\r\n                                        <h1 className=\" text-black font-semibold text-center w-32\">\r\n                                            {`${value[\"currencyName\"]} - [${value[\"currencyCode\"]}]`}\r\n                                        </h1>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"grow\"></div>\r\n                        <div className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\" onClick={() => {\r\n                            setcur(true);\r\n                        }}>\r\n                            <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${cur ? \"\" : \"hidden\"} grid place-items-center`} onClick={val => setcur(false)}>\r\n                        <div className=\"bg-white p-10 cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n                            <div className=\"overflow-y-scroll no-scrollbar h-[350px]\">\r\n                                {currency.map((val: any, i: number) => {\r\n                                    return (\r\n                                        <h1 onClick={() => {\r\n                                            if (selcurrency.includes(val)) {\r\n                                                let addcur = selcurrency.filter((data) => data != val);\r\n                                                setSelcurrency(addcur);\r\n                                            } else {\r\n                                                setSelcurrency([val]);\r\n                                            }\r\n                                            setcur(false);\r\n                                        }} key={i} className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${selcurrency.includes(val) ? \"border-green-500 text-green-500\" : \"border-gray-800 text-black\"}  no-scrollbar`}>{val[\"currencyCode\"]} - {val[\"currencyName\"]}  {he.decode(val[\"currencyAsciiSymbol\"])} </h1>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                setcur(false);\r\n                            }} className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center cursor-pointer\">Close</div>\r\n                        </div>\r\n                    </div>\r\n                    {/* currency end here */}\r\n                    {/* languages start here */}\r\n                    <p className=\"text-black text-left font-normal text-lg  mt-4\">Languages <span className=\"text-rose-500 text-2xl font-semibold\">&#42;</span></p>\r\n                    <div className=\"bg-[#EEEEEE] h-10 rounded-lg  flex gap-1 pl-2 w-full\">\r\n                        <div className=\"flex gap-x-2 overflow-x-scroll flex-nowrap no-scrollbar\">\r\n                            {sellanguages.map((value: any, i: number) => {\r\n                                return (\r\n                                    <div key={i} className=\"flex bg-white my-1 rounded-md py-1 px-2 items-center gap-x-4\">\r\n                                        <h1 className=\" text-black font-semibold text-center w-32\">\r\n                                            {`${value[\"languageName\"]} - [${value[\"languageCode\"]}]`}\r\n                                        </h1>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"grow\"></div>\r\n                        <div className=\"grid place-items-center px-4 bg-gray-300 rounded-lg\" onClick={() => {\r\n                            setlan(true);\r\n                        }}>\r\n                            <FontAwesomeIcon icon={faAdd}></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    <p>Select any two</p>\r\n                    <div className={`w-full h-screen bg-gray-300 bg-opacity-20 fixed top-0 left-0 ${lan ? \"\" : \"hidden\"} grid place-items-center`} onClick={val => setlan(false)}>\r\n                        <div className=\"bg-white p-10 cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n                            <div className=\"w-80 overflow-y-scroll no-scrollbar h-[350px]\">\r\n                                {languages.map((val: any, i: number) => {\r\n                                    return (\r\n                                        <h1 onClick={() => {\r\n                                            if (sellanguages.includes(val)) {\r\n                                                let addcur = sellanguages.filter((data) => data != val);\r\n                                                setSellanguages(addcur);\r\n                                            } else {\r\n                                                setSellanguages([...sellanguages, val]);\r\n                                            }\r\n                                        }} key={i} className={`text-lg text-center font-normal rounded-md w-full my-2 border-2 ${sellanguages.includes(val) ? \"border-green-500 text-green-500\" : \"border-gray-800 text-black\"}  no-scrollbar`}>{val[\"languageCode\"]} - {val[\"languageName\"]}  {he.decode(val[\"languageAsciiSymbol\"])} </h1>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                setlan(false);\r\n                            }} className=\"my-4 bg-red-500 bg-opacity-10 b-2 border-red-500 px-4 py-1 text-red-500 font-medium text-center cursor-pointer\">Close</div>\r\n                        </div>\r\n                    </div>\r\n                    {/* languages end here */}\r\n                    {(error == \"\" || error == null || error == undefined) ? null :\r\n                        <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">{error}</div>\r\n                    }\r\n                    <div onClick={async () => {\r\n\r\n                        const ids = (myobj: any[]): String => {\r\n                            let res: String = \"\";\r\n                            for (let i = 0; i < myobj.length; i++) {\r\n                                if (i == myobj.length - 1) {\r\n                                    res += myobj[i][\"id\"];\r\n                                } else {\r\n                                    res += myobj[i][\"id\"] + \",\";\r\n                                }\r\n                            }\r\n                            return res;\r\n                        }\r\n                        if (selcurrency.length == 0) {\r\n                            setError(\"Select the currecny.\");\r\n                        } else if (selcategory.length == 0) {\r\n                            setError(\"Select the category.\")\r\n                        } else if (sellanguages.length == 0) {\r\n                            setError(\"Select the languages.\")\r\n                        } else if (selmarket.length == 0) {\r\n                            setError(\"Select the main market.\")\r\n                        } else if (selorthermarket.length == 0) {\r\n                            setError(\"Select the other markder\");\r\n                        } else {\r\n                            let req = {\r\n                                \"id\": userID,\r\n                                \"currencyId\": selcurrency[0][\"id\"],\r\n                                \"languages\": ids(sellanguages),\r\n                                \"categories\": ids(selcategory),\r\n                                \"marketId\": selmarket[0][\"id\"],\r\n                                \"markets\": ids(selorthermarket)\r\n                            };\r\n\r\n                            const data = await axios({\r\n                                method: 'post',\r\n                                url: `${BaseUrl}/api/updateuser`,\r\n                                data: req,\r\n                                headers: {\r\n                                    'Access-Control-Allow-Origin': '*',\r\n                                    'Access-Control-Allow-Headers': '*',\r\n                                    'Access-Control-Allow-Options': '*',\r\n                                    'Access-Control-Allow-Methods': '*',\r\n                                    'X-Content-Type-Options': '*',\r\n                                    'Content-Type': 'application/json',\r\n                                    'Accept': '*'\r\n                                }\r\n                            });\r\n                            if (data.data.status == false) {\r\n                                return setError(data.data.message);\r\n                            }\r\n                            setIndex(3);\r\n                            nextButton.current!.click();\r\n                        }\r\n                    }}>\r\n                        <CusButton text=\"Next\" textColor={\"text-white\"} width={'w-full'} background={\"bg-primary\"} fontwidth={\"font-bold\"}></CusButton>\r\n                    </div>\r\n                    <Form method=\"post\" className=\"hidden\">\r\n                        <input type=\"hidden\" name=\"id\" value={userID.toString()} />\r\n                        <button ref={nextButton} name=\"submit\">Submit</button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SecondPage;\r\n\r\nexport const action: ActionFunction = async ({ request }: ActionArgs) => {\r\n    const formData = await request.formData();\r\n    const value = Object.fromEntries(formData);\r\n\r\n    const userdata = await axios({\r\n        method: 'post',\r\n        url: `${BaseUrl}/api/getuser`,\r\n        data: { \"id\": value.id },\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Options': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'X-Content-Type-Options': '*',\r\n            'Content-Type': 'application/json',\r\n            'Accept': '*'\r\n        }\r\n    });\r\n    if (userdata.data.status == false) {\r\n        return { message: userdata.data.message };\r\n    } else {\r\n        return redirect(\"/home/profilecomplete/thirdpage\", {\r\n            headers: {\r\n                \"Set-Cookie\": await userPrefs.serialize({ user: userdata.data.data[0], isLogin: true }),\r\n            },\r\n        });\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["import_react", "he"]
}
