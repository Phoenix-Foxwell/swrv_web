{
  "version": 3,
  "sources": ["../../../app/components/home/footer/mainfooter.tsx", "../../../app/components/user/login.tsx", "../../../app/routes/login.tsx"],
  "sourcesContent": ["import { Link } from \"@remix-run/react\";\r\n\r\nexport const MainFooter = () => {\r\n    return (\r\n        <>\r\n            <div className=\"w-full flex py-6 px-8\">\r\n                <div className=\"flex flex-col sm:flex-row justify-center content-center items-center w-full\">\r\n                    <div>\r\n                        <Link to={\"/about\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">About</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={\"/tos\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">Terms of use</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={\"/pp\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">Privacy policy</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={\"/\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">Cookie policy</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={\"/\"} className=\"text-sm text-gray-600 text-center px-4 font-normal\">FAQ</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};", "import { Form, Link, useNavigate } from \"@remix-run/react\";\r\nimport { CusButton } from \"../utils/buttont\";\r\nimport { useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash, faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { auth } from \"~/services/firebase\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport * as EmailValidator from \"email-validator\";\r\n\r\ntype LoginBoxState = {\r\n  message: string | null | undefined;\r\n};\r\nexport const LoginBox = (props: LoginBoxState) => {\r\n  const navigator = useNavigate();\r\n  const [showpass, setShowPass] = useState<boolean>(false);\r\n  const changePassVisabel = () => {\r\n    setShowPass(!showpass);\r\n  };\r\n  const [error, setError] = useState<String | null>(null);\r\n  const socialLogin = async (email: string, pass: string) => {\r\n    const apidata = await axios.post(`${BaseUrl}/api/login`, {\r\n      email: email,\r\n      password: pass,\r\n    });\r\n    if (apidata.data.status) {\r\n      navigator(`/extra/sociallogin/${apidata.data.data.id}`);\r\n    } else {\r\n      setError(apidata.data.message);\r\n    }\r\n  };\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const [emailError, setEmailError] = useState<String | null>(null);\r\n  const [forgetPasswordBox, setForgetPasswordBox] = useState<boolean>(false);\r\n\r\n  const forgetPassword = async () => {\r\n    if (\r\n      emailRef.current?.value == null ||\r\n      emailRef.current?.value == undefined ||\r\n      emailRef.current?.value == \"\"\r\n    ) {\r\n      setEmailError(\"Fill the Brand info\");\r\n    } else if (!EmailValidator.validate(emailRef.current?.value)) {\r\n      setEmailError(\"Enter valid email\");\r\n    } else {\r\n      const apidata = await axios.post(`${BaseUrl}/api/send-forgot-password`, {\r\n        user: emailRef.current?.value,\r\n      });\r\n      if (!apidata.data.status) return setEmailError(apidata.data.message);\r\n      return setForgetPasswordBox(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`fixed top-0 left-0 bg-gray-600 bg-opacity-20 h-screen w-full grid place-items-center shadow-xl ${forgetPasswordBox ? \"\" : \"hidden\"\r\n          }`}\r\n        style={{ zIndex: 100 }}\r\n      >\r\n        <div className=\"bg-white rounded-lg p-8 w-96\">\r\n          <div className=\"flex\">\r\n            <div className=\"grow\"></div>\r\n            <div\r\n              onClick={() => {\r\n                setForgetPasswordBox(false);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <FontAwesomeIcon\r\n                className=\"text-black text-2xl font-bold\"\r\n                icon={faXmark}\r\n              ></FontAwesomeIcon>{\" \"}\r\n            </div>\r\n          </div>\r\n          <p className=\"text-black font-bold text-lg mt-4 text-center my-4\">\r\n            Forget password\r\n          </p>\r\n          <input\r\n            ref={emailRef}\r\n            type={\"email\"}\r\n            className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\"\r\n            placeholder=\"example@mail.com\"\r\n          />\r\n          {emailError == \"\" ||\r\n            emailError == null ||\r\n            emailError == undefined ? null : (\r\n            <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n              {emailError}\r\n            </div>\r\n          )}\r\n          <div onClick={forgetPassword}>\r\n            <CusButton\r\n              text=\"Send\"\r\n              textColor={\"text-white\"}\r\n              background={\"bg-primary\"}\r\n              fontwidth={\"font-bold\"}\r\n              width={\"w-full\"}\r\n            ></CusButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"relative\">\r\n        <div className=\" text-center text-[180px] -translate-y-4 font-black text-stroke absolute top-0 w-full md:-translate-y-20 md:text-[180px] text-[#eeeeee]\">\r\n          Welcome\r\n        </div>\r\n        <div className=\"w-full px-6 sm:px-16 grid  lg:grid-cols-3 md:w-4/6 lg:w-full mx-auto mb-20\">\r\n          <div className=\"hidden lg:flex\"></div>\r\n          <div className=\"bg-white rounded-xl shadow-xl py-6 px-10 relative mt-28\">\r\n            <Form method=\"post\">\r\n              {props.message && (\r\n                <p className=\"w-full border-2 border-red-500 bg-red-500 bg-opacity-5  text-center my-2 rounded-md p-2 text-sm font-semibold text-red-500\">\r\n                  {props.message}\r\n                </p>\r\n              )}\r\n              <p className=\"text-black text-left font-bold text-lg mt-4\">\r\n                Login\r\n              </p>\r\n              <p className=\"text-black text-left font-normal text-lg\">Email</p>\r\n              <input\r\n                name=\"email\"\r\n                type={\"email\"}\r\n                className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\"\r\n                placeholder=\"example@mail.com\"\r\n              />\r\n              <p className=\"text-black text-left font-normal text-lg mt-4\">\r\n                Password\r\n              </p>\r\n              <div className=\"bg-gray-200 rounded-md px-4 py-2 flex\">\r\n                <input\r\n                  name=\"password\"\r\n                  type={showpass ? \"text\" : \"password\"}\r\n                  className=\"bg-transparent outline-none border-none focus:border-gray-300 rounded-md w-full\"\r\n                  placeholder=\"8 character\"\r\n                />\r\n                <div\r\n                  className=\"text-gray-600 text-center px-1 text-md\"\r\n                  onClick={changePassVisabel}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    icon={showpass ? faEye : faEyeSlash}\r\n                  ></FontAwesomeIcon>\r\n                </div>\r\n              </div>\r\n              <div className=\"grid place-items-center py-2\">\r\n                <div className=\"flex content-center gap-4\">\r\n                  {/* <img src=\"/images/media/facebook.png\" alt=\"error\" className=\"w-10 h-10\" /> */}\r\n                </div>\r\n              </div>\r\n\r\n              {error == \"\" || error == null || error == undefined ? null : (\r\n                <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex gap-4 items-center mt-8\">\r\n                <div className=\"grid place-items-center\">\r\n                  <button className=\"w-full inline black rounded-lg bg-secondary shadow-lg text-center font-semibold text-white text-xl py-2 px-8\">\r\n                    Login\r\n                  </button>\r\n                </div>\r\n                <div className=\"grow\"></div>\r\n                <p className=\"text-black text-left font-normal text-lg  allign-center\">\r\n                  Login with\r\n                </p>\r\n                <div\r\n                  onClick={async () => {\r\n                    const googleProvider = new GoogleAuthProvider();\r\n                    const res = await signInWithPopup(auth, googleProvider);\r\n                    const pass =\r\n                      res.user.displayName\r\n                        ?.trim()\r\n                        .split(\" \")\r\n                        .join(\"\")\r\n                        .toLowerCase()\r\n                        .trim() + \"SWRV123@#\";\r\n                    try {\r\n                      await socialLogin(res.user.email!, pass);\r\n                    } catch (e: any) {\r\n                      setError(e.toString());\r\n                    }\r\n                  }}\r\n                >\r\n                  <img\r\n                    src=\"/images/icons/google.png\"\r\n                    alt=\"error\"\r\n                    className=\"w-10 h-10\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center mt-4 mb-10\">\r\n                <input type=\"checkbox\" />\r\n                <div className=\"w-2\"></div>\r\n                <p className=\"text-black text-left font-normal text-xs\">Keep me logged in</p>\r\n                <div className=\"grow\"></div>\r\n                <p className=\"text-black text-left font-normal text-xs\">\r\n                  CAN'T LOG IN?{\" \"}\r\n                  <span\r\n                    onClick={() => {\r\n                      setForgetPasswordBox(true);\r\n                    }}\r\n                    className=\"font-bold cursor-pointer\"\r\n                  >\r\n                    RESTORE PASSWORD\r\n                  </span>\r\n                </p>\r\n              </div>\r\n\r\n              <p className=\"text-black text-left font-bold text-sm mt-6\">\r\n                Don't have an account?\r\n              </p>\r\n              <div>\r\n                <Link to={\"/register\"}>\r\n                  <CusButton\r\n                    text=\"Join\"\r\n                    textColor={\"text-white\"}\r\n                    background={\"bg-primary\"}\r\n                    fontwidth={\"font-bold\"}\r\n                    width={\"w-32\"}\r\n                  ></CusButton>\r\n                </Link>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n          <div className=\"hidden lg:block\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n", "import { useActionData } from \"@remix-run/react\";\r\nimport { MainFooter } from \"~/components/home/footer/mainfooter\";\r\nimport { IntroNavBar } from \"~/components/home/navbar/intronavbar\";\r\nimport { LoginBox } from \"~/components/user/login\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport { ActionArgs, LoaderArgs, redirect } from \"@remix-run/node\";\r\nimport axios from \"axios\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\n\r\nconst login = () => {\r\n  const data = useActionData();\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col min-h-screen bg-[#eeeeee]\">\r\n        <div className=\"z-50\">\r\n          <IntroNavBar></IntroNavBar>\r\n        </div>\r\n        <LoginBox message={data?.message}></LoginBox>\r\n        <div className=\"grow\"></div>\r\n        <MainFooter></MainFooter>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const cookie = await userPrefs.parse(cookieHeader);\r\n  if (cookie) {\r\n    if (cookie.isLogin) {\r\n      return redirect(\"/home\");\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const action = async ({ request }: ActionArgs) => {\r\n  const formData = await request.formData();\r\n  const value = Object.fromEntries(formData);\r\n  if (\r\n    value.email == null ||\r\n    value.email == \"\" ||\r\n    !EmailValidator.validate(value.email.toString()) ||\r\n    value.email == undefined\r\n  ) {\r\n    return { message: \"Enter a valid email.\" };\r\n  }\r\n  if (\r\n    value.password == \"\" ||\r\n    value.password == null ||\r\n    value.password == undefined\r\n  ) {\r\n    return { message: \"Enter the password\" };\r\n  }\r\n  try {\r\n    const data = await axios.post(`${BaseUrl}/api/login`, {\r\n      email: value.email,\r\n      password: value.password,\r\n    });\r\n    if (data.data.status == false) {\r\n      return { message: data.data.message };\r\n    } else {\r\n      const userdata = await axios({\r\n        method: \"post\",\r\n        url: `${BaseUrl}/api/getuser`,\r\n        data: { id: data.data.data.id },\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Headers\": \"*\",\r\n          \"Access-Control-Allow-Options\": \"*\",\r\n          \"Access-Control-Allow-Methods\": \"*\",\r\n          \"X-Content-Type-Options\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"*\",\r\n        },\r\n      });\r\n      return redirect(\"/home\", {\r\n        headers: {\r\n          \"Set-Cookie\": await userPrefs.serialize({\r\n            user: userdata.data.data[0],\r\n            isLogin: true,\r\n          }),\r\n        },\r\n      });\r\n    }\r\n  } catch (e) {\r\n    return { message: e };\r\n  }\r\n};\r\nexport default login;\r\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "EmailValidator", "import_jsx_dev_runtime"]
}
