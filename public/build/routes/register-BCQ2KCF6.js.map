{
  "version": 3,
  "sources": ["../../../app/components/user/register.tsx", "../../../app/routes/register.tsx"],
  "sourcesContent": ["import { Form, Link, useNavigate } from \"@remix-run/react\";\r\nimport { CusButton } from \"../utils/buttont\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { auth } from \"~/services/firebase\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport axios from \"axios\";\r\n\r\ntype RegisterBoxState = {\r\n  message: string | null | undefined;\r\n  isBrand: boolean;\r\n};\r\nexport const RegisterBox = (props: RegisterBoxState) => {\r\n  const navigator = useNavigate();\r\n  const [isBrand, setBrand] = useState(false);\r\n  const cat = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n\r\n    if (props.isBrand) {\r\n      cat.current!.value = \"brand\";\r\n      setBrand(true);\r\n    } else {\r\n      cat.current!.value = \"inf\";\r\n      setBrand(false);\r\n    }\r\n  }, []);\r\n\r\n  const [error, setError] = useState<String | null>(null);\r\n\r\n  const [showpassone, setShowPassone] = useState<boolean>(false);\r\n  const changePassVisabelone = () => {\r\n    setShowPassone(!showpassone);\r\n  };\r\n\r\n  const [showpasstwo, setShowPasstwo] = useState<boolean>(false);\r\n  const changePassVisabeltwo = () => {\r\n    setShowPasstwo(!showpasstwo);\r\n  };\r\n\r\n  const socialRegister = async (email: string, pass: string) => {\r\n    let req = {\r\n      email: email,\r\n      password: pass,\r\n      \"confirm-password\": pass,\r\n      isBrand: \"0\",\r\n      isInfluencer: \"1\",\r\n    };\r\n    const apidata = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/register`,\r\n      data: req,\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Headers\": \"*\",\r\n        \"Access-Control-Allow-Options\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"*\",\r\n        \"X-Content-Type-Options\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"*\",\r\n      },\r\n    });\r\n    if (apidata.data.status) {\r\n      navigator(`/extra/socialregister/${apidata.data.data.id}`);\r\n    } else {\r\n      setError(apidata.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full px-6 sm:px-16 grid  lg:grid-cols-3  md:w-4/6 lg:w-full mx-auto mb-20 mt-4\">\r\n        <div className=\"hidden flex-col lg:flex\">\r\n          <div className=\"grow\"></div>\r\n          <div className=\"flex\">\r\n            <div className=\"grow\"></div>\r\n            <img\r\n              src=\"/images/avatar/login.png\"\r\n              alt=\"err\"\r\n              className=\"justify-self-end w-[250px] h-[400px]\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white rounded-xl shadow-xl py-6 px-10\">\r\n          <div className=\"flex\">\r\n            <div\r\n              className=\"w-full\"\r\n              onClick={() => {\r\n                cat.current!.value = \"inf\";\r\n                setBrand(false);\r\n              }}\r\n            >\r\n              <CusButton\r\n                width={\"w-full\"}\r\n                text=\"Influencer\"\r\n                background={`${isBrand ? \"\" : \"bg-secondary\"}`}\r\n                textColor={`${isBrand ? \"text-primary\" : \"text-white\"}`}\r\n                borderColor={`${isBrand ? \"border-primary\" : \"\"}`}\r\n                fontwidth=\"font-bold\"\r\n              ></CusButton>\r\n            </div>\r\n            <div className=\"w-10\"></div>\r\n            <div\r\n              className=\"w-full\"\r\n              onClick={() => {\r\n                cat.current!.value = \"brand\";\r\n                setBrand(true);\r\n              }}\r\n            >\r\n              <CusButton\r\n                width={\"w-full\"}\r\n                text=\"Brand\"\r\n                textColor={`${isBrand ? \"text-white\" : \"text-primary\"}`}\r\n                background={`${isBrand ? \"bg-secondary\" : \"\"}`}\r\n                borderColor={`${isBrand ? \"\" : \"border-primary\"}`}\r\n                fontwidth=\"font-bold\"\r\n              ></CusButton>\r\n            </div>\r\n          </div>\r\n          <Form method=\"post\">\r\n            <input name=\"cat\" ref={cat} type=\"hidden\" />\r\n            <p className=\"text-black text-left font-bold text-lg mt-4\">Join</p>\r\n            <p className=\"text-black text-left font-normal text-lg\">\r\n              {\" \"}\r\n              {isBrand ? \"Brand Email\" : \"Email\"}\r\n            </p>\r\n            <input\r\n              name=\"email\"\r\n              type={\"text\"}\r\n              className=\"bg-[#EEEEEE]  outline-none border-none focus:border-gray-300 rounded-md w-full p-2\"\r\n              placeholder=\"example@mail.com\"\r\n            />\r\n            <p className=\"text-black text-left font-normal text-lg mt-4\">\r\n              Password\r\n            </p>\r\n            <div className=\"bg-gray-200 rounded-md px-4 py-2 flex\">\r\n              <input\r\n                name=\"password\"\r\n                type={showpassone ? \"text\" : \"password\"}\r\n                className=\"bg-transparent outline-none border-none focus:border-gray-300 rounded-md w-full\"\r\n                placeholder=\"8 character\"\r\n              />\r\n              <div\r\n                className=\"text-gray-600 text-center px-1 rounded-md shadow-lg text-md cursor-pointer\"\r\n                onClick={changePassVisabelone}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={showpassone ? faEye : faEyeSlash}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-black text-left font-normal text-lg mt-4\">\r\n              Confirm password\r\n            </p>\r\n            <div className=\"bg-gray-200 rounded-md px-4 py-2 flex\">\r\n              <input\r\n                name=\"repassword\"\r\n                type={showpasstwo ? \"text\" : \"password\"}\r\n                className=\"bg-transparent outline-none border-none focus:border-gray-300 rounded-md w-full\"\r\n                placeholder=\"8 character\"\r\n              />\r\n              <div\r\n                className=\"text-gray-600 text-center px-1 rounded-md shadow-lg text-md cursor-pointer\"\r\n                onClick={changePassVisabeltwo}\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={showpasstwo ? faEye : faEyeSlash}\r\n                ></FontAwesomeIcon>\r\n              </div>\r\n            </div>\r\n            {!isBrand ? (\r\n              <>\r\n                <div className=\"grid place-items-center py-4\">\r\n                  <div className=\"flex content-center gap-4\">\r\n                    <div className=\"grid place-items-center\">\r\n                      <p className=\"text-black text-left font-normal text-lg  allign-center\">\r\n                        Login with\r\n                      </p>\r\n                    </div>\r\n                    {/* <img src=\"/images/icons/apple.png\" alt=\"error\" className=\"w-10 h-10\" /> */}\r\n                    <div\r\n                      onClick={async () => {\r\n                        const googleProvider = new GoogleAuthProvider();\r\n                        const res = await signInWithPopup(auth, googleProvider);\r\n                        const pass =\r\n                          res.user.displayName\r\n                            ?.trim()\r\n                            .split(\" \")\r\n                            .join(\"\")\r\n                            .toLowerCase()\r\n                            .trim() + \"SWRV123@#\";\r\n                        try {\r\n                          await socialRegister(res.user.email!, pass);\r\n                        } catch (e: any) {\r\n                          setError(e.toString());\r\n                        }\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src=\"/images/icons/google.png\"\r\n                        alt=\"error\"\r\n                        className=\"w-10 h-10 cursor-pointer\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n            {error == \"\" || error == null || error == undefined ? null : (\r\n              <div className=\"bg-red-500 bg-opacity-10 border-2 text-center border-red-500 rounded-md text-red-500 text-md font-normal text-md my-4\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            {props.message && (\r\n              <p className=\"w-full border-2 border-red-500 bg-red-500 bg-opacity-5  text-center my-2 rounded-md p-2 text-sm font-semibold text-red-500\">\r\n                {props.message}\r\n              </p>\r\n            )}\r\n            <div className=\"h-4\"></div>\r\n            <button className=\"w-full inline black rounded-lg bg-primary shadow-lg text-center font-bold text-white text-md py-2 \">\r\n              Create Account\r\n            </button>\r\n            <div className=\"flex gap-4 content-start mt-4\">\r\n              <div>\r\n                <input type={\"checkbox\"} name=\"check1\" />\r\n              </div>\r\n              <label className=\"text-left text-[10px] text-black font-normal\">\r\n                I agree with Terms of use and acknowledge that my personal data\r\n                is being collected and processed in accordance with Privacy\r\n                policy\r\n              </label>\r\n            </div>\r\n            <div className=\"flex gap-4 mt-4 items-start\">\r\n              <div>\r\n                <input type={\"checkbox\"} name=\"check2\" />\r\n              </div>\r\n              <p className=\"text-left text-[10px] text-black font-normal\">\r\n                Also, I confirm I am of eligible age\r\n              </p>\r\n            </div>\r\n            <div className=\"text-black text-left font-normal text-lg mt-8 flex flex-wrap gap-x-4 w-full\">\r\n              <p className=\" whitespace-nowrap\">\r\n                I\u2019m already registered.\r\n              </p>\r\n              <Link to={\"/login\"} className=\"block  whitespace-nowrap\">\r\n                <span className=\"font-bold\">Let me Log in</span>\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n        <div className=\"hidden lg:block\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n", "import {\r\n  ActionArgs,\r\n  LoaderArgs,\r\n  LoaderFunction,\r\n  json,\r\n  redirect,\r\n} from \"@remix-run/node\";\r\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\r\nimport axios from \"axios\";\r\nimport { IntroNavBar } from \"~/components/home/navbar/intronavbar\";\r\nimport { RegisterBox } from \"~/components/user/register\";\r\nimport { BaseUrl } from \"~/const\";\r\nimport { userPrefs } from \"~/cookies\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }: LoaderArgs) => {\r\n  const isBrand = new URL(request.url).searchParams.get(\"isBrand\");\r\n  const isInf = new URL(request.url).searchParams.get(\"isInf\");\r\n  let brand = isBrand == \"1\" ? true : false;\r\n  let inf = isInf == \"1\" ? true : false;\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const cookie = await userPrefs.parse(cookieHeader);\r\n  if (cookie) {\r\n    if (cookie.isLogin) {\r\n      return redirect(\"/home\");\r\n    }\r\n  }\r\n  return json({ brand: brand, inf: inf });\r\n};\r\n\r\nconst register = () => {\r\n  const loaderData = useLoaderData();\r\n  const data = useActionData();\r\n\r\n  return (\r\n    <div className=\"bg-[#eeeeee] min-h-screen\">\r\n      <IntroNavBar></IntroNavBar>\r\n      <RegisterBox\r\n        isBrand={loaderData.brand ? true : false}\r\n        message={data?.message}\r\n      ></RegisterBox>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default register;\r\n\r\nexport const action = async ({ request }: ActionArgs) => {\r\n  const formData = await request.formData();\r\n  const value = Object.fromEntries(formData);\r\n\r\n  if (value.email == \"\" || value.email == null || value.email == undefined) {\r\n    return { message: \"Enter the email\" };\r\n  }\r\n  if (\r\n    value.password == \"\" ||\r\n    value.password == null ||\r\n    value.password == undefined\r\n  ) {\r\n    return { message: \"Enter the password\" };\r\n  }\r\n  if (\r\n    value.repassword == \"\" ||\r\n    value.repassword == null ||\r\n    value.repassword == undefined\r\n  ) {\r\n    return { message: \"Enter the repassword\" };\r\n  }\r\n  if (value.check1 != \"on\" || value.check2 != \"on\") {\r\n    return { message: \"Check and Confirm the agreement(s)\" };\r\n  }\r\n  if (value.password != value.repassword) {\r\n    return { message: \"Password and Re-password should be same\" };\r\n  }\r\n\r\n  let req: { [key: string]: string } = {};\r\n\r\n  if (value.cat == \"inf\") {\r\n    req = {\r\n      email: value.email.toString(),\r\n      password: value.password.toString(),\r\n      \"confirm-password\": value.repassword.toString(),\r\n      isBrand: \"0\",\r\n      isInfluencer: \"1\",\r\n    };\r\n  }\r\n  if (value.cat == \"brand\") {\r\n    req = {\r\n      email: value.email.toString(),\r\n      password: value.password.toString(),\r\n      \"confirm-password\": value.repassword.toString(),\r\n      isBrand: \"1\",\r\n      isInfluencer: \"0\",\r\n    };\r\n  }\r\n  try {\r\n    //registring the user\r\n    const apidata = await axios({\r\n      method: \"post\",\r\n      url: `${BaseUrl}/api/register`,\r\n      data: req,\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Headers\": \"*\",\r\n        \"Access-Control-Allow-Options\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"*\",\r\n        \"X-Content-Type-Options\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"*\",\r\n      },\r\n    });\r\n\r\n    if (apidata.data.status == false) {\r\n      return { message: apidata.data.message };\r\n    } else {\r\n      //getting data and storing in cookies\r\n      const userdata = await axios({\r\n        method: \"post\",\r\n        url: `${BaseUrl}/api/getuser`,\r\n        data: { id: apidata.data.data.id },\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Headers\": \"*\",\r\n          \"Access-Control-Allow-Options\": \"*\",\r\n          \"Access-Control-Allow-Methods\": \"*\",\r\n          \"X-Content-Type-Options\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"*\",\r\n        },\r\n      });\r\n\r\n      const sendverificationmail = await axios({\r\n        method: \"post\",\r\n        url: `${BaseUrl}/api/send-otp`,\r\n        data: { userId: apidata.data.data.id },\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Headers\": \"*\",\r\n          \"Access-Control-Allow-Options\": \"*\",\r\n          \"Access-Control-Allow-Methods\": \"*\",\r\n          \"X-Content-Type-Options\": \"*\",\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"*\",\r\n        },\r\n      });\r\n\r\n      if (userdata.data.status == false) {\r\n        return { message: userdata.data.message };\r\n      } else if (sendverificationmail.data.status == false) {\r\n        return { message: sendverificationmail.data.message };\r\n      } else {\r\n        if (value.cat == \"inf\") {\r\n          return redirect(`/welcome/${userdata.data.data[0][\"email\"]}`, {\r\n            headers: {\r\n              \"Set-Cookie\": await userPrefs.serialize({\r\n                user: userdata.data.data[0],\r\n                isLogin: true,\r\n              }),\r\n            },\r\n          });\r\n        } else {\r\n          return redirect(\"/createbrand\", {\r\n            headers: {\r\n              \"Set-Cookie\": await userPrefs.serialize({\r\n                user: userdata.data.data[0],\r\n                isLogin: true,\r\n              }),\r\n            },\r\n          });\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    return { message: e };\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime"]
}
